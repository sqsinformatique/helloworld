{"version":3,"sources":["img/persik.png","Routes.js","panels/Home.js","panels/Client.js","panels/Сourier.js","panels/Business.js","panels/Geodata.js","panels/CourierGeodata.js","panels/BusinessGeodata.js","App.js","index.js"],"names":["module","exports","ROUTES","Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","expandable","onClick","data-to","osName","platform","IOS","ANDROID","Fragment","Client","props","state","this","left","header","getClientOrders","map","order","disabled","multiline","size","text","shop","caption","date","after","actions","e","number","React","Component","Сourier","noShadow","getCourierOrders","Business","getBusinessOrders","courier_name","mapState","center","zoom","controls","GeodataClient","courier_id","courier_geodata","lat","long","geoUpdateInterval","setInterval","fetchCourierGeo","setState","clientGeodata","courierGeodata","client","courier","console","log","query","apikey","load","width","height","defaultState","className","instanceRef","ref","routePanel","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","geoMap","target","GeodataCourier","GeodataBusiness","location","window","hash","substr","App","setLocation","route","bridge","send","object","currentTarget","dataset","client_order","courier_order","client_order_for_business","activePanel","indexOf","popout","activeStory","onStoryChange","bind","user","story","tabbar","selected","data-story","data","Geodata","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1000e7e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline'\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Где курьер?</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Cell expandable before={<Icon28UserOutline/>} onClick={go} data-to=\"client\">\n\t\t\t\t\tЯ клиент\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28MarketOutline/>} onClick={go} data-to=\"courier\">\n\t\t\t\t\tЯ курьер\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"business\">\n\t\t\t\t\tЯ бизнес\n\t\t\t\t</Cell>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/24/settings';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport persik from '../img/persik.png';\nimport './Client.css';\n\nconst osName = platform();\n\nvar miniPanel;\nif (osName !== IOS || osName !== ANDROID) {\n\tminiPanel = <React.Fragment>\n\t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n\t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n\t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n\t</React.Fragment>\n}\n\nclass Client extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tgetClientOrders() {\n\t\tconst clientOrders = [\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\n\t\t\t\t\"date\": '06.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '5488779',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 123,\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\n\t\t\t\t\"date\": '08.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '34643-643',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 124,\n\t\t\t},\n\t\t]\n\t\treturn clientOrders\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t// right={miniPanel}\n\t\t\t\t>\n\t\t\t\t\tКлиент\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\n\t\t\t\t\t{this.getClientOrders().map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.shop}\n\t\t\t\t\t\t\tcaption={order.date}\n\t\t\t\t\t\t\tafter={order.state}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\n};\n\nexport default Client;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nclass Сourier extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t};\n\n\t}\n\n\tgetCourierOrders() {\n\t\tconst clientOrders = [\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\n\t\t\t\t\"date\": '06.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '5488779',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 123,\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\n\t\t\t\t\"date\": '08.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '34643-643',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 124,\n\t\t\t},\n\t\t]\n\t\treturn clientOrders\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tnoShadow left={\n\t\t\t\t\t\t<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t\t</PanelHeaderButton>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tКурьер\n      \t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\n\t\t\t\t\t{this.getCourierOrders().map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.shop}\n\t\t\t\t\t\t\tcaption={order.date}\n\t\t\t\t\t\t\tafter={order.state}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_client\">Адрес на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с клиентом</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\n\nСourier.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass Business extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tgetBusinessOrders() {\n\t\tconst businessOrders = [\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\n\t\t\t\t\"date\": '06.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '5488779',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 123,\n\t\t\t\t\"courier_name\": 'Иванов Виктор',\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\n\t\t\t\t\"date\": '08.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '34643-643',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 124,\n\t\t\t\t\"courier_name\": 'Равшан Ильюсович',\n\t\t\t},\n\t\t]\n\t\treturn businessOrders\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tБизнес\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>У курьера</Header>}>\n\t\t\t\t\t{this.getBusinessOrders().map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Курьер \" + order.courier_name}\n\t\t\t\t\t\t\tcaption={order.date}\n\t\t\t\t\t\t\tafter={order.state}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier_for_business\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id})\n\n        // возвращаем с бека координаты курьера\n        // пока заглушка\n        this.setState({ courier_geodata: { lat: 55.659200, long: 37.753314 } })\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            // возвращаем с бека координаты курьера\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataClient;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id })\n\n        // получаем координаты курьера\n        // const geodata = await bridge.send('VKWebAppGetGeodata');\n        // this.setState({ courier_geodata: geodata });\n\n        // пока заглушка\n        this.setState({\n            courier_geodata: {\n                lat: 55.659200,\n                long: 37.753314\n            }\n        })\n\n        // отправляем координаты курьера на бек\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            // получаем координаты курьера\n            // const geodata = await bridge.send('VKWebAppGetGeodata');\n            // this.setState({ courier_geodata: geodata });\n\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n\n            // отправляем координаты курьера на бек\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"courier\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с клиентом</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataCourier;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataBusiness extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id })\n\n        // возвращаем с бека координаты курьера\n        // пока заглушка\n        this.setState({ courier_geodata: { lat: 55.659200, long: 37.753314 } })\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            // возвращаем с бека координаты курьера\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text={props.order.courier_name}\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataBusiness.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataBusiness;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Epic, Tabbar, TabbarItem } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\nimport Icon28SearchOutline from '@vkontakte/icons/dist/28/search_outline';\nimport { ROUTES } from './Routes';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\n\nimport Home from './panels/Home';\nimport Client from './panels/Client';\nimport Сourier from './panels/Сourier';\nimport Business from './panels/Business';\nimport GeodataClient from './panels/Geodata';\nimport GeodataCourier from './panels/CourierGeodata';\nimport GeodataBusiness from './panels/BusinessGeodata';\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: ~ROUTES.indexOf(location) ? location : 'home',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner size='large' />,\n\t\t\tactiveStory: 'main',\n\t\t\tclient_order: null,\n\t\t\tcourier_order: null,\n\t\t\tclient_order_for_business: null,\n\t\t};\n\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\tthis.setState({ fetchedUser: user, popout: null });\n\t}\n\n\tonStoryChange(e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\n\tsetLocation = (route) => {\n\t\tif (route !== 'home') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\tgo = (e, object) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\t\tif (route === 'view_where_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t}\n\t\tif (route === 'view_where_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'view_where_courier_for_business') {\n\t\t\tthis.setState({ client_order_for_business: object })\n\t\t}\n\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t<Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'main'}\n\t\t\t\t\t\tdata-story=\"main\"\n\t\t\t\t\t\ttext=\"Начало\"\n\t\t\t\t\t><Icon28NewsfeedOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'discover'}\n\t\t\t\t\t\tdata-story=\"discover\"\n\t\t\t\t\t\ttext=\"Поиск\"\n\t\t\t\t\t><Icon28SearchOutline /></TabbarItem>\n\t\t\t\t</Tabbar>\n\t\t\t}>\n\t\t\t\t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Client id='client' data={this.state.data} go={this.go} />\n\t\t\t\t\t<Сourier id='courier' go={this.go} />\n\t\t\t\t\t<Business id='business' go={this.go} />\n\t\t\t\t\t<GeodataClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t<GeodataCourier id='view_where_client' order={this.state.courier_order} go={this.go} />\n\t\t\t\t\t<GeodataBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t\t</View>\n\t\t\t</Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}