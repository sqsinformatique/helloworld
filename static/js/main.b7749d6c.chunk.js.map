{"version":3,"sources":["img/logo.svg","logo/IconLogo.js","modules/utils.js","modules/backRequests.js","Routes.js","panels/PopUpWindows/WelcomeScreen.js","panels/PopUpWindows/SetBusinessGroup.js","modules/parseTypes.js","panels/Client/Client.js","panels/Client/ClientOptions.js","modules/map.js","panels/Client/CourierGeodataForClient.js","panels/Courier/Сourier.js","panels/Courier/CourierOptions.js","panels/Courier/ClientGeodataForCourier.js","panels/Business/Business.js","panels/Business/BusinessOptions.js","panels/Business/BusinessNewOrder.js","panels/Business/CourierGeodataForBusiness.js","panels/Business/BusinessAllCourier.js","App.js","index.js"],"names":["module","exports","IconLogo","height","this","props","className","src","logo","alt","Component","isValidPhone","p","digits","replace","test","trim","s","c","RegExp","randomInteger","min","max","rand","Math","random","floor","back_url","postCourierGeodata","courier_id","geodata","a","courierGeodata","curier_id","lat","long","console","log","fetch","method","headers","body","JSON","stringify","response","ok","json","getCourierBySocialID","social_id","result","getCourierGeodataByCourierID","postSearchOrdersByClientHashPhone","hash_phone","requestOrder","hash_telephone","postSearchOrdersByBusinessID","business_id","postSearchOrdersByCourierID","order","createOrderRequest","Number","email","telephone","phone","order_number","order_address","address","order_description","description","order_date","Date","parse","toJSON","order_time_begin","order_time_end","order_state","getClientBySocialID","getBusinessBySocialID","getCuriersByBusinessID","postCreateBindingBusinessCourier","courier_phone","bindCurier","postDeleteBindingBusinessCourier","unbindCurier","WelcomeScreen","closePopout","state","fetchedUser","url","userType","bridge","send","userPhone","userEmail","user","id","toString","phone_number","actions","title","autoclose","action","createUser","mode","React","SetBusinessGroup","groups","group_id","token","access_token","groupsData","setState","items","loadGroups","e","currentTarget","name","value","onChange","map","group","index","key","orderStateToString","fullOrderDate","osName","platform","Client","orders","getClient","getClientOrders","left","onClick","go","data-to","IOS","disabled","multiline","before","size","photo_100","text","business_name","caption","after","Fragment","length","style","fontSize","textAlign","ClientOptions","mapState","center","zoom","controls","geoMap","clientGeodata","client","courier","query","apikey","load","width","defaultState","instanceRef","ref","routePanel","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","CourierGeodataForClient","courier_geodata","geoUpdateInterval","setInterval","fetchCourierGeo","clearInterval","curier_photo_100","Сourier","getCourier","getCourierOrders","ClientGeodataForCourier","Business","getBusiness","getBusinessOrders","curier_name","BusinessOptions","addCourier","validatePhone","createBinding","updatePhoneValue","target","resetPhoneValue","couriers","errPhone","header","removable","onRemove","slice","unbind","first_name","last_name","top","blueBackground","backgroundColor","BusinessNewOrder","createOrderHandler","postCreateOrder","openSaveOk","sendMessagetoClient","openSaveFail","now","mm","getMonth","dd","getDate","hh","getHours","nowString","getFullYear","snackbar","selected_curier","bind","layout","onClose","fill","step","CourierGeodataForBusiness","number","BusinessAllCourier","setYmaps","ymaps","setCenter","getMap","util","bounds","getCenterAndZoom","geoObjects","getBounds","container","getSize","alert","onLoad","properties","hintContent","balloonContent","modules","geometry","App","window","location","hash","substr","setLocation","route","popout","show_user_menu","activePanel","object","dataset","fetchUser","client_order","courier_order","client_order_for_business","user_menu","user_story","activeStory","onStoryChange","story","display","tabbar","selected","data-story","buildDisplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7749d6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9a4bc312.svg\";","import React, {Component} from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport logo from '../img/logo.svg';\n\nexport class IconLogo extends Component {\n\n    render() {\n        return (\n            <img height={this.props.height} className={this.props.className} src={logo} alt=\"logo\"/>);\n    }\n}","export function isValidPhone(p) {\n    var phoneRe = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    var digits = p.replace(/\\D/g, \"\");\n    return phoneRe.test(digits);\n}\n\nexport function trim (s, c) {\n    if (c === \"]\") c = \"\\\\]\";\n    if (c === \"\\\\\") c = \"\\\\\\\\\";\n    return s.replace(new RegExp(\n      \"^[\" + c + \"]+|[\" + c + \"]+$\", \"g\"\n    ), \"\");\n  }\n\n  export function randomInteger(min, max) {\n    // случайное число от min до (max+1)\n    let rand = min + Math.random() * (max + 1 - min);\n    return Math.floor(rand);\n  }","import { isValidPhone, trim } from './utils'\n\nconst back_url = 'https://sqsinformatique-vk-back.ngrok.io'\n\n// Курьеры\nexport async function postCourierGeodata(courier_id, geodata) {\n\tlet courierGeodata = {\n\t\tcurier_id: courier_id,\n\t\tlat: geodata.lat,\n\t\tlong: geodata.long,\n\t};\n\tconsole.log(\"courierGeodata\", courierGeodata)\n\n\tlet url = back_url + '/api/v1/curiers/geo'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(courierGeodata)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCourierGeodata\", json)\n\t\treturn json\n\t}\n}\n\nexport async function getCourierBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/curiers/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCourierGeodataByCourierID (courier_id) {\n\tlet url = back_url + '/api/v1/curiers/geo/'\n\tlet response = await fetch(url + courier_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n\n}\n\n// Заказы\nexport async function postSearchOrdersByClientHashPhone(hash_phone) {\n\tlet requestOrder = [\n\t\t{\n\t\t\thash_telephone: hash_phone,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByClientHashPhone\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByBusinessID(business_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tbusiness_id: business_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByCourierID(courier_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tcurier_id: courier_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByCourierID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateOrder(business_id, order) {\n\tlet createOrderRequest = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: Number(order.curier_id),\n\t\temail: order.email,\n\t\ttelephone: order.phone,\n\t\torder_number: trim(order.order_number, '+'),\n\t\torder_address: order.address,\n\t\torder_description: order.description,\n\t\torder_date: new Date(Date.parse(order.order_date)).toJSON(),\n\t\torder_time_begin: order.order_time_begin,\n\t\torder_time_end: order.order_time_end,\n\t\torder_state: 'to_delivery',\n\t}\n\tconsole.log(createOrderRequest)\n\n\tlet url = back_url + '/api/v1/orders'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(createOrderRequest)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateOrder\", json)\n\t\treturn json.result\n\t}\n}\n\n// Клиенты\nexport async function getClientBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/clients/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getClientBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\n// Бизнес\nexport async function getBusinessBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/business/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getBusinessBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCuriersByBusinessID(business_id) {\n\tlet url = back_url + '/api/v1/business/curiers/'\n\n\tlet response = await fetch(url + business_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCuriersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateBindingBusinessCourier(business_id, courier_phone) {\n\tlet bindCurier = {\n\t\tbusiness_id: business_id,\n\t\tphone: courier_phone\n\t};\n\n\tconsole.log(bindCurier)\n\n\tlet url = back_url + '/api/v1/business/bind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(bindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postDeleteBindingBusinessCourier(business_id, curier_id) {\n\tlet unbindCurier = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: curier_id\n\t};\n\n\tconsole.log(unbindCurier)\n\n\tlet url = back_url + '/api/v1/business/unbind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(unbindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postDeleteBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\n\n\n","export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert } from '@vkontakte/vkui';\n\nclass WelcomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n        };\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                // url = url + 'business'\n                console.log(\"1111\")\n                props.closePopout(true, props.userType)\n                return true\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false,)\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Я согласен',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Здравствуйте!</h1>\n                Вы новый <b>{userType}</b> нашего приложения!\n                <div><br />\n                Подтвердите, что даёте согласие, на доступ приложения к информации о вашей учётной записи в социальной сети ВК. <br />Данная информация не будет передаваться третьим лицам.\nМы храним только ID в социальной сети и мы не храним Ваш email и мобильный номер.\n                </div>\n            </Alert>\n        )\n    }\n}\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert, Select } from '@vkontakte/vkui';\n\nclass SetBusinessGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n            groups: null,\n            group_id: 0,\n        };\n    }\n\n    async loadGroups() {\n        const props = this.props\n        const token = await bridge.send(\"VKWebAppGetAuthToken\", { \"app_id\": 7516660, \"scope\": \"groups\" });\n        console.log(token)\n        const groupsData = await bridge.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"groups.get\",\n            \"request_id\": \"sqsrequest\",\n            \"params\": {\n                \"user_id\": props.fetchedUser.id,\n                \"v\": \"5.110\",\n                \"access_token\": token.access_token,\n                \"extended\": true,\n                \"fields\": \"contacts\",\n            }\n        });\n        console.log(groupsData.response)\n        this.setState({ groups: groupsData.response.items, group_id: groupsData.response.items[0].id })\n        console.log(this.state.groups)\n    }\n\n    async componentDidMount() {\n        await this.loadGroups()\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                url = url + 'business'\n                break;\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n        console.log(\"this.state.group_id\", this.state.group_id)\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            group_id: this.state.group_id.toString(),\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false)\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        const { group_id } = this.state;\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Сохранить',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Выбор сообщества!</h1>\n                <div><br />\n                Пожалуйста, выберить сообщество связанное с учётной записью, которое представляет Ваш бизнес.\n                <br />\n                &nbsp;\n                </div>\n                <Select\n                    name=\"group_id\"\n                    value={group_id}\n                    onChange={this.onChange}\n                >\n                    {this.state.groups && this.state.groups.map((group, index) => (\n                        <option key={group.id} value={group.id}>{group.name}</option>\n                    ))}\n                </Select>\n            </Alert>\n        )\n    }\n}\n\nexport default SetBusinessGroup;\n","export function orderStateToString(state) {\n    switch (state) {\n        case 'to_delivery':\n            return 'В доставке'\n        default:\n            return 'Не известное состояние'\n    }\n}\n\nexport function fullOrderDate(order) {\n    return order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { PanelHeader, Header, RichCell, Button, Avatar, PanelSpinner, CardGrid, Card } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByClientHashPhone, getClientBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Client.css';\n\nconst osName = platform();\n// var miniPanel;\n// if (osName !== IOS || osName !== ANDROID) {\n// \tminiPanel = <React.Fragment>\n// \t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n// \t</React.Fragment>\n// }\n\nclass Client extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\torders: null,\n\t\t\tuser: props.user,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getClient()\n\t\tawait this.getClientOrders()\n\t}\n\n\tasync getClient() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getClientBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getClientOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByClientHashPhone(user.hash_telephone)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t// right={miniPanel}\n\t\t\t\t>\n\t\t\t\t\tКлиент: мне везут\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t{/* header={<Header>Мне везут</Header>} */}\n\n\t\t\t\t{!this.state.orders ? <PanelSpinner size='large' /> : <Group >\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Отправитель: \" + order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{(this.state.orders && this.state.orders.length === 0) ? <CardGrid>\n\t\t\t\t\t\t<Card size=\"l\">\n\t\t\t\t\t\t\t<div style={{ height: 96, fontSize: 30, textAlign: \"center\" }} >\n\t\t\t\t\t\t\t\tЗаказов нет\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardGrid> : <div />\n\t\t\t\t\t}\n\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Client;\n","import React from 'react';\nimport { Panel, PanelHeader, PanelHeaderButton} from '@vkontakte/vkui';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osName = platform();\n\nclass ClientOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            user: props.user,\n        };\n    }\n\n    render() {\n        const props = this.props;\n\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                    {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                </PanelHeaderButton>}\n                >\n                    Клиент: настройки\n\t\t\t\t</PanelHeader>\n             </Panel>\n        );\n    }\n}\n\nexport default ClientOptions;","import React from 'react';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\n\nconst apiKey = '482da132-c4be-476f-95ef-79ba61d579a4'\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nexport function geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: apiKey, load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Клиент: курьер на карте\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.business_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForClient;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS, PanelSpinner, Card, CardGrid } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\n\nimport { postSearchOrdersByCourierID, getCourierBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nclass Сourier extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getCourier()\n\t\tawait this.getCourierOrders()\n\t}\n\n\tasync getCourier() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getCourierBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getCourierOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByCourierID(user.curier_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={\n\t\t\t\t\t\t<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t\t</PanelHeaderButton>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tКурьер: я везу\n      \t\t\t</PanelHeader>\n\t\t\t\t{/* header={<Header>Я везу</Header>} */}\n\t\t\t\t{!this.state.orders ? <PanelSpinner size='large' /> : <Group >\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_client\">Адрес на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с клиентом</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{(this.state.orders && this.state.orders.length === 0) ? <CardGrid>\n\t\t\t\t\t\t<Card size=\"l\">\n\t\t\t\t\t\t\t<div style={{ height: 96, fontSize: 30, textAlign: \"center\" }} >\n\t\t\t\t\t\t\t\tЗаказов нет\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardGrid> : <div />\n\t\t\t\t\t}\n\n\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\n\nСourier.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React from 'react';\nimport { Panel, PanelHeader, PanelHeaderButton} from '@vkontakte/vkui';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osName = platform();\n\nclass CourierOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            user: props.user,\n        };\n    }\n\n    render() {\n        const props = this.props;\n\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                    {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                </PanelHeaderButton>}\n                >\n                    Настройки\n\t\t\t\t</PanelHeader>\n             </Panel>\n        );\n    }\n}\n\nexport default CourierOptions;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass ClientGeodataForCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: props.order.courier_id,\n            courier_geodata: props.courier_geodata,\n        };\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id, courier_geodata: props.courier_geodata })\n\n        console.log(\"courier_geodata\", props.courier_geodata)\n    }\n\n    render() {\n        const { id, order, courier_geodata } = this.props;\n\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {/* {order.shop} */}\n                    Курьер: адрес клиента\n                </PanelHeader>\n                <RichCell\n                    key={order.order_number}\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с клиентом</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nClientGeodataForCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default ClientGeodataForCourier;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar, PanelSpinner, CardGrid, Card } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass Business extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n\t}\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tБизнес: заказы у курьеров\n\t\t\t\t</PanelHeader>\n\t\t\t\t{/* header={<Header>У курьера</Header>} */}\n\t\t\t\t{!this.state.orders ? <PanelSpinner size='large' /> : <Group >\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell key={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Курьер \" + order.curier_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier_for_business\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{(this.state.orders && this.state.orders.length === 0) ? <CardGrid>\n\t\t\t\t\t\t<Card size=\"l\">\n\t\t\t\t\t\t\t<div style={{ height: 96, fontSize: 30, textAlign: \"center\" }} >\n\t\t\t\t\t\t\t\tЗаказов нет\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardGrid> : <div />\n\t\t\t\t\t}\n\n\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","import React from 'react';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { FormLayout, FormStatus, Panel, PanelHeader, Input, Button, Group, Cell, List, Header, PanelHeaderButton } from '@vkontakte/vkui';\nimport { isValidPhone, trim } from '../../modules/utils'\n\nimport { getCuriersByBusinessID, postCreateBindingBusinessCourier, postDeleteBindingBusinessCourier } from '../../modules/backRequests'\n\nconst osName = platform();\n\nclass BusinessOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            validatePhone: true,\n            user: props.user,\n            phone: '',\n            couriers: null,\n        };\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async createBinding() {\n        const { user } = this.props;\n        const { phone } = this.state;\n\n        await postCreateBindingBusinessCourier(user.business_id, trim(phone, '+'))\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async unbind(curier_id) {\n        const { user } = this.props;\n\n        await postDeleteBindingBusinessCourier(user.business_id, curier_id)\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    addCourier = () => {\n        this.setState({ validatePhone: isValidPhone(this.state.phone) })\n        if (this.state.validatePhone) {\n            this.createBinding()\n        }\n    }\n\n    updatePhoneValue = (e) => {\n        this.setState({\n            phone: e.target.value,\n        });\n\n        console.log(this.state.phone)\n    }\n\n    resetPhoneValue = (e) => {\n        e.target.value = ''\n    }\n\n    render() {\n        const props = this.props;\n\n        let errPhone\n        if (!this.state.validatePhone) {\n            errPhone = <FormStatus header=\"Некорректный мобильный номер\" mode=\"error\">\n                Необходимо корректно ввести номер в международном формате\n                    </FormStatus>\n        }\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    Бизнес: настройки\n\t\t\t\t</PanelHeader>\n                {this.state.couriers &&\n                    <Group header={<Header mode=\"secondary\">Мои курьеры</Header>}>\n                        <List>\n                            {this.state.couriers.map((courier, index) => (\n                                <Cell key={courier.curier_id} removable onRemove={() => {\n                                    this.setState({\n                                        couriers: [...this.state.couriers.slice(0, index), ...this.state.couriers.slice(index + 1)]\n                                    })\n                                    this.unbind(courier.curier_id)\n                                }}>{courier.first_name} {courier.last_name}</Cell>\n                            ))}\n                        </List>\n                    </Group>\n                }\n                <FormLayout>\n                    {errPhone}\n                    <Input id='telephone' top=\"Добавить курьера по номеру телефона\"\n                        // onFocus={this.resetPhoneValue} value=\"+7123456789\"\n                        value={this.state.phone}\n                        type=\"tel\"\n                        onChange={this.updatePhoneValue}\n                    />\n                    <Button size=\"xl\" onClick={this.addCourier}>Добавить</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nexport default BusinessOptions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { Button, FormLayout, Input, Textarea, Select, FormLayoutGroup, Avatar, Snackbar } from '@vkontakte/vkui';\nimport { isValidPhone, trim, randomInteger } from '../../modules/utils'\n\nimport { postCreateOrder, getCuriersByBusinessID } from '../../modules/backRequests'\n\nimport './Business.css';\n\nconst blueBackground = {\n    backgroundColor: 'var(--accent)'\n};\n\nconst osName = platform();\n\nclass BusinessNewOrder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var now = new Date();\n        var mm = now.getMonth() + 1; // getMonth() is zero-based\n        var dd = now.getDate();\n        var hh = now.getHours()\n        const nowString = now.getFullYear() + \"-\" + (mm > 9 ? '' : '0') + mm + \"-\" + (dd > 9 ? '' : '0') + dd\n\n        this.state = {\n            snackbar: null,\n            fetchedUser: null,\n            order: {\n                description: '',\n                email: '',\n                phone: '',\n                order_number: '',\n                address: '',\n                order_date: nowString,\n                order_time_begin: (hh > 9 ? '' : '0') + hh + \":00\",\n                order_time_end: (hh + 1 > 9 ? '' : '0') + (hh + 1) + \":00\",\n                curier_id: 0,\n            },\n            selected_curier: 0,\n            user: props.user,\n            couriers: null,\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.openSaveOk = this.openSaveOk.bind(this);\n        this.openSaveFail = this.openSaveFail.bind(this);\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n            if (response.length > 0) {\n                var now = new Date();\n                var mm = now.getMonth() + 1; // getMonth() is zero-based\n                var dd = now.getDate();\n                var hh = now.getHours()\n                const nowString = now.getFullYear() + \"-\" + (mm > 9 ? '' : '0') + mm + \"-\" + (dd > 9 ? '' : '0') + dd\n\n                const order = {\n                    curier_id: response[0].curier_id,\n                    order_date: nowString,\n                    order_time_begin: (hh > 9 ? '' : '0') + hh + \":00\",\n                    order_time_end: (hh + 1 > 9 ? '' : '0') + (hh + 1) + \":00\",\n                }\n\n\n                this.setState({ order: order })\n            }\n        }\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        let order\n        if (name === 'curier_id') {\n            const courier = this.state.couriers[value]\n            this.state.order.curier_id = courier.curier_id\n            this.setState({ selected_curier: value })\n        } else {\n            order = { ...this.state.order, ...{ [name]: value } }\n            this.setState({ order: order });\n        }\n        console.log(this.state.order)\n    }\n\n    openSaveOk() {\n        if (this.state.snackbar) return;\n        this.setState({\n            snackbar:\n                <Snackbar\n                    layout=\"vertical\"\n                    onClose={() => this.setState({ snackbar: null })}\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n                >\n                    Заказ сохранён\n          </Snackbar>\n        });\n    }\n\n    openSaveFail() {\n        if (this.state.snackbar) return;\n        this.setState({\n            snackbar:\n                <Snackbar\n                    layout=\"vertical\"\n                    onClose={() => this.setState({ snackbar: null })}\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#fff\" width={14} height={14} /></Avatar>}\n                >\n                    Ошибка сохранения!\n          </Snackbar>\n        });\n    }\n\n\n\n    async sendMessagetoClient() {\n        const result = await bridge.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"messages.send\",\n            \"request_id\": \"32test\",\n            \"params\": {\n                \"user_id\": \"600629237\",\n                \"v\": \"5.110\",\n                \"random_id\": randomInteger(1, 1000000000),\n                \"peer_id\": \"600629237\",\n                \"chat_id\": \"1\",\n                \"message\": \"создан заказ\",\n                \"access_token\": \"5a1817fe557738c1303ca8c2878849ea36f0b31b5b20064b919519e865684f9778c1e12c030f2755d78e3\"\n            }\n        });\n\n        console.log(result)\n\n    }\n\n    createOrderHandler = () => {\n        const { user } = this.props\n        const { order } = this.state\n        const response = postCreateOrder(user.business_id, order)\n        if (response) {\n            this.openSaveOk()\n            this.sendMessagetoClient()\n        } else {\n            this.openSaveFail()\n        }\n    }\n\n    render() {\n        const props = this.props;\n        const { email, phone, address, order_number, description, curier_id, order_date, order_time_begin, order_time_end } = this.state.order;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    Бизнес: новый заказ\n                </PanelHeader>\n                <FormLayout>\n                    <Input\n                        top=\"Номер заказа\"\n                        name=\"order_number\"\n                        value={order_number}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Мобильный телефон\"\n                        type=\"tel\"\n                        name=\"phone\"\n                        value={phone}\n                        onChange={this.onChange}\n                    // keyboardType={'phone-pad'}\n                    />\n                    <Input\n                        type=\"email\"\n                        top=\"E-mail\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Адрес доставки\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this.onChange}\n                    />\n                    <Textarea\n                        top=\"Описание заказа\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        type=\"date\"\n                        top=\"Дата доставки\"\n                        name=\"order_date\"\n                        value={order_date}\n                        onChange={this.onChange}\n                    />\n                    <FormLayoutGroup top=\"Время доставки\">\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"Время от\"\n                            name=\"order_time_begin\"\n                            value={order_time_begin}\n                            onChange={this.onChange}\n                        />\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"до\"\n                            name=\"order_time_end\"\n                            value={order_time_end}\n                            onChange={this.onChange}\n                        />\n                    </FormLayoutGroup>\n                    <Select\n                        top=\"Выбрать курьера\"\n                        name=\"curier_id\"\n                        value={this.state.selected_curier}\n                        onChange={this.onChange}\n                    >\n                        {this.state.couriers && this.state.couriers.map((courier, index) => (\n                            <option key={index} value={index}>{courier.first_name} {courier.last_name}</option>\n                        ))}\n                    </Select>\n                    <Button size=\"xl\" onClick={this.createOrderHandler}>Создать заказ</Button>\n                </FormLayout>\n                {this.state.snackbar}\n            </Panel>\n        );\n    }\n}\n\nBusinessNewOrder.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default BusinessNewOrder;\n","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForBusiness extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {/* {order.shop} */}\n                    Бизнес: курьер на карте\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.curier_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForBusiness.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForBusiness;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport { PanelHeader  } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nclass BusinessAllCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser:  props.fetchedUser,\n            orders: null,\n            ymaps: null,\n            user: props.user,\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.getBusinessOrders()\n        }, 5000);\n    }\n\n    setYmaps = ymaps => {\n        this.setState({ ymaps });\n    };\n\n    setCenter = ref => {\n        const { ymaps } = this.state;\n\n        if (ymaps) {\n            const map = ref.getMap();\n            const result = ymaps.util.bounds.getCenterAndZoom(\n                map.geoObjects.getBounds(),\n                map.container.getSize()\n            );\n\n            // Setting the optimal center and zoom level of the map.\n            var zoom = result.zoom\n            if (result.zoom > 19) {\n                zoom = 19\n            }\n            map.setCenter(result.center, zoom);\n        }\n    };\n\n    async componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n    }\n    \n    detailClick() {\n        alert(\"test\")\n        console.log(\"test\")\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Бизнес: курьеры на карте \n                </PanelHeader>\n                <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: ['util.bounds', 'control.ZoomControl'] }} >\n                    <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n                        {this.state.orders && this.state.orders.map((order) =>\n                            <Placemark key={order.order_number} properties={{\n                                hintContent: order.curier_name,\n                                properties: { name: \"test\" },\n                                balloonContent: '<div style=\"margin: 10px;\">' +\n                                    '<b>' + order.curier_name + '</b><br /> Заказ: ' + order.order_number + '<br />' +\n                                    '<i id=\"count\"></i> ' +\n                                    // '<input type=\"button\" onclick=\"this.detailClick()\" value=\"Считать кроликов!\"/>' +\n                                    '</div>',\n                            }} modules={['geoObject.addon.balloon', 'geoObject.addon.hint']} geometry={[order.geodata.lat, order.geodata.long]} instanceRef={ref => ref && this.setCenter(ref)} />\n                        )}\n                    </Map>\n                </YMaps>\n            </Panel>\n        )\n    }\n}\n\nBusinessAllCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default BusinessAllCourier;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Epic, Tabbar, TabbarItem, Panel, Div, Button, Group, PanelHeader } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport Icon28CompassOutline from '@vkontakte/icons/dist/28/compass_outline';\nimport Icon28MarketAddBadgeOutline from '@vkontakte/icons/dist/28/market_add_badge_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\n\nimport { IconLogo } from './logo/IconLogo';\nimport './App.css';\n\nimport { postCourierGeodata, getClientBySocialID, getCourierBySocialID, getBusinessBySocialID } from './modules/backRequests'\n\nimport { ROUTES } from './Routes';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\n// Главная страница\nimport Home from './panels/Home';\n\n// Регистрация новых пользователей\nimport WelcomeScreen from './panels/PopUpWindows/WelcomeScreen';\nimport SetBusinessGroup from './panels/PopUpWindows/SetBusinessGroup'\n\n// Клиент\nimport Client from './panels/Client/Client';\nimport ClientOptions from './panels/Client/ClientOptions';\nimport CourierGeodataForClient from './panels/Client/CourierGeodataForClient';\n\n// Курьер\nimport Сourier from './panels/Courier/Сourier';\nimport СourierOptions from './panels/Courier/CourierOptions';\nimport ClientGeodataForCourier from './panels/Courier/ClientGeodataForCourier';\n\n// Бизнес\nimport Business from './panels/Business/Business';\nimport BusinessOptions from './panels/Business/BusinessOptions';\nimport BusinessNewOrder from './panels/Business/BusinessNewOrder';\nimport CourierGeodataForBusiness from './panels/Business/CourierGeodataForBusiness';\nimport BusinessAllCourier from './panels/Business/BusinessAllCourier';\n\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner size='large' />,\n\t\t\tactiveStory: 'more',\n\t\t\tclient_order: null,\n\t\t\tcourier_order: null,\n\t\t\tclient_order_for_business: null,\n\t\t\tuser: null,\n\t\t\tcourier_geodata: { lat: 55.659200, long: 37.753314 },\n\t\t\tshow_user_menu: 'none',\n\t\t};\n\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\n\t\tthis.state.geoUpdateInterval = setInterval(() => {\n\t\t\tthis.fetchCourierGeo()\n\t\t}, 5000);\n\t}\n\n\tasync fetchCourierGeo() {\n\t\tswitch (this.state.activePanel) {\n\t\t\tcase 'client_orders_ondelivery':\n\t\t\tcase 'view_where_client':\n\t\t\t\t// Запрашиваем координаты курьера, если находимся на панелях courier или view_where_client\n\t\t\t\t// Надо также дополнить всеми остальными панелями курьера, чтобы координаты передавались всё\n\t\t\t\t// время, пока мы в режиме Курьера\n\t\t\t\tconst geodata = await bridge.send('VKWebAppGetGeodata');\n\t\t\t\tthis.setState({ courier_geodata: geodata });\n\n\t\t\t\tif (!this.state.user) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tawait postCourierGeodata(this.state.user.curier_id, { lat: geodata.lat, long: geodata.long })\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\tthis.setState({ fetchedUser: user, popout: null });\n\t}\n\n\tonStoryChange(e) {\n\t\tconsole.log(\"e.currentTarget.dataset.story\", e.currentTarget.dataset.story)\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story, activePanel: e.currentTarget.dataset.story })\n\t}\n\n\tsetLocation = (route) => {\n\t\tconsole.log(\"route\", route)\n\t\tif (route !== 'home') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\t// Проверяем, есть ли такой пользователь у нас на бэке\n\tasync fetchUser(userType) {\n\t\tconsole.log(\"userType\", userType)\n\t\tconst { fetchedUser } = this.state\n\t\tlet response\n\t\tswitch (userType) {\n\t\t\tcase 'client':\n\t\t\t\tresponse = await getClientBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\tresponse = await getCourierBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\tresponse = await getBusinessBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.setState({ popout: <WelcomeScreen userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\treturn false;\n\t}\n\n\tclosePopout = (result, userType) => {\n\t\tconsole.log(result)\n\t\tif (!result) {\n\t\t\tthis.setState({ popout: null, show_user_menu: 'none',  activePanel: 'home' });\n\t\t} else {\n\t\t\tif (userType === 'business') {\n\t\t\t\tthis.setState({ popout: <SetBusinessGroup userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\t\t} else {\n\t\t\t\tthis.setState({ popout: null });\n\t\t\t}\n\t\t}\n\t}\n\t\n\tgo = (e, object) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(route)\n\n\t\tif (route === 'view_where_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t\tthis.fetchCourierGeo()\n\t\t}\n\t\tif (route === 'view_where_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'view_where_courier_for_business') {\n\t\t\tthis.setState({ client_order_for_business: object })\n\t\t}\n\n\t\tif (route === 'home'){\n\t\t\tthis.setState({show_user_menu: 'none'})\n\t\t}\n\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\tonClick = (e, user_menu, user_story) => {\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(user_menu)\n\n\t\tthis.setState({ activeStory: user_story, activePanel: 'client_orders_ondelivery', show_user_menu: user_menu })\n\t\tconsole.log(this.state)\n\t}\n\n\tbuildDisplay(user_menu, user) {\n\t\tlet display = null\n\t\tswitch (user_menu) {\n\t\t\tcase 'client':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery' || this.state.activeStory === 'client'}\n\t\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\t\ttext=\"Мне везут\"\n\t\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar >}>\n\t\t\t\t\t< View id='client_orders_ondelivery' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t\t<Client id='client_orders_ondelivery' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<CourierGeodataForClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t\t< View id='client_options' activePanel='client_options' >\n\t\t\t\t\t\t<ClientOptions id='client_options' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t</Epic>\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery'}\n\t\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\t\ttext=\"Я везу\"\n\t\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'courier_options'}\n\t\t\t\t\t\t\tdata-story=\"courier_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar >}>\n\t\t\t\t\t<View id='client_orders_ondelivery' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t\t<Сourier id='client_orders_ondelivery' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t< View id='courier_options' activePanel='courier_options' >\n\t\t\t\t\t\t<ClientOptions id='courier_options' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t</Epic >\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery'}\n\t\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\t\ttext=\"Заказы в работе\"\n\t\t\t\t\t\t><Icon28ListOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_couriers_onmap'}\n\t\t\t\t\t\t\tdata-story=\"business_couriers_onmap\"\n\t\t\t\t\t\t\ttext=\"Курьеры на карте\"\n\t\t\t\t\t\t><Icon28CompassOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_add_order'}\n\t\t\t\t\t\t\tdata-story=\"business_add_order\"\n\t\t\t\t\t\t\ttext=\"Новый заказ\"\n\t\t\t\t\t\t><Icon28MarketAddBadgeOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_options'}\n\t\t\t\t\t\t\tdata-story=\"business_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar>}>\n\t\t\t\t\t< View id='client_orders_ondelivery' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t\t<Business id='client_orders_ondelivery' user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<CourierGeodataForBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t\t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t\t\t\t<BusinessAllCourier id=\"business_couriers_onmap\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t\t\t\t<BusinessNewOrder id=\"business_add_order\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t\t\t\t<BusinessOptions id=\"business_options\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t</Epic >\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdisplay = <View id='main' activePanel={this.state.activePanel}>\n\t\t\t\t\t<Panel id='home'>\n\t\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\t\tГде курьер?\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t<Div className=\"header\">\n\t\t\t\t\t\t\t\t<IconLogo height={150} className=\"header__logo\" />\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t<Group title=\"Выбор кабинета пользователя\">\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28UserOutline/>} size=\"xl\" onClick={(e) => this.onClick(e, 'client','client_orders_ondelivery')}>Я клиент</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28MarketOutline/>} size=\"xl\" onClick={(e) => this.onClick(e, 'courier','client_orders_ondelivery')} >Я курьер</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28CubeBoxOutline/>} size=\"xl\" onClick={(e) => this.onClick(e, 'business','client_orders_ondelivery')} >Я бизнес</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t}\n\n\t\treturn display\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Div>\n\t\t\t\t{this.buildDisplay(this.state.show_user_menu, this.state.user)}\n\t\t\t</Div>\n\t\t\t// <Epic activeStory={this.state.activeStory} tabbar={this.tabbarByUserType(this.state.activePanel)}\n\t\t\t// >\n\t\t\t// \t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t// \t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Client id='client' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Сourier id='courier' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Business id='business' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<CourierGeodataForClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t// \t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t// \t\t<CourierGeodataForBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t// \t\t<BusinessAllCourier id=\"business_couriers_onmap\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t// \t\t<BusinessNewOrder id=\"business_add_order\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t// \t\t<BusinessOptions id=\"business_options\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\n\t\t\t// </Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}