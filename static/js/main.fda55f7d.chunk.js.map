{"version":3,"sources":["img/logo.svg","logo/IconLogo.js","modules/utils.js","modules/backRequests.js","Routes.js","panels/PopUpWindows/WelcomeScreen.js","panels/PopUpWindows/SetBusinessGroup.js","panels/PopUpWindows/SetOrderState.js","modules/parseTypes.js","panels/Client/Client.js","panels/Client/ClientOptions.js","modules/map.js","panels/Client/CourierGeodataForClient.js","panels/Client/ChatWithCourier.js","panels/Courier/Сourier.js","panels/Courier/CourierOptions.js","panels/Courier/ClientGeodataForCourier.js","panels/Courier/ChatWithClient.js","panels/Business/Business.js","panels/Business/BusinessOptions.js","panels/Business/BusinessNewOrder.js","panels/Business/CourierGeodataForBusiness.js","panels/Business/BusinessAllCourier.js","App.js","index.js"],"names":["module","exports","IconLogo","height","this","props","className","src","logo","alt","Component","isValidPhone","p","digits","replace","test","trim","s","c","RegExp","randomInteger","min","max","rand","Math","random","floor","back_url","postCourierGeodata","courier_id","geodata","a","courierGeodata","curier_id","lat","long","console","log","fetch","method","headers","body","JSON","stringify","response","ok","json","getCourierBySocialID","social_id","result","getCourierGeodataByCourierID","putUpdateCourierOptions","options","getCourierOptionsByID","getMessages","chat_id","chat","postMessages","sender","message","date","Date","now","messageData","timestamp","getClientByOrderID","order_id","postSearchOrdersByClientHashPhone","hash_phone","requestOrder","hash_telephone","postSearchOrdersByBusinessID","business_id","postSearchOrdersByCourierID","order","createOrderRequest","Number","email","telephone","phone","order_number","order_address","address","order_description","description","order_date","parse","toJSON","order_time_begin","order_time_end","order_state","putUpdateOrderState","newState","getClientBySocialID","getBusinessBySocialID","getCuriersByBusinessID","postCreateBindingBusinessCourier","courier_phone","bindCurier","postDeleteBindingBusinessCourier","unbindCurier","WelcomeScreen","closePopout","state","fetchedUser","url","userType","bridge","send","userPhone","userEmail","user","id","toString","phone_number","actions","title","autoclose","action","createUser","mode","React","SetBusinessGroup","groups","group_id","token","access_token","groupsData","setState","items","loadGroups","e","currentTarget","name","value","onChange","map","group","index","key","SetOrderState","onClick","update","before","size","orderStateToString","fullOrderDate","osName","platform","Client","orders","getClient","getClientOrders","left","go","data-to","IOS","disabled","multiline","photo_100","text","business_name","caption","after","Fragment","length","style","fontSize","textAlign","ClientOptions","asideContent","mapState","center","zoom","controls","geoMap","clientGeodata","routingMode","client","courier","query","apikey","load","width","defaultState","instanceRef","ref","routePanel","set","fromEnabled","type","from","to","toEnabled","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","CourierGeodataForClient","courier_geodata","geoUpdateInterval","setInterval","fetchCourierGeo","clearInterval","curier_photo_100","routing_mode","ChatWithCourier","postAndUpdate","messages","msg","bind","chatUpdateInterval","fetchChat","client_id","top","placeholder","blueBackground","backgroundColor","Сourier","getCourierOrders","getCourier","routing_modes","CourierOptions","updateCourierOptions","ClientGeodataForCourier","ChatWithClient","Business","getBusiness","getBusinessOrders","curier_name","BusinessOptions","addCourier","validatePhone","createBinding","updatePhoneValue","target","resetPhoneValue","couriers","errPhone","header","removable","onRemove","slice","unbind","first_name","last_name","BusinessNewOrder","createOrderHandler","postCreateOrder","sendMessagetoClient","openSaveOk","openSaveFail","mm","getMonth","dd","getDate","hh","getHours","nowString","getFullYear","snackbar","selected_curier","layout","onClose","fill","rndID","step","CourierGeodataForBusiness","number","BusinessAllCourier","setYmaps","ymaps","setCenter","getMap","util","bounds","getCenterAndZoom","geoObjects","getBounds","container","getSize","alert","onLoad","properties","hintContent","balloonContent","modules","geometry","App","window","location","hash","substr","setLocation","route","popout","show_user_menu","activePanel","object","dataset","fetchUser","client_order","courier_order","client_order_for_business","user_menu","user_story","activeStory","invertor","onStoryChange","story","display","tabbar","selected","data-story","buildDisplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fda55f7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9a4bc312.svg\";","import React, {Component} from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport logo from '../img/logo.svg';\n\nexport class IconLogo extends Component {\n\n    render() {\n        return (\n            <img height={this.props.height} className={this.props.className} src={logo} alt=\"logo\"/>);\n    }\n}","export function isValidPhone(p) {\n  var phoneRe = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n  var digits = p.replace(/\\D/g, \"\");\n  return phoneRe.test(digits);\n}\n\nexport function trim(s, c) {\n  if (c === \"]\") c = \"\\\\]\";\n  if (c === \"\\\\\") c = \"\\\\\\\\\";\n  return s.replace(new RegExp(\n    \"^[\" + c + \"]+|[\" + c + \"]+$\", \"g\"\n  ), \"\");\n}\n\nexport function randomInteger(min, max) {\n  // случайное число от min до (max+1)\n  let rand = min + Math.random() * (max + 1 - min);\n  return Math.floor(rand);\n}","import { isValidPhone, trim } from './utils'\nimport { func } from 'prop-types';\n\nconst back_url = 'https://sqsinformatique-vk-back.ngrok.io'\n\n// Курьеры\nexport async function postCourierGeodata(courier_id, geodata) {\n\tlet courierGeodata = {\n\t\tcurier_id: courier_id,\n\t\tlat: geodata.lat,\n\t\tlong: geodata.long,\n\t};\n\tconsole.log(\"courierGeodata\", courierGeodata)\n\n\tlet url = back_url + '/api/v1/curiers/geo'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(courierGeodata)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCourierGeodata\", json)\n\t\treturn json\n\t}\n}\n\nexport async function getCourierBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/curiers/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCourierGeodataByCourierID(courier_id) {\n\tlet url = back_url + '/api/v1/curiers/geo/'\n\tlet response = await fetch(url + courier_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n\n}\n\nexport async function putUpdateCourierOptions(courier_id, options) {\n\tlet url = back_url + '/api/v1/curiers/options/'\n\tlet response = await fetch(url + courier_id, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(options)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"putUpdateCourierOptions\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCourierOptionsByID(social_id) {\n\tlet url = back_url + '/api/v1/curiers/options/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierOptionsByID\", json)\n\t\treturn json.result\n\t}\n}\n\n// Заказы\nexport async function getMessages(chat_id) {\n\tlet url = back_url + '/api/v1/curiers/messages/'\n\n\tlet response = await fetch(url + chat_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getMessages\", json)\n\t\treturn json.result.chat\n\t}\n}\n\nexport async function postMessages(chat_id, sender, message) {\n\tvar date = Date.now();\n\tlet messageData = {\n\t\ttimestamp: date,\n\t\tsender: sender,\n\t\tmessage: message,\n\t};\n\tconsole.log(\"messageData\", messageData)\n\n\tlet url = back_url + '/api/v1/curiers/messages/'\n\tlet response = await fetch(url+chat_id, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(messageData)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postMessages\", json)\n\t\treturn json\n\t}\n}\n\nexport async function getClientByOrderID(order_id) {\n\tlet url = back_url + '/api/v1/orders/client/'\n\n\tlet response = await fetch(url + order_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getClientByOrderID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByClientHashPhone(hash_phone) {\n\tlet requestOrder = [\n\t\t{\n\t\t\thash_telephone: hash_phone,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByClientHashPhone\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByBusinessID(business_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tbusiness_id: business_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByCourierID(courier_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tcurier_id: courier_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByCourierID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateOrder(business_id, order) {\n\tlet createOrderRequest = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: Number(order.curier_id),\n\t\temail: order.email,\n\t\ttelephone: trim(order.phone, '+'),\n\t\torder_number: order.order_number,\n\t\torder_address: order.address,\n\t\torder_description: order.description,\n\t\torder_date: new Date(Date.parse(order.order_date)).toJSON(),\n\t\torder_time_begin: order.order_time_begin,\n\t\torder_time_end: order.order_time_end,\n\t\torder_state: 'to_delivery',\n\t}\n\tconsole.log(createOrderRequest)\n\n\tlet url = back_url + '/api/v1/orders'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(createOrderRequest)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateOrder\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function putUpdateOrderState(order_id, newState) {\n\tlet url = back_url + '/api/v1/orders/'\n\n\tlet createOrderRequest = {\n\t\torder_state: newState\n\t}\n\n\tlet response = await fetch(url + order_id, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(createOrderRequest)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"putUpdateCourierOptions\", json)\n\t\treturn json.result\n\t}\n}\n\n// Клиенты\nexport async function getClientBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/clients/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getClientBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\n// Бизнес\nexport async function getBusinessBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/business/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getBusinessBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCuriersByBusinessID(business_id) {\n\tlet url = back_url + '/api/v1/business/curiers/'\n\n\tlet response = await fetch(url + business_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCuriersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateBindingBusinessCourier(business_id, courier_phone) {\n\tlet bindCurier = {\n\t\tbusiness_id: business_id,\n\t\tphone: courier_phone\n\t};\n\n\tconsole.log(bindCurier)\n\n\tlet url = back_url + '/api/v1/business/bind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(bindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postDeleteBindingBusinessCourier(business_id, curier_id) {\n\tlet unbindCurier = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: curier_id\n\t};\n\n\tconsole.log(unbindCurier)\n\n\tlet url = back_url + '/api/v1/business/unbind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(unbindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postDeleteBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\n\n\n","export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert } from '@vkontakte/vkui';\n\nclass WelcomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n        };\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                // url = url + 'business'\n                console.log(\"1111\")\n                props.closePopout(true, props.userType)\n                return true\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false)\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Я согласен',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Здравствуйте!</h1>\n                Вы новый <b>{userType}</b> нашего приложения!\n                <div><br />\n                Подтвердите, что даёте согласие, на доступ приложения к информации о вашей учётной записи в социальной сети ВК. <br />Данная информация не будет передаваться третьим лицам.\nМы храним только ID в социальной сети и мы не храним Ваш email и мобильный номер.\n                </div>\n            </Alert>\n        )\n    }\n}\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert, Select } from '@vkontakte/vkui';\n\nclass SetBusinessGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n            groups: null,\n            group_id: 0,\n        };\n    }\n\n    async loadGroups() {\n        const props = this.props\n        const token = await bridge.send(\"VKWebAppGetAuthToken\", { \"app_id\": 7516660, \"scope\": \"groups\" });\n        console.log(token)\n        const groupsData = await bridge.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"groups.get\",\n            \"request_id\": \"sqsrequest\",\n            \"params\": {\n                \"user_id\": props.fetchedUser.id,\n                \"v\": \"5.110\",\n                \"access_token\": token.access_token,\n                \"extended\": true,\n                \"fields\": \"contacts\",\n            }\n        });\n        console.log(groupsData.response)\n        this.setState({ groups: groupsData.response.items, group_id: groupsData.response.items[0].id })\n        console.log(this.state.groups)\n    }\n\n    async componentDidMount() {\n        await this.loadGroups()\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                url = url + 'business'\n                break;\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n        console.log(\"this.state.group_id\", this.state.group_id)\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            group_id: this.state.group_id.toString(),\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false)\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        const { group_id } = this.state;\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Сохранить',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Выбор сообщества!</h1>\n                <div><br />\n                Пожалуйста, выберить сообщество связанное с учётной записью, которое представляет Ваш бизнес.\n                <br />\n                &nbsp;\n                </div>\n                <Select\n                    name=\"group_id\"\n                    value={group_id}\n                    onChange={this.onChange}\n                >\n                    {this.state.groups && this.state.groups.map((group, index) => (\n                        <option key={group.id} value={group.id}>{group.name}</option>\n                    ))}\n                </Select>\n            </Alert>\n        )\n    }\n}\n\nexport default SetBusinessGroup;\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert, Div, Button, Group } from '@vkontakte/vkui';\nimport Icon36Done from '@vkontakte/icons/dist/36/done';\nimport Icon36Cancel from '@vkontakte/icons/dist/36/cancel';\n\nimport { putUpdateOrderState } from '../../modules/backRequests'\n\nclass SetOrderState extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n            order: props.order,\n            groups: null,\n            group_id: 0,\n        };\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(true)\n    }\n\n    async update(newState) {\n        const props = this.props;\n        await putUpdateOrderState(props.order.order_id, newState)\n        await props.update()\n        props.closePopout(true)  \n    }\n\n    onClick = (e, newState) => {\n        const props = this.props;\n\n        console.log(\"object\", props.order)\n\n        this.update(newState)\n    }\n\n    render() {\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Смена состояния заказа</h1>\n\n                <Group >\n                    <Div><Button before={<Icon36Done />} size=\"xl\" onClick={(e) => this.onClick(e, 'accepted')} size=\"xl\">Получен</Button></Div>\n                    <Div><Button before={<Icon36Cancel />} size=\"xl\" onClick={(e) => this.onClick(e, 'canceled')} size=\"xl\" >Отказ  </Button></Div>\n                </Group>\n            </Alert>\n        )\n    }\n}\n\nexport default SetOrderState;\n","export function orderStateToString(state) {\n    switch (state) {\n        case 'to_delivery':\n            return 'В доставке'\n        case 'accepted':\n            return 'Получен'\n        case 'canceled':\n            return \"Отменён\"\n        default:\n            return 'Не известное состояние'\n    }\n}\n\nexport function fullOrderDate(order) {\n    return order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { PanelHeader, Header, RichCell, Button, Avatar, PanelSpinner, CardGrid, Card } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByClientHashPhone, getClientBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Client.css';\n\nconst osName = platform();\n// var miniPanel;\n// if (osName !== IOS || osName !== ANDROID) {\n// \tminiPanel = <React.Fragment>\n// \t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n// \t</React.Fragment>\n// }\n\nclass Client extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\torders: null,\n\t\t\tuser: props.user,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getClient()\n\t\tawait this.getClientOrders()\n\t}\n\n\tasync getClient() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getClientBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getClientOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByClientHashPhone(user.hash_telephone)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t// right={miniPanel}\n\t\t\t\t>\n\t\t\t\t\tКлиент: мне везут\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t{/* header={<Header>Мне везут</Header>} */}\n\n\t\t\t\t{!this.state.orders ? <PanelSpinner size='large' /> : <Group >\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Отправитель: \" + order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"chat_with_courier\">Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{(this.state.orders && this.state.orders.length === 0) ? <CardGrid>\n\t\t\t\t\t\t<Card size=\"l\">\n\t\t\t\t\t\t\t<div style={{ height: 96, fontSize: 30, textAlign: \"center\" }} >\n\t\t\t\t\t\t\t\tЗаказов нет\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardGrid> : <div />\n\t\t\t\t\t}\n\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Client;\n","import React from 'react';\nimport { Panel, PanelHeader, PanelHeaderButton, Group, Cell, Switch } from '@vkontakte/vkui';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osName = platform();\n\nclass ClientOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            user: props.user,\n        };\n    }\n\n    render() {\n        const props = this.props;\n\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    Клиент: настройки\n\t\t\t\t</PanelHeader>\n                <Group>\n                    <Cell asideContent={<Switch />}>\n                        Разрешить уведомления\n                </Cell>\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nexport default ClientOptions;","import React from 'react';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\n\nconst apiKey = '482da132-c4be-476f-95ef-79ba61d579a4'\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nexport function geoMap(clientGeodata, courierGeodata, routingMode) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: apiKey, load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: routingMode,\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Клиент: курьер на карте\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.business_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata, order.routing_mode)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForClient;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar, FormLayout, Textarea, Div, CardGrid, Card } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getClientByOrderID, postMessages, getMessages } from '../../modules/backRequests'\n\nconst osName = platform();\n\nclass ChatWithCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            messages: null,\n            client: null,\n            msg: '',\n        };\n\n        this.onChange = this.onChange.bind(this);\n\n        this.state.chatUpdateInterval = setInterval(() => {\n            this.fetchChat()\n        }, 3000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        console.log(\"order\", props.order)\n        this.setState({ courier_id: props.order.courier_id })\n        const response = await getClientByOrderID(props.order.order_id)\n        if (response) {\n            this.setState({ client: response })\n\n            const messages = await getMessages(\"chat_\" + props.order.order_id.toString() + props.order.curier_id.toString() + response.client_id.toString())\n            if (messages) {\n                this.setState({ messages: messages })\n            }\n        }\n\n    }\n\n    async fetchChat() {\n        const props = this.props;\n        const chat_id = \"chat_\" + props.order.order_id.toString() + props.order.curier_id.toString() + this.state.client.client_id.toString()\n        console.log(\"chat_id\", chat_id)\n        const messages = await getMessages(chat_id)\n        if (messages) {\n            this.setState({ messages: messages })\n        }\n    }\n\n    async postAndUpdate() {\n        const props = this.props;\n        const chat_id = \"chat_\" + props.order.order_id.toString() + props.order.curier_id.toString() + this.state.client.client_id.toString()\n        const response = await postMessages(chat_id, 'клиент', this.state.msg)\n        if (response) {\n            this.setState({ msg: '' })\n            const messages = await getMessages(chat_id)\n            if (messages) {\n                this.setState({ messages: messages })\n            }\n        }\n    }\n\n    onClick = (e) => {\n        this.postAndUpdate()\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ msg: value });\n        console.log(this.state.msg)\n\n    }\n\n    render() {\n        const { id, order } = this.props;\n        const { msg } = this.state\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                     Чат с курьером\n                </PanelHeader>\n                <RichCell\n                    key={order.order_number}\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={'Заказ: ' + order.order_number}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                >\n                </RichCell>\n                <FormLayout>\n                    <Textarea value={msg}\n                        onChange={this.onChange}\n                        top=\"Введите сообщение\" placeholder=\"текст сообщения\" />\n                </FormLayout>\n                <Div>\n                    <Button size=\"xl\" onClick={(e) => this.onClick(e)}>Отправить сообщение</Button>\n                </Div>\n\n                {this.state.messages && this.state.messages.map((message) =>\n                    <CardGrid>\n                        <Card size=\"l\">\n                            <Div >{message.sender}: {message.message}</Div>\n                        </Card>\n                    </CardGrid>\n                )\n                }\n            </Panel>\n        )\n    }\n}\n\nChatWithCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default ChatWithCourier;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS, PanelSpinner, Card, CardGrid } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\n\nimport { postSearchOrdersByCourierID, getCourierBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nconst blueBackground = {\n    backgroundColor: 'var(--accent)'\n};\n\nclass Сourier extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getCourier()\n\t\tawait this.getCourierOrders()\n\t}\n\n\tasync getCourier() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getCourierBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getCourierOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByCourierID(user.curier_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\tupdate =() => {\n\t\tthis.getCourierOrders()\n\t\tconsole.log(\"cool\", this.state.orders)\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={\n\t\t\t\t\t\t<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t\t</PanelHeaderButton>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tКурьер: я везу\n      \t\t\t</PanelHeader>\n\t\t\t\t{/* header={<Header>Я везу</Header>} */}\n\t\t\t\t{!this.state.orders ? <PanelSpinner size='large' /> : <Group >\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={<Button onClick={(e) => props.go(e, order, this.update)} data-to=\"set_order_state\" style={blueBackground}>{orderStateToString(order.order_state)}</Button>}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_client\">Адрес на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"chat_with_client\">Чат с клиентом</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{(this.state.orders && this.state.orders.length === 0) ? <CardGrid>\n\t\t\t\t\t\t<Card size=\"l\">\n\t\t\t\t\t\t\t<div style={{ height: 96, fontSize: 30, textAlign: \"center\" }} >\n\t\t\t\t\t\t\t\tЗаказов нет\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardGrid> : <div />\n\t\t\t\t\t}\n\n\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\n\nСourier.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React from 'react';\nimport { Panel, PanelHeader, PanelHeaderButton, Group, Select } from '@vkontakte/vkui';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { putUpdateCourierOptions, getCourierOptionsByID } from '../../modules/backRequests'\n\nconst osName = platform();\n\nconst routing_modes = [\"masstransit\", \"driving\"]\n\nclass CourierOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            user: props.user,\n            options: { routing_mode: routing_modes[0] },\n            routing_mode: 1,\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    async componentDidMount() {\n        const {user} = this.state\n        const response = await getCourierOptionsByID(user.curier_id)\n        if (response) {\n            this.setState({ options: { routing_mode: response.routing_mode } })\n        }\n\n    }\n\n    async updateCourierOptions() {\n        const { options, user } = this.state\n        await putUpdateCourierOptions(user.curier_id, options)\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        console.log(\"name value\", name, value, routing_modes[value] )\n\n        this.setState({ options: { routing_mode: routing_modes[value] } , [name]: value});\n        console.log(\"courier options\", this.state.options)\n        this.updateCourierOptions()\n    }\n\n    render() {\n        const props = this.props;\n\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    Курьер: настройки\n\t\t\t\t</PanelHeader>\n                <Group>\n                    <Select top=\"Выберите тип транспорта\" \n                        name=\"routing_mode\"\n                        value={this.state.routing_mode}\n                        onChange={this.onChange}\n                    >\n                        <option value=\"0\">Автомобиль</option>\n                        <option value=\"1\">Общественный транспорт</option>\n                    </Select>\n                </Group>\n            </Panel>\n        );\n    }\n}\n\nexport default CourierOptions;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass ClientGeodataForCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: props.order.courier_id,\n            courier_geodata: props.courier_geodata,\n        };\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id, courier_geodata: props.courier_geodata })\n\n        console.log(\"courier_geodata\", props.courier_geodata)\n    }\n\n    render() {\n        const { id, order, courier_geodata } = this.props;\n\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {/* {order.shop} */}\n                    Курьер: адрес клиента\n                </PanelHeader>\n                <RichCell\n                    key={order.order_number}\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с клиентом</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, courier_geodata, order.routing_mode)}\n            </Panel>\n        )\n    }\n}\n\nClientGeodataForCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default ClientGeodataForCourier;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar, FormLayout, Textarea, Div, CardGrid, Card } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getClientByOrderID, postMessages, getMessages } from '../../modules/backRequests'\n\nconst osName = platform();\n\n// const messages = [\n//     { message: \"Когда вы подъедете?\", sender: \"клиент\" },\n//     { message: \"Через 45 минут\", sender: \"курьер\" },\n//     { message: \"Какой код у домофона и Ваш этаж\", sender: \"курьер\" },\n//     { message: \"78, этаж 8\", sender: \"курьер\" },\n// ]\n\nclass ChatWithClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: props.order.courier_id,\n            messages: null,\n            client: null,\n            msg: '',\n        };\n\n        this.onChange = this.onChange.bind(this);\n\n        this.state.chatUpdateInterval = setInterval(() => {\n            this.fetchChat()\n        }, 3000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id })\n        const response = await getClientByOrderID(props.order.order_id)\n        if (response) {\n            this.setState({ client: response })\n\n            const messages = await getMessages(\"chat_\" + props.order.order_id.toString() + props.order.curier_id.toString() + response.client_id.toString())\n            if (messages) {\n                this.setState({ messages: messages })\n            }\n        }\n\n    }\n\n    async fetchChat() {\n        const props = this.props;\n        const chat_id = \"chat_\" + props.order.order_id.toString() + props.order.curier_id.toString() + this.state.client.client_id.toString()\n        console.log(\"chat_id\", chat_id)\n        const messages = await getMessages(chat_id)\n        if (messages) {\n            this.setState({ messages: messages })\n        }\n    }\n\n    async postAndUpdate() {\n        const props = this.props;\n        const chat_id = \"chat_\" + props.order.order_id.toString() + props.order.curier_id.toString() + this.state.client.client_id.toString()\n        const response = await postMessages(chat_id, 'курьер', this.state.msg)\n        if (response) {\n            this.setState({ msg: '' })\n            const messages = await getMessages(chat_id)\n            if (messages) {\n                this.setState({ messages: messages })\n            }\n        }\n    }\n\n    onClick = (e) => {\n        this.postAndUpdate()\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ msg: value });\n        console.log(this.state.msg)\n\n    }\n\n    render() {\n        const { id, order } = this.props;\n        const { msg } = this.state\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {/* {order.shop} */}\n                    Чат с клиентом\n                </PanelHeader>\n                <RichCell\n                    key={order.order_number}\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={'Заказ: ' + order.order_number}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                >\n                </RichCell>\n\n                <FormLayout>\n                    <Textarea value={msg}\n                        onChange={this.onChange}\n                        top=\"Введите сообщение\" placeholder=\"текст сообщения\" />\n                </FormLayout>\n                <Div>\n                    <Button size=\"xl\" onClick={(e) => this.onClick(e)}>Отправить сообщение</Button>\n                </Div>\n\n                {this.state.messages && this.state.messages.map((message) =>\n                    <CardGrid>\n                        <Card size=\"l\">\n                            <Div >{message.sender}: {message.message}</Div>\n                        </Card>\n                    </CardGrid>\n                )\n                }\n\n            </Panel>\n        )\n    }\n}\n\nChatWithClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default ChatWithClient;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar, PanelSpinner, CardGrid, Card } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass Business extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n\t}\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tБизнес: заказы\n\t\t\t\t</PanelHeader>\n\t\t\t\t{/* header={<Header>У курьера</Header>} */}\n\t\t\t\t{!this.state.orders ? <PanelSpinner size='large' /> : <Group >\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell key={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Курьер \" + order.curier_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier_for_business\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{(this.state.orders && this.state.orders.length === 0) ? <CardGrid>\n\t\t\t\t\t\t<Card size=\"l\">\n\t\t\t\t\t\t\t<div style={{ height: 96, fontSize: 30, textAlign: \"center\" }} >\n\t\t\t\t\t\t\t\tЗаказов нет\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</CardGrid> : <div />\n\t\t\t\t\t}\n\n\t\t\t\t</Group>}\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","import React from 'react';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { FormLayout, FormStatus, Panel, PanelHeader, Input, Button, Group, Cell, List, Header, PanelHeaderButton } from '@vkontakte/vkui';\nimport { isValidPhone, trim } from '../../modules/utils'\n\nimport { getCuriersByBusinessID, postCreateBindingBusinessCourier, postDeleteBindingBusinessCourier } from '../../modules/backRequests'\n\nconst osName = platform();\n\nclass BusinessOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            validatePhone: true,\n            user: props.user,\n            phone: '',\n            couriers: null,\n        };\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async createBinding() {\n        const { user } = this.props;\n        const { phone } = this.state;\n\n        await postCreateBindingBusinessCourier(user.business_id, trim(phone, '+'))\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async unbind(curier_id) {\n        const { user } = this.props;\n\n        await postDeleteBindingBusinessCourier(user.business_id, curier_id)\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    addCourier = () => {\n        this.setState({ validatePhone: isValidPhone(this.state.phone) })\n        if (this.state.validatePhone) {\n            this.createBinding()\n        }\n    }\n\n    updatePhoneValue = (e) => {\n        this.setState({\n            phone: e.target.value,\n        });\n\n        console.log(this.state.phone)\n    }\n\n    resetPhoneValue = (e) => {\n        e.target.value = ''\n    }\n\n    render() {\n        const props = this.props;\n\n        let errPhone\n        if (!this.state.validatePhone) {\n            errPhone = <FormStatus header=\"Некорректный мобильный номер\" mode=\"error\">\n                Необходимо корректно ввести номер в международном формате\n                    </FormStatus>\n        }\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    Бизнес: настройки\n\t\t\t\t</PanelHeader>\n                {this.state.couriers &&\n                    <Group header={<Header mode=\"secondary\">Мои курьеры</Header>}>\n                        <List>\n                            {this.state.couriers.map((courier, index) => (\n                                <Cell key={courier.curier_id} removable onRemove={() => {\n                                    this.setState({\n                                        couriers: [...this.state.couriers.slice(0, index), ...this.state.couriers.slice(index + 1)]\n                                    })\n                                    this.unbind(courier.curier_id)\n                                }}>{courier.first_name} {courier.last_name}</Cell>\n                            ))}\n                        </List>\n                    </Group>\n                }\n                <FormLayout>\n                    {errPhone}\n                    <Input id='telephone' top=\"Добавить курьера по номеру телефона\"\n                        // onFocus={this.resetPhoneValue} value=\"+7123456789\"\n                        value={this.state.phone}\n                        type=\"tel\"\n                        onChange={this.updatePhoneValue}\n                    />\n                    <Button size=\"xl\" onClick={this.addCourier}>Добавить</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nexport default BusinessOptions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport bridge from '@vkontakte/vk-bridge';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon16Done from '@vkontakte/icons/dist/16/done';\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { Button, FormLayout, Input, Textarea, Select, FormLayoutGroup, Avatar, Snackbar } from '@vkontakte/vkui';\nimport { isValidPhone, trim, randomInteger } from '../../modules/utils'\n\nimport { postCreateOrder, getCuriersByBusinessID } from '../../modules/backRequests'\n\nimport './Business.css';\n\nconst blueBackground = {\n    backgroundColor: 'var(--accent)'\n};\n\nconst osName = platform();\n\nclass BusinessNewOrder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var now = new Date();\n        var mm = now.getMonth() + 1; // getMonth() is zero-based\n        var dd = now.getDate();\n        var hh = now.getHours()\n        const nowString = now.getFullYear() + \"-\" + (mm > 9 ? '' : '0') + mm + \"-\" + (dd > 9 ? '' : '0') + dd\n\n        this.state = {\n            snackbar: null,\n            fetchedUser: null,\n            order: {\n                description: '',\n                email: '',\n                phone: '',\n                order_number: '',\n                address: '',\n                order_date: nowString,\n                order_time_begin: (hh > 9 ? '' : '0') + hh + \":00\",\n                order_time_end: (hh + 1 > 9 ? '' : '0') + (hh + 1) + \":00\",\n                curier_id: 0,\n            },\n            selected_curier: 0,\n            user: props.user,\n            couriers: null,\n        };\n\n        this.onChange = this.onChange.bind(this);\n        this.openSaveOk = this.openSaveOk.bind(this);\n        this.openSaveFail = this.openSaveFail.bind(this);\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n            if (response.length > 0) {\n                var now = new Date();\n                var mm = now.getMonth() + 1; // getMonth() is zero-based\n                var dd = now.getDate();\n                var hh = now.getHours()\n                const nowString = now.getFullYear() + \"-\" + (mm > 9 ? '' : '0') + mm + \"-\" + (dd > 9 ? '' : '0') + dd\n\n                const order = {\n                    curier_id: response[0].curier_id,\n                    order_date: nowString,\n                    order_time_begin: (hh > 9 ? '' : '0') + hh + \":00\",\n                    order_time_end: (hh + 1 > 9 ? '' : '0') + (hh + 1) + \":00\",\n                }\n\n\n                this.setState({ order: order })\n            }\n        }\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        let order\n        if (name === 'curier_id') {\n            const courier = this.state.couriers[value]\n            this.state.order.curier_id = courier.curier_id\n            this.setState({ selected_curier: value })\n        } else {\n            order = { ...this.state.order, ...{ [name]: value } }\n            this.setState({ order: order });\n        }\n        console.log(this.state.order)\n    }\n\n    openSaveOk() {\n        if (this.state.snackbar) return;\n        this.setState({\n            snackbar:\n                <Snackbar\n                    layout=\"vertical\"\n                    onClose={() => this.setState({ snackbar: null })}\n                    before={<Avatar size={24} style={blueBackground}><Icon16Done fill=\"#fff\" width={14} height={14} /></Avatar>}\n                >\n                    Заказ сохранён\n          </Snackbar>\n        });\n    }\n\n    openSaveFail() {\n        if (this.state.snackbar) return;\n        this.setState({\n            snackbar:\n                <Snackbar\n                    layout=\"vertical\"\n                    onClose={() => this.setState({ snackbar: null })}\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#fff\" width={14} height={14} /></Avatar>}\n                >\n                    Ошибка сохранения!\n          </Snackbar>\n        });\n    }\n\n\n    // Тест!\n    async sendMessagetoClient() {\n        const rndID = randomInteger(1, 1000000000)\n        const result = await bridge.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"messages.send\",\n            \"request_id\": \"12335\",\n            \"params\": {\n                \"user_id\": \"600629237\",\n                \"v\": \"5.110\",\n                \"random_id\": rndID,\n                \"peer_id\": \"600629237\",\n                \"message\": \"создан заказ\",\n                \"access_token\": \"419610b0bee9752de2b6f00bd58226703377b2e0b894809bb2b7b5f141c6a412711ac531d10edb4fd8e23\"\n            }\n        });\n\n        console.log(\"sendMessagetoClient\", result)\n\n    }\n\n    createOrderHandler = () => {\n        const { user } = this.props\n        const { order } = this.state\n        const response = postCreateOrder(user.business_id, order)\n        if (response) {\n            this.sendMessagetoClient()\n            this.openSaveOk()\n        } else {\n            this.openSaveFail()\n        }\n    }\n\n    render() {\n        const props = this.props;\n        const { email, phone, address, order_number, description, curier_id, order_date, order_time_begin, order_time_end } = this.state.order;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    Бизнес: новый заказ\n                </PanelHeader>\n                <FormLayout>\n                    <Input\n                        top=\"Номер заказа\"\n                        name=\"order_number\"\n                        value={order_number}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Мобильный телефон\"\n                        type=\"tel\"\n                        name=\"phone\"\n                        value={phone}\n                        onChange={this.onChange}\n                    // keyboardType={'phone-pad'}\n                    />\n                    <Input\n                        type=\"email\"\n                        top=\"E-mail\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Адрес доставки\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this.onChange}\n                    />\n                    <Textarea\n                        top=\"Описание заказа\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        type=\"date\"\n                        top=\"Дата доставки\"\n                        name=\"order_date\"\n                        value={order_date}\n                        onChange={this.onChange}\n                    />\n                    <FormLayoutGroup top=\"Время доставки\">\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"Время от\"\n                            name=\"order_time_begin\"\n                            value={order_time_begin}\n                            onChange={this.onChange}\n                        />\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"до\"\n                            name=\"order_time_end\"\n                            value={order_time_end}\n                            onChange={this.onChange}\n                        />\n                    </FormLayoutGroup>\n                    <Select\n                        top=\"Выбрать курьера\"\n                        name=\"curier_id\"\n                        value={this.state.selected_curier}\n                        onChange={this.onChange}\n                    >\n                        {this.state.couriers && this.state.couriers.map((courier, index) => (\n                            <option key={index} value={index}>{courier.first_name} {courier.last_name}</option>\n                        ))}\n                    </Select>\n                    <Button size=\"xl\" onClick={this.createOrderHandler}>Создать заказ</Button>\n                </FormLayout>\n                {this.state.snackbar}\n            </Panel>\n        );\n    }\n}\n\nBusinessNewOrder.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default BusinessNewOrder;\n","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForBusiness extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {/* {order.shop} */}\n                    Бизнес: курьер на карте\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.curier_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata, order.routing_mode)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForBusiness.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForBusiness;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport { PanelHeader  } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nclass BusinessAllCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser:  props.fetchedUser,\n            orders: null,\n            ymaps: null,\n            user: props.user,\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.getBusinessOrders()\n        }, 5000);\n    }\n\n    setYmaps = ymaps => {\n        this.setState({ ymaps });\n    };\n\n    setCenter = ref => {\n        const { ymaps } = this.state;\n\n        if (ymaps) {\n            const map = ref.getMap();\n            const result = ymaps.util.bounds.getCenterAndZoom(\n                map.geoObjects.getBounds(),\n                map.container.getSize()\n            );\n\n            // Setting the optimal center and zoom level of the map.\n            var zoom = result.zoom\n            if (result.zoom > 19) {\n                zoom = 19\n            }\n            map.setCenter(result.center, zoom);\n        }\n    };\n\n    async componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n    }\n    \n    detailClick() {\n        alert(\"test\")\n        console.log(\"test\")\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Бизнес: курьеры на карте \n                </PanelHeader>\n                <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: ['util.bounds', 'control.ZoomControl'] }} >\n                    <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n                        {this.state.orders && this.state.orders.map((order) =>\n                            <Placemark key={order.order_number} properties={{\n                                hintContent: order.curier_name,\n                                properties: { name: \"test\" },\n                                balloonContent: '<div style=\"margin: 10px;\">' +\n                                    '<b>' + order.curier_name + '</b><br /> Заказ: ' + order.order_number + '<br />' +\n                                    '<i id=\"count\"></i> ' +\n                                    // '<input type=\"button\" onclick=\"this.detailClick()\" value=\"Считать кроликов!\"/>' +\n                                    '</div>',\n                            }} modules={['geoObject.addon.balloon', 'geoObject.addon.hint']} geometry={[order.geodata.lat, order.geodata.long]} instanceRef={ref => ref && this.setCenter(ref)} />\n                        )}\n                    </Map>\n                </YMaps>\n            </Panel>\n        )\n    }\n}\n\nBusinessAllCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default BusinessAllCourier;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Epic, Tabbar, TabbarItem, Panel, Div, Button, Group, PanelHeader } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport Icon28CompassOutline from '@vkontakte/icons/dist/28/compass_outline';\nimport Icon28MarketAddBadgeOutline from '@vkontakte/icons/dist/28/market_add_badge_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\n\nimport { IconLogo } from './logo/IconLogo';\nimport './App.css';\n\nimport { postCourierGeodata, getClientBySocialID, getCourierBySocialID, getBusinessBySocialID } from './modules/backRequests'\n\nimport { ROUTES } from './Routes';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\n// Главная страница\nimport Home from './panels/Home';\n\n// Регистрация новых пользователей\nimport WelcomeScreen from './panels/PopUpWindows/WelcomeScreen';\nimport SetBusinessGroup from './panels/PopUpWindows/SetBusinessGroup'\n\n// Смена состояния заказа\nimport SetOrderState from './panels/PopUpWindows/SetOrderState'\n\n// Клиент\nimport Client from './panels/Client/Client';\nimport ClientOptions from './panels/Client/ClientOptions';\nimport CourierGeodataForClient from './panels/Client/CourierGeodataForClient';\nimport ChatWithCourier from './panels/Client/ChatWithCourier'\n\n// Курьер\nimport Сourier from './panels/Courier/Сourier';\nimport CourierOptions from './panels/Courier/CourierOptions';\nimport ClientGeodataForCourier from './panels/Courier/ClientGeodataForCourier';\nimport ChatWithClient from './panels/Courier/ChatWithClient'\n\n// Бизнес\nimport Business from './panels/Business/Business';\nimport BusinessOptions from './panels/Business/BusinessOptions';\nimport BusinessNewOrder from './panels/Business/BusinessNewOrder';\nimport CourierGeodataForBusiness from './panels/Business/CourierGeodataForBusiness';\nimport BusinessAllCourier from './panels/Business/BusinessAllCourier';\n\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner size='large' />,\n\t\t\tactiveStory: 'more',\n\t\t\tclient_order: null,\n\t\t\tcourier_order: null,\n\t\t\tclient_order_for_business: null,\n\t\t\tuser: null,\n\t\t\tcourier_geodata: { lat: 55.659200, long: 37.753314 },\n\t\t\tshow_user_menu: 'none',\n\t\t\tinvertor: false,\n\t\t};\n\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\n\t\tthis.state.geoUpdateInterval = setInterval(() => {\n\t\t\tthis.fetchCourierGeo()\n\t\t}, 5000);\n\t}\n\n\tasync fetchCourierGeo() {\n\t\tswitch (this.state.activePanel) {\n\t\t\tcase 'client_orders_ondelivery':\n\t\t\tcase 'view_where_client':\n\t\t\t\t// Запрашиваем координаты курьера, если находимся на панелях courier или view_where_client\n\t\t\t\t// Надо также дополнить всеми остальными панелями курьера, чтобы координаты передавались всё\n\t\t\t\t// время, пока мы в режиме Курьера\n\t\t\t\tconst geodata = await bridge.send('VKWebAppGetGeodata');\n\t\t\t\tthis.setState({ courier_geodata: geodata });\n\n\t\t\t\tif (!this.state.user) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tawait postCourierGeodata(this.state.user.curier_id, { lat: geodata.lat, long: geodata.long })\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\tthis.setState({ fetchedUser: user, popout: null });\n\t}\n\n\tonStoryChange(e) {\n\t\tconsole.log(\"e.currentTarget.dataset.story\", e.currentTarget.dataset.story)\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story, activePanel: e.currentTarget.dataset.story })\n\t}\n\n\tsetLocation = (route) => {\n\t\tconsole.log(\"route\", route)\n\t\tif (route !== 'home') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\t// Проверяем, есть ли такой пользователь у нас на бэке\n\tasync fetchUser(userType) {\n\t\tconsole.log(\"userType\", userType)\n\t\tconst { fetchedUser } = this.state\n\t\tlet response\n\t\tswitch (userType) {\n\t\t\tcase 'client':\n\t\t\t\tresponse = await getClientBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\tresponse = await getCourierBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\tresponse = await getBusinessBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.setState({ popout: <WelcomeScreen userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\treturn false;\n\t}\n\n\tclosePopout = (result, userType) => {\n\t\tconsole.log(result)\n\t\tif (!result) {\n\t\t\tthis.setState({ popout: null, show_user_menu: 'none', activePanel: 'home' });\n\t\t} else {\n\t\t\tif (userType === 'business') {\n\t\t\t\tthis.setState({ popout: <SetBusinessGroup userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\t\t} else {\n\t\t\t\tthis.setState({ popout: null });\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ user: this.state.user })\n\t}\n\n\n\tgo = (e, object, update) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\n\t\tif (route === 'set_order_state') {\n\t\t\tthis.setState({ popout: <SetOrderState order={object} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} update={update} /> })\n\t\t\treturn\n\t\t}\n\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(route)\n\n\t\tif (route === 'view_where_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t\tthis.fetchCourierGeo()\n\t\t}\n\t\tif (route === 'view_where_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'chat_with_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'chat_with_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t}\n\t\tif (route === 'view_where_courier_for_business') {\n\t\t\tthis.setState({ client_order_for_business: object })\n\t\t}\n\n\t\tif (route === 'home') {\n\t\t\tthis.setState({ show_user_menu: 'none' })\n\t\t}\n\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\tonClick = (e, user_menu, user_story) => {\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(user_menu)\n\n\t\tthis.setState({ activeStory: user_story, activePanel: 'client_orders_ondelivery', show_user_menu: user_menu })\n\t\tconsole.log(this.state)\n\t}\n\n\tbuildDisplay(user_menu, user) {\n\t\tlet display = null\n\t\tswitch (user_menu) {\n\t\t\tcase 'client':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery' || this.state.activeStory === 'client'}\n\t\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\t\ttext=\"Мне везут\"\n\t\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar >}>\n\t\t\t\t\t< View id='client_orders_ondelivery' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t\t<Client id='client_orders_ondelivery' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<CourierGeodataForClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t\t<ChatWithCourier id='chat_with_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t\t< View id='client_options' activePanel='client_options' >\n\t\t\t\t\t\t<ClientOptions id='client_options' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t</Epic>\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery'}\n\t\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\t\ttext=\"Я везу\"\n\t\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'courier_options'}\n\t\t\t\t\t\t\tdata-story=\"courier_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar >}>\n\t\t\t\t\t<View id='client_orders_ondelivery' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t\t<Сourier id='client_orders_ondelivery' invertor={this.state.invertor} user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t\t\t\t<ChatWithClient id='chat_with_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go}></ChatWithClient>\n\t\t\t\t\t</View>\n\t\t\t\t\t< View id='courier_options' activePanel='courier_options' >\n\t\t\t\t\t\t<CourierOptions id='courier_options' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t</Epic >\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery'}\n\t\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\t\ttext=\"Заказы в работе\"\n\t\t\t\t\t\t><Icon28ListOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_couriers_onmap'}\n\t\t\t\t\t\t\tdata-story=\"business_couriers_onmap\"\n\t\t\t\t\t\t\ttext=\"Курьеры на карте\"\n\t\t\t\t\t\t><Icon28CompassOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_add_order'}\n\t\t\t\t\t\t\tdata-story=\"business_add_order\"\n\t\t\t\t\t\t\ttext=\"Новый заказ\"\n\t\t\t\t\t\t><Icon28MarketAddBadgeOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_options'}\n\t\t\t\t\t\t\tdata-story=\"business_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar>}>\n\t\t\t\t\t< View id='client_orders_ondelivery' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t\t<Business id='client_orders_ondelivery' user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<CourierGeodataForBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t\t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t\t\t\t<BusinessAllCourier id=\"business_couriers_onmap\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t\t\t\t<BusinessNewOrder id=\"business_add_order\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t\t\t\t<BusinessOptions id=\"business_options\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t</Epic >\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdisplay = <View id='main' activePanel={this.state.activePanel}>\n\t\t\t\t\t<Panel id='home'>\n\t\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\t\tГде курьер?\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t<Div className=\"header\">\n\t\t\t\t\t\t\t\t<IconLogo height={150} className=\"header__logo\" />\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t<Group title=\"Выбор кабинета пользователя\">\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28UserOutline />} size=\"xl\" onClick={(e) => this.onClick(e, 'client', 'client_orders_ondelivery')}>Я клиент</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28MarketOutline />} size=\"xl\" onClick={(e) => this.onClick(e, 'courier', 'client_orders_ondelivery')} >Я курьер</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28CubeBoxOutline />} size=\"xl\" onClick={(e) => this.onClick(e, 'business', 'client_orders_ondelivery')} >Я бизнес</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t}\n\n\t\treturn display\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Div>\n\t\t\t\t{this.buildDisplay(this.state.show_user_menu, this.state.user)}\n\t\t\t</Div>\n\t\t\t// <Epic activeStory={this.state.activeStory} tabbar={this.tabbarByUserType(this.state.activePanel)}\n\t\t\t// >\n\t\t\t// \t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t// \t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Client id='client' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Сourier id='courier' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Business id='business' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<CourierGeodataForClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t// \t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t// \t\t<CourierGeodataForBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t// \t\t<BusinessAllCourier id=\"business_couriers_onmap\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t// \t\t<BusinessNewOrder id=\"business_add_order\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t// \t\t<BusinessOptions id=\"business_options\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\n\t\t\t// </Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}