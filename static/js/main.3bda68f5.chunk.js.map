{"version":3,"sources":["Routes.js","panels/Home.js","panels/Client/Client.js","panels/Business/Business.js","panels/Business/BusinessOptions.js","panels/PopUpWindows/WelcomeScreen.js","panels/Сourier.js","panels/Geodata.js","panels/CourierGeodata.js","panels/BusinessGeodata.js","panels/BusinessAllCourier.js","panels/BusinessNewOrder.js","App.js","index.js"],"names":["ROUTES","Home","id","go","fetchedUser","title","expandable","before","onClick","data-to","osName","platform","IOS","ANDROID","Fragment","Client","props","state","this","left","header","getClientOrders","map","order","disabled","multiline","size","text","shop","caption","date","after","actions","e","number","React","Component","Business","getBusinessOrders","key","courier_name","BusinessOptions","addCourier","setState","validatePhone","isValidPhone","phone","createBinding","getMyCuriers","updatePhoneValue","target","value","console","log","resetPhoneValue","user","couriers","fetch","business_id","response","json","result","p","digits","replace","test","bindCurier","method","headers","body","JSON","stringify","ok","curier_id","unbindCurier","errPhone","mode","courier","index","removable","onRemove","slice","unbind","first_name","last_name","top","onFocus","onChange","WelcomeScreen","url","userType","bridge","send","userPhone","userEmail","social_id","toString","email","telephone","phone_number","closePopout","autoclose","action","createUser","onClose","Сourier","noShadow","getCourierOrders","mapState","center","zoom","controls","GeodataClient","courier_id","courier_geodata","lat","long","geoUpdateInterval","setInterval","fetchCourierGeo","clientGeodata","courierGeodata","client","query","apikey","load","width","height","defaultState","className","instanceRef","ref","routePanel","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","geoMap","GeodataCourier","GeodataBusiness","BusinessAllCourier","setYmaps","ymaps","setCenter","getMap","util","bounds","getCenterAndZoom","geoObjects","getBounds","container","getSize","orders","fetchOrdersWithGeo","geodata","alert","business_name","onLoad","properties","hintContent","name","balloonContent","modules","geometry","BusinessNewOrder","purpose","bind","currentTarget","status","bottom","keyboardType","defaultValue","buttonHandler","location","window","hash","substr","App","setLocation","route","popout","activePanel","object","dataset","fetchUser","client_order","courier_order","client_order_for_business","indexOf","activeStory","onStoryChange","story","tabbarApp","selected","data-story","tabbar","tabbarByUserType","data","Geodata","ReactDOM","render","document","getElementById"],"mappings":"yvBAAaA,EAAS,CAAC,UAAW,SAAU,W,mICsD7BC,EA1CF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,EAAWC,YAAX,OACZ,kBAAC,IAAD,CAAOF,GAAIA,GACV,kBAAC,IAAD,iEAWA,kBAAC,IAAD,CAAOG,MAAM,sBACZ,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAMC,YAAU,EAACC,OAAQ,kBAAC,IAAD,MAAsBC,QAASL,EAAIM,UAAQ,UAApE,+CAGA,kBAAC,IAAD,CAAMH,YAAU,EAACC,OAAQ,kBAAC,IAAD,MAAwBC,QAASL,EAAIM,UAAQ,WAAtE,+CAGA,kBAAC,IAAD,CAAMH,YAAU,EAACC,OAAQ,kBAAC,IAAD,MAAyBC,QAASL,EAAIM,UAAQ,YAAvE,mD,+GCjBEC,I,OAASC,eAGXD,KAAWE,KAAOF,KAAWG,MACnB,IAAMC,SACjB,IAAmB,IACnB,IAAmB,KACnB,IAAmB,M,IA8EPC,G,kDAzEd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACZb,YAAa,MAJI,E,8DA2BlB,MAlBqB,CACpB,CACC,KAAQ,6JACR,KAAQ,aACR,MAAS,iCACT,OAAU,UACV,OAAU,wJACV,WAAc,KAEf,CACC,KAAQ,wHACR,KAAQ,aACR,MAAS,iCACT,OAAU,YACV,OAAU,wJACV,WAAc,Q,+BAOhB,IAAMY,EAAQE,KAAKF,MACnB,OACC,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IAChB,kBAAC,IAAD,CACCiB,KAAM,kBAAC,IAAD,CAAmBX,QAASQ,EAAMb,GAAIM,UAAQ,QAClDC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAF5C,wCAQA,kBAAC,IAAD,CAAOQ,OAAQ,kBAAC,IAAD,2DACbF,KAAKG,kBAAkBC,KAAI,SAACC,GAAD,OAC3B,kBAAC,IAAD,CACCC,UAAQ,EACRC,WAAS,EACTlB,OAAQ,kBAAC,IAAD,CAAQmB,KAAM,KACtBC,KAAMJ,EAAMK,KACZC,QAASN,EAAMO,KACfC,MAAOR,EAAMN,MACbe,QACC,kBAAC,IAAMlB,SAAP,KACC,kBAAC,IAAD,CAAQN,QAAS,SAACyB,GAAD,OAAOjB,EAAMb,GAAG8B,EAAGV,IAAQd,UAAQ,sBAApD,oFACA,kBAAC,IAAD,qFAIDc,EAAMW,iB,GA3DOC,IAAMC,W,oBCbrB1B,I,OAASC,eA6EA0B,G,kDA1Ed,WAAYrB,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACZb,YAAa,MAJI,E,gEA6BlB,MApBuB,CACtB,CACC,KAAQ,6JACR,KAAQ,aACR,MAAS,iCACT,OAAU,UACV,OAAU,wJACV,WAAc,IACd,aAAgB,6EAEjB,CACC,KAAQ,wHACR,KAAQ,aACR,MAAS,iCACT,OAAU,YACV,OAAU,wJACV,WAAc,IACd,aAAgB,kG,+BAOlB,IAAMY,EAAQE,KAAKF,MACnB,OACC,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IAChB,kBAAC,IAAD,CACCiB,KAAM,kBAAC,IAAD,CAAmBX,QAASQ,EAAMb,GAAIM,UAAQ,QAClDC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAF5C,wCAOA,kBAAC,IAAD,CAAOQ,OAAQ,kBAAC,KAAD,2DACbF,KAAKoB,oBAAoBhB,KAAI,SAACC,GAAD,OAC7B,kBAAC,IAAD,CAAUgB,IAAKhB,EAAMW,OACpBV,UAAQ,EACRC,WAAS,EACTlB,OAAQ,kBAAC,IAAD,CAAQmB,KAAM,KACtBC,KAAM,wCAAYJ,EAAMiB,aACxBX,QAASN,EAAMO,KACfC,MAAOR,EAAMN,MACbe,QACC,kBAAC,IAAMlB,SAAP,KACC,kBAAC,IAAD,CAAQN,QAAS,SAACyB,GAAD,OAAOjB,EAAMb,GAAG8B,EAAGV,IAAQd,UAAQ,mCAApD,oFACA,kBAAC,IAAD,qFAIDc,EAAMW,iB,GA5DSC,IAAMC,W,SCiIdK,G,kDA7IX,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IA8EV0B,WAAa,WACT,EAAKC,SAAS,CAAEC,cAAe,EAAKC,aAAa,EAAK5B,MAAM6B,SACxD,EAAK7B,MAAM2B,eACX,EAAKG,gBAET,EAAKC,gBApFU,EAuFnBC,iBAAmB,SAAChB,GAChB,EAAKU,SAAS,CACVG,MAAOb,EAAEiB,OAAOC,QAGpBC,QAAQC,IAAI,EAAKpC,MAAM6B,QA5FR,EA+FnBQ,gBAAkB,SAACrB,GACfA,EAAEiB,OAAOC,MAAQ,IA7FjB,EAAKlC,MAAQ,CACTb,YAAa,KACbwC,eAAe,EACfW,KAAMvC,EAAMuC,KACZT,MAAO,GACPU,SAAU,MARC,E,sLAaTxC,EAAQE,KAAKF,MACT,oE,SACWyC,MADX,oEACuBzC,EAAMuC,KAAKG,a,cAAxCC,E,gBACaA,EAASC,O,OAAtBA,E,OACJ1C,KAAKyB,SAAS,CAAEa,SAAUI,EAAKC,S,0PAI/B3C,KAAK8B,e,yIAGIc,GACT,IACIC,EAASD,EAAEE,QAAQ,MAAO,IAC9B,MAFc,4DAECC,KAAKF,K,mKAId/C,EAAQE,KAAKF,MAEfkD,EAAa,CACbR,YAAa1C,EAAMuC,KAAKG,YACxBZ,MAAO5B,KAAKD,MAAM6B,OAGtBM,QAAQC,IAAIa,GAEF,uE,SACWT,MADX,uEACsB,CAC5BU,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpBC,KAAMC,KAAKC,UAAUL,K,QALrBP,E,QAOSa,KAELZ,EAAOD,EAASC,OACpBR,QAAQC,IAAIO,I,4KAIPa,G,oFACHzD,EAAQE,KAAKF,MAEf0D,EAAe,CACfhB,YAAa1C,EAAMuC,KAAKG,YACxBe,UAAWA,GAGfrB,QAAQC,IAAIqB,GACF,yE,SACWjB,MADX,yEACsB,CAC5BU,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpBC,KAAMC,KAAKC,UAAUG,K,QALrBf,E,QAOSa,KAELZ,EAAOD,EAASC,OACpBR,QAAQC,IAAIO,I,sIAwBV,IAGFe,EAHC,OACC3D,EAAQE,KAAKF,MAQnB,OALKE,KAAKD,MAAM2B,gBACZ+B,EAAW,kBAAC,IAAD,CAAYvD,OAAO,iKAA+BwD,KAAK,SAAvD,6TAKX,kBAAC,IAAD,CAAO1E,GAAIc,EAAMd,IACb,kBAAC,IAAD,+DAOCgB,KAAKD,MAAMuC,UACR,kBAAC,IAAD,CAAOpC,OAAQ,kBAAC,IAAD,CAAQwD,KAAK,aAAb,kEACX,kBAAC,IAAD,KACK1D,KAAKD,MAAMuC,SAASlC,KAAI,SAACuD,EAASC,GAAV,OACrB,kBAAC,IAAD,CAAMvC,IAAKsC,EAAQJ,UAAWM,WAAS,EAACC,SAAU,WAC9C,EAAKrC,SAAS,CACVa,SAAS,GAAD,oBAAM,EAAKvC,MAAMuC,SAASyB,MAAM,EAAGH,IAAnC,aAA8C,EAAK7D,MAAMuC,SAASyB,MAAMH,EAAQ,OAE5F,EAAKI,OAAOL,EAAQJ,aACpBI,EAAQM,WALZ,IAKyBN,EAAQO,gBAKjD,kBAAC,IAAD,KACKT,EACD,kBAAC,IAAD,CAAOzE,GAAG,YAAYmF,IAAI,iMAAsCC,QAASpE,KAAKoC,gBAAiBH,MAAM,cAAcoC,SAAUrE,KAAK+B,mBAClI,kBAAC,IAAD,CAAQvB,KAAK,KAAKlB,QAASU,KAAKwB,YAAhC,0D,GAvIUP,IAAMC,WCkGrBoD,G,kDA/FX,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTb,YAAaY,EAAMZ,aAJR,E,qLAUTY,EAAQE,KAAKF,MACfyE,EAAM,mD,KAEFzE,EAAM0E,S,OACd,W,OAGA,Y,OAGA,a,8BALJD,GAAU,U,mCAGVA,GAAU,U,mCAGVA,GAAU,W,uDAGH,G,yBAGqBE,IAAOC,KAAK,yBAA0B,I,eAAxDC,E,OACNzC,QAAQC,IAAIwC,G,UAEYF,IAAOC,KAAK,mBAAoB,I,eAAlDE,E,OACN1C,QAAQC,IAAIyC,GAERvC,EAAO,CACPwC,UAAW7E,KAAKD,MAAMb,YAAYF,GAAG8F,WACrCC,MAAOH,EAAUG,MACjBC,UAAWL,EAAUM,c,UAGJ1C,MAAMgC,EAAK,CAC5BtB,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpBC,KAAMC,KAAKC,UAAUhB,K,SALrBI,E,QAOSa,KAELZ,EAAOD,EAASC,OACpBR,QAAQC,IAAIO,IAGhB5C,EAAMoF,c,sIAGA,IAGFV,EAHC,OACC1E,EAAQE,KAAKF,MAGnB,OAAQA,EAAM0E,UACV,IAAK,SACDA,EAAW,uCACX,MACJ,IAAK,UACDA,EAAW,uCACX,MACJ,IAAK,WACDA,EAAW,kFAInB,OACI,kBAAC,IAAD,CACI1D,QAAS,CAAC,CACN3B,MAAO,0DACPgG,WAAW,EACXC,OAAQ,kBAAM,EAAKC,eACpB,CACClG,MAAO,uCACPgG,WAAW,EACXzB,KAAM,WAEV4B,QAASxF,EAAMoF,aAEf,yGAZJ,+CAaa,2BAAIV,GAbjB,sGAcI,6BAAK,6BAAL,+jBACgH,6BADhH,8pB,GAvFYvD,IAAMC,WCM5B1B,I,OAASC,eAgFA8F,G,kDA7Ed,WAAYzF,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,MAAQ,CACZb,YAAa,MAJI,E,+DA4BlB,MAlBqB,CACpB,CACC,KAAQ,6JACR,KAAQ,aACR,MAAS,iCACT,OAAU,UACV,OAAU,wJACV,WAAc,KAEf,CACC,KAAQ,wHACR,KAAQ,aACR,MAAS,iCACT,OAAU,YACV,OAAU,wJACV,WAAc,Q,+BAOhB,IAAMY,EAAQE,KAAKF,MACnB,OACC,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IAChB,kBAAC,IAAD,CACCwG,UAAQ,EAACvF,KACR,kBAAC,IAAD,CAAmBX,QAASQ,EAAMb,GAAIM,UAAQ,QAC5CC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAH7C,wCASA,kBAAC,IAAD,CAAOQ,OAAQ,kBAAC,KAAD,2DACbF,KAAKyF,mBAAmBrF,KAAI,SAACC,GAAD,OAC5B,kBAAC,IAAD,CACCC,UAAQ,EACRC,WAAS,EACTlB,OAAQ,kBAAC,IAAD,CAAQmB,KAAM,KACtBC,KAAMJ,EAAMK,KACZC,QAASN,EAAMO,KACfC,MAAOR,EAAMN,MACbe,QACC,kBAAC,IAAMlB,SAAP,KACC,kBAAC,IAAD,CAAQN,QAAS,SAACyB,GAAD,OAAOjB,EAAMb,GAAG8B,EAAGV,IAAQd,UAAQ,qBAApD,8EACA,kBAAC,IAAD,qFAIDc,EAAMW,iB,GA7DQC,IAAMC,W,SCDtBwE,GAAW,CAAEC,OAAQ,CAAC,UAAW,WAAYC,KAAM,EAAGC,SAAU,CAAC,gBAEjErG,GAASC,c,IA+HAqG,G,kDA1EX,WAAYhG,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTgG,YAAa,EACbC,gBAAiB,CAAEC,IAAK,QAAWC,KAAM,YAG7C,EAAKnG,MAAMoG,kBAAoBC,aAAY,WACvC,EAAKC,oBACN,KAVY,E,gLAcTvG,EAAQE,KAAKF,MACnBE,KAAKyB,SAAS,CAAEsE,WAAYjG,EAAMO,MAAM0F,aAIxC/F,KAAKyB,SAAS,CAAEuE,gBAAiB,CAAEC,IAAK,QAAWC,KAAM,a,wPAIrDlG,KAAKD,MAAMgG,WAAa,GAGxB/F,KAAKyB,SAAS,CACVuE,gBAAiB,CACbC,IAAKjG,KAAKD,MAAMiG,gBAAgBC,IAAM,KACtCC,KAAMlG,KAAKD,MAAMiG,gBAAgBE,KAAO,Q,qIAOpD,IAAMpG,EAAQE,KAAKF,MACnB,OACI,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IACb,kBAAC,IAAD,CACIiB,KAAM,kBAAC,IAAD,CAAmBX,QAASU,KAAKF,MAAMb,GAAIM,UAAQ,UACpDC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAI7CI,EAAMO,MAAMK,MAEjB,kBAAC,IAAD,CACIJ,UAAQ,EACRC,WAAS,EACTlB,OAAQ,kBAAC,IAAD,CAAQmB,KAAM,KACtBC,KAAK,GACLE,QAASb,EAAMO,MAAMO,KACrBC,MAAOf,EAAMO,MAAMN,MACnBe,QACI,kBAAC,IAAMlB,SAAP,KACI,kBAAC,IAAD,qFAIPE,EAAMO,MAAMW,QA/GjC,SAAgBsF,EAAeC,GAC3B,IAAIC,EACA7C,EAeJ,OAbI6C,EADyB,kBAAlBF,EACEA,EAAcL,IAAM,IAAMK,EAAcJ,KAExCI,EAIT3C,EAD0B,kBAAnB4C,EACGA,EAAeN,IAAM,IAAMM,EAAeL,KAE1CK,EAGdrE,QAAQC,IAAIoE,GAEL,kBAAC,KAAD,CAAOE,MAAO,CAAEC,OAAQ,uCAAwCC,KAAM,wBACzE,kBAAC,KAAD,CAAKC,MAAM,QAAQC,OAAO,QAAQC,aAAcpB,GAAUqB,UAAU,WAGhE,kBAAC,KAAD,CACIC,YAAa,SAAAC,GACLA,IACAA,EAAIC,WAAWnH,MAAMoH,IAAI,CACrBC,aAAa,EACbC,KAAM,cACNC,KAAM3D,EACN4D,GAAIf,EACJgB,WAAW,IAEfP,EAAIC,WAAWO,QAAQN,IAAI,CAEvBO,aAAa,EAGbC,kBAAkB,EAElBC,MAAO,CAAEC,aAAa,EAAOC,YAAY,EAAOC,MAAM,OAIlEN,QAAS,CACLO,MAAO,aAsEVC,CAAOnI,EAAMO,MAAM2B,OAAQhC,KAAKD,MAAMiG,sB,GA/D3B/E,IAAMC,WCtD5BwE,GAAW,CAAEC,OAAQ,CAAC,UAAW,WAAYC,KAAM,EAAGC,SAAU,CAAC,gBAEjErG,GAASC,c,IA4IAyI,G,kDAzFX,WAAYpI,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTgG,YAAa,EACbC,gBAAiB,CAAEC,IAAK,QAAWC,KAAM,YAG7C,EAAKnG,MAAMoG,kBAAoBC,aAAY,WACvC,EAAKC,oBACN,KAVY,E,gLAcTvG,EAAQE,KAAKF,MACnBE,KAAKyB,SAAS,CAAEsE,WAAYjG,EAAMO,MAAM0F,aAOxC/F,KAAKyB,SAAS,CACVuE,gBAAiB,CACbC,IAAK,QACLC,KAAM,a,wPAQVlG,KAAKD,MAAMgG,WAAa,GAMxB/F,KAAKyB,SAAS,CACVuE,gBAAiB,CACbC,IAAKjG,KAAKD,MAAMiG,gBAAgBC,IAAM,KACtCC,KAAMlG,KAAKD,MAAMiG,gBAAgBE,KAAO,Q,qIASpD,IAAMpG,EAAQE,KAAKF,MACnB,OACI,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IACb,kBAAC,IAAD,CACIiB,KAAM,kBAAC,IAAD,CAAmBX,QAASU,KAAKF,MAAMb,GAAIM,UAAQ,WACpDC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAI7CI,EAAMO,MAAMK,MAEjB,kBAAC,IAAD,CACIJ,UAAQ,EACRC,WAAS,EACTlB,OAAQ,kBAAC,IAAD,CAAQmB,KAAM,KACtBC,KAAK,GACLE,QAASb,EAAMO,MAAMO,KACrBC,MAAOf,EAAMO,MAAMN,MACnBe,QACI,kBAAC,IAAMlB,SAAP,KACI,kBAAC,IAAD,qFAIPE,EAAMO,MAAMW,QA5HjC,SAAgBsF,EAAeC,GAC3B,IAAIC,EACA7C,EAeJ,OAbI6C,EADyB,kBAAlBF,EACEA,EAAcL,IAAM,IAAMK,EAAcJ,KAExCI,EAIT3C,EAD0B,kBAAnB4C,EACGA,EAAeN,IAAM,IAAMM,EAAeL,KAE1CK,EAGdrE,QAAQC,IAAIoE,GAEL,kBAAC,KAAD,CAAOE,MAAO,CAAEC,OAAQ,uCAAwCC,KAAM,wBACzE,kBAAC,KAAD,CAAKC,MAAM,QAAQC,OAAO,QAAQC,aAAcpB,GAAUqB,UAAU,WAChE,kBAAC,KAAD,CACIC,YAAa,SAAAC,GACLA,IACAA,EAAIC,WAAWnH,MAAMoH,IAAI,CACrBC,aAAa,EACbC,KAAM,cACNC,KAAM3D,EACN4D,GAAIf,EACJgB,WAAW,IAEfP,EAAIC,WAAWO,QAAQN,IAAI,CAEvBO,aAAa,EAGbC,kBAAkB,EAElBC,MAAO,CAAEC,aAAa,EAAOC,YAAY,EAAOC,MAAM,OAIlEN,QAAS,CACLO,MAAO,aAqFVC,CAAOnI,EAAMO,MAAM2B,OAAQhC,KAAKD,MAAMiG,sB,GA9E1B/E,IAAMC,WCpD7BwE,GAAW,CAAEC,OAAQ,CAAC,UAAW,WAAYC,KAAM,EAAGC,SAAU,CAAC,gBAEjErG,GAASC,c,IA6HA0I,G,kDA1EX,WAAYrI,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTgG,YAAa,EACbC,gBAAiB,CAAEC,IAAK,QAAWC,KAAM,YAG7C,EAAKnG,MAAMoG,kBAAoBC,aAAY,WACvC,EAAKC,oBACN,KAVY,E,gLAcTvG,EAAQE,KAAKF,MACnBE,KAAKyB,SAAS,CAAEsE,WAAYjG,EAAMO,MAAM0F,aAIxC/F,KAAKyB,SAAS,CAAEuE,gBAAiB,CAAEC,IAAK,QAAWC,KAAM,a,wPAIrDlG,KAAKD,MAAMgG,WAAa,GAGxB/F,KAAKyB,SAAS,CACVuE,gBAAiB,CACbC,IAAKjG,KAAKD,MAAMiG,gBAAgBC,IAAM,KACtCC,KAAMlG,KAAKD,MAAMiG,gBAAgBE,KAAO,Q,qIAOpD,IAAMpG,EAAQE,KAAKF,MACnB,OACI,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IACb,kBAAC,IAAD,CACIiB,KAAM,kBAAC,IAAD,CAAmBX,QAASU,KAAKF,MAAMb,GAAIM,UAAQ,YACpDC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAI7CI,EAAMO,MAAMK,MAEjB,kBAAC,IAAD,CACIJ,UAAQ,EACRC,WAAS,EACTlB,OAAQ,kBAAC,IAAD,CAAQmB,KAAM,KACtBC,KAAMX,EAAMO,MAAMiB,aAClBX,QAASb,EAAMO,MAAMO,KACrBC,MAAOf,EAAMO,MAAMN,MACnBe,QACI,kBAAC,IAAMlB,SAAP,KACI,kBAAC,IAAD,qFAIPE,EAAMO,MAAMW,QA7GjC,SAAgBsF,EAAeC,GAC3B,IAAIC,EACA7C,EAeJ,OAbI6C,EADyB,kBAAlBF,EACEA,EAAcL,IAAM,IAAMK,EAAcJ,KAExCI,EAIT3C,EAD0B,kBAAnB4C,EACGA,EAAeN,IAAM,IAAMM,EAAeL,KAE1CK,EAGdrE,QAAQC,IAAIoE,GAEL,kBAAC,KAAD,CAAOE,MAAO,CAAEC,OAAQ,uCAAwCC,KAAM,wBACzE,kBAAC,KAAD,CAAKC,MAAM,QAAQC,OAAO,QAAQC,aAAcpB,GAAUqB,UAAU,WAChE,kBAAC,KAAD,CACIC,YAAa,SAAAC,GACLA,IACAA,EAAIC,WAAWnH,MAAMoH,IAAI,CACrBC,aAAa,EACbC,KAAM,cACNC,KAAM3D,EACN4D,GAAIf,EACJgB,WAAW,IAEfP,EAAIC,WAAWO,QAAQN,IAAI,CAEvBO,aAAa,EAGbC,kBAAkB,EAElBC,MAAO,CAAEC,aAAa,EAAOC,YAAY,EAAOC,MAAM,OAIlEN,QAAS,CACLO,MAAO,aAsEVC,CAAOnI,EAAMO,MAAM2B,OAAQhC,KAAKD,MAAMiG,sB,GA/DzB/E,IAAMC,WCpD9BwE,GAAW,CAAEC,OAAQ,CAAC,UAAW,WAAYC,KAAM,EAAGC,SAAU,CAAC,gBAEjErG,GAASC,c,IAqIA2I,G,kDAzHX,WAAYtI,GAAQ,IAAD,uBACf,cAAMA,IAeVuI,SAAW,SAAAC,GACP,EAAK7G,SAAS,CAAE6G,WAjBD,EAoBnBC,UAAY,SAAAtB,GAAQ,IACRqB,EAAU,EAAKvI,MAAfuI,MAER,GAAIA,EAAO,CACP,IAAMlI,EAAM6G,EAAIuB,SACV7F,EAAS2F,EAAMG,KAAKC,OAAOC,iBAC7BvI,EAAIwI,WAAWC,YACfzI,EAAI0I,UAAUC,WAIdnD,EAAOjD,EAAOiD,KACdjD,EAAOiD,KAAO,KACdA,EAAO,IAEXxF,EAAImI,UAAU5F,EAAOgD,OAAQC,KAhCjC,IAAIoD,EAAS,EAAKC,mBAAmBnJ,EAAM0C,aAH5B,OAKf,EAAKzC,MAAQ,CACTyC,YAAa1C,EAAM0C,YACnBwG,OAAQA,EACRV,MAAO,MAGX,EAAKvI,MAAMoG,kBAAoBC,aAAY,WACvC,EAAK3E,SAAS,CAACuH,OAAQ,EAAKC,mBAAmBnJ,EAAM0C,iBACtD,KAbY,E,+DA6CAxD,GACf,OAAIgB,KAAKD,OAASC,KAAKD,MAAMiJ,QACzBhJ,KAAKD,MAAMiJ,OAAO,GAAGE,QAAQjD,IAAMjG,KAAKD,MAAMiJ,OAAO,GAAGE,QAAQjD,IAAM,KACtEjG,KAAKD,MAAMiJ,OAAO,GAAGE,QAAQhD,KAAOlG,KAAKD,MAAMiJ,OAAO,GAAGE,QAAQhD,KAAO,KACjElG,KAAKD,MAAMiJ,QAEX,CACH,CACI,KAAQ,6JACR,KAAQ,aACR,MAAS,iCACT,OAAU,UACV,OAAU,wJACV,WAAc,IACd,aAAgB,4EAChB,QAAW,CAAE/C,IAAK,QAAWC,KAAM,YAEvC,CACI,KAAQ,6JACR,KAAQ,aACR,MAAS,iCACT,OAAU,YACV,OAAU,wJACV,WAAc,IACd,aAAgB,8FAChB,QAAW,CAAED,IAAK,UAAWC,KAAM,e,oCAO/CiD,MAAM,QACNjH,QAAQC,IAAI,U,+BAGN,IAAD,OACLD,QAAQC,IAAI,UAEZ,IAAMrC,EAAQE,KAAKF,MACnB,OACI,kBAAC,IAAD,CAAOd,GAAIc,EAAMd,IACb,kBAAC,IAAD,CACIiB,KAAM,kBAAC,IAAD,CAAmBX,QAASU,KAAKF,MAAMb,GAAIM,UAAQ,YACpDC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAFlD,8CAMaI,EAAMsJ,eAEnB,kBAAC,KAAD,CAAO3C,MAAO,CAAEC,OAAQ,uCAAwCC,KAAM,CAAC,cAAe,yBAClF,kBAAC,KAAD,CAAKC,MAAM,QAAQC,OAAO,QAAQC,aAAcpB,GAAUqB,UAAU,UAAUsC,OAAQ,SAAAf,GAAK,OAAI,EAAKD,SAASC,KACxGtI,KAAKD,MAAMiJ,QAAUhJ,KAAKD,MAAMiJ,OAAO5I,KAAI,SAACC,GAAD,OACxC,kBAAC,KAAD,CAAWgB,IAAKhB,EAAMW,OAAQsI,WAAY,CACtCC,YAAalJ,EAAMiB,aACnBgI,WAAY,CAAEE,KAAM,QACpBC,eAAgB,iCACJpJ,EAAMiB,aAAe,8CAAuBjB,EAAMW,OAD9C,mCAKjB0I,QAAS,CAAC,0BAA2B,wBAAyBC,SAAU,CAACtJ,EAAM6I,QAAQjD,IAAK5F,EAAM6I,QAAQhD,MAAOc,YAAa,SAAAC,GAAG,OAAIA,GAAO,EAAKsB,UAAUtB,gB,GA3GzJhG,IAAMC,W,UCXjC1B,I,OAASC,eAmEAmK,G,kDAhEX,WAAY9J,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTb,YAAa,KACb6F,MAAO,GACP8E,QAAS,IAGb,EAAKxF,SAAW,EAAKA,SAASyF,KAAd,gBATD,E,qDAYV/I,GAAI,IAAD,EACgBA,EAAEgJ,cAAlBP,EADA,EACAA,KAAMvH,EADN,EACMA,MACdjC,KAAKyB,SAAL,gBAAiB+H,EAAOvH,M,sCAIxBkH,MAAM,W,+BAIN,IAAMrJ,EAAQE,KAAKF,MADd,EAEsBE,KAAKD,MAAxBgF,EAFH,EAEGA,MAFH,EAEU8E,QACf,OACI,kBAAC,IAAD,CAAO7K,GAAIc,EAAMd,IACb,kBAAC,IAAD,CACIiB,KAAM,kBAAC,IAAD,CAAmBX,QAASQ,EAAMb,GAAIM,UAAQ,YAC/CC,KAAWE,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAG7C,CAACI,EAAMsJ,gBAEZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI/B,KAAK,QACLlD,IAAI,SACJqF,KAAK,QACLvH,MAAO8C,EACPV,SAAUrE,KAAKqE,SACf2F,OAAQjF,EAAQ,QAAU,QAC1BkF,OAAQlF,EAAQ,+KAAqC,+MAGzD,kBAAC,IAAD,CAAOZ,IAAI,oGAAoB+F,aAAc,YAAaC,aAAa,oBACvE,kBAAC,IAAD,CAAOhG,IAAI,oFAEX,kBAAC,IAAD,CAAUA,IAAI,0FACd,kBAAC,IAAD,CAAQA,IAAI,yFACR,4BAAQlC,MAAM,KAAd,4BACA,4BAAQA,MAAM,KAAd,+CAEJ,kBAAC,IAAD,CAAQzB,KAAK,KAAKlB,QAASU,KAAKoK,eAAhC,mF,GArDWnJ,IAAMC,WCe/BmJ,GAAWC,OAAOD,SAASE,KAAKC,OAAO,GAyK9BC,G,kDAtKd,WAAY3K,GAAQ,IAAD,8BAClB,cAAMA,IAyBP4K,YAAc,SAACC,GACA,SAAVA,EACHlG,IAAOC,KAAK,sBAAuB,CAAE2F,SAAUM,IAE/ClG,IAAOC,KAAK,sBAAuB,CAAE2F,SAAU,MA9B9B,EA8DnBnF,YAAc,WACb,EAAKzD,SAAS,CAAEmJ,OAAQ,KAAMC,YAAa,UA/DzB,EAkEnB5L,GAAK,SAAC8B,EAAG+J,GACR,IAAMH,EAAQ5J,EAAEgJ,cAAcgB,QAAQxD,GAGtC,EAAKyD,UAAUL,GAED,uBAAVA,GACH,EAAKlJ,SAAS,CAAEwJ,aAAcH,IAEjB,sBAAVH,GACH,EAAKlJ,SAAS,CAAEyJ,cAAeJ,IAElB,oCAAVH,GACH,EAAKlJ,SAAS,CAAE0J,0BAA2BL,IAG5C,EAAKrJ,SAAS,CAAEoJ,YAAaF,IAC7B,EAAKD,YAAYC,IAhFjB,EAAK5K,MAAQ,CACZ8K,aAAc/L,EAAOsM,QAAQf,IAAYA,GAAW,OACpDnL,YAAa,KACb0L,OAAQ,kBAAC,IAAD,CAAepK,KAAK,UAC5B6K,YAAa,OACbJ,aAAc,KACdC,cAAe,KACfC,0BAA2B,KAC3B9I,KAAM,MAGP,EAAKiJ,cAAgB,EAAKA,cAAcxB,KAAnB,gBAdH,E,gMAkBCrF,IAAOC,KAAK,uB,OAAzBrC,E,OACNrC,KAAKyB,SAAS,CAAEvC,YAAamD,EAAMuI,OAAQ,O,0IAG9B7J,GACbf,KAAKyB,SAAS,CAAE4J,YAAatK,EAAEgJ,cAAcgB,QAAQQ,U,yEAYtC/G,G,2EACXD,EAAM,mD,KACFC,E,OACF,W,OAGA,Y,OAGA,a,8BALJD,GAAY,W,mCAGZA,GAAY,W,mCAGZA,GAAY,Y,uDAGL,G,yBAGYhC,MAAMgC,EAAMvE,KAAKD,MAAMb,YAAYF,I,aAApDyD,E,QACSa,G,kCACKb,EAASC,O,eAAtBA,E,OACJ1C,KAAKyB,SAAS,CAACY,KAAMK,EAAKC,S,mBAEnB,G,eAER3C,KAAKyB,SAAS,CAAEmJ,OAAQ,kBAAC,GAAD,CAAepG,SAAUA,EAAUtF,YAAac,KAAKD,MAAMb,YAAagG,YAAalF,KAAKkF,gB,mBAC3G,G,+IA2BSV,GAChB,IAAIgH,EAAY,KAChB,OAAQxL,KAAKD,MAAM8K,aAClB,IAAK,SACJW,EAAY,kBAAC,IAAD,KACX,kBAAC,IAAD,CACClM,QAASU,KAAKsL,cACdG,SAAqC,6BAA3BzL,KAAKD,MAAMsL,YACrBK,aAAW,2BACXjL,KAAK,qDACL,kBAAC,IAAD,OACD,kBAAC,IAAD,CACCnB,QAASU,KAAKsL,cACdG,SAAqC,mBAA3BzL,KAAKD,MAAMsL,YACrBK,aAAW,iBACXjL,KAAK,0DACL,kBAAC,IAAD,QAEF,MACD,IAAK,WACJ+K,EAAY,kBAAC,IAAD,KACX,kBAAC,IAAD,CACClM,QAASU,KAAKsL,cACdG,SAAqC,SAA3BzL,KAAKD,MAAMsL,YACrBK,aAAW,OACXjL,KAAK,oFACL,kBAAC,IAAD,OACD,kBAAC,IAAD,CACCnB,QAASU,KAAKsL,cACdG,SAAqC,4BAA3BzL,KAAKD,MAAMsL,YACrBK,aAAW,0BACXjL,KAAK,0FACL,kBAAC,IAAD,OACD,kBAAC,IAAD,CACCnB,QAASU,KAAKsL,cACdG,SAAqC,uBAA3BzL,KAAKD,MAAMsL,YACrBK,aAAW,qBACXjL,KAAK,iEACL,kBAAC,IAAD,OACD,kBAAC,IAAD,CACCnB,QAASU,KAAKsL,cACdG,SAAqC,qBAA3BzL,KAAKD,MAAMsL,YACrBK,aAAW,mBACXjL,KAAK,0DACL,kBAAC,IAAD,QAKJ,OAAO+K,I,+BAIP,OACC,kBAAC,IAAD,CAAMH,YAAarL,KAAKD,MAAMsL,YAAaM,OAAQ3L,KAAK4L,iBAAiB5L,KAAKD,MAAM8K,cAEnF,kBAAC,IAAD,CAAM7L,GAAG,OAAO6L,YAAa7K,KAAKD,MAAM8K,YAAaD,OAAQ5K,KAAKD,MAAM6K,QACvE,kBAAC,EAAD,CAAM5L,GAAG,OAAOE,YAAac,KAAKD,MAAMb,YAAaD,GAAIe,KAAKf,KAC9D,kBAAC,GAAD,CAAQD,GAAG,SAAS6M,KAAM7L,KAAKD,MAAM8L,KAAM5M,GAAIe,KAAKf,KACpD,kBAAC,GAAD,CAASD,GAAG,UAAUC,GAAIe,KAAKf,KAC/B,kBAAC,GAAD,CAAUD,GAAG,WAAWC,GAAIe,KAAKf,KACjC,kBAAC6M,GAAD,CAAe9M,GAAG,qBAAqBqB,MAAOL,KAAKD,MAAMkL,aAAchM,GAAIe,KAAKf,KAChF,kBAAC,GAAD,CAAgBD,GAAG,oBAAoBqB,MAAOL,KAAKD,MAAMmL,cAAejM,GAAIe,KAAKf,KACjF,kBAAC,GAAD,CAAiBD,GAAG,kCAAkCqB,MAAOL,KAAKD,MAAMoL,0BAA2BlM,GAAIe,KAAKf,MAE7G,kBAAC,IAAD,CAAMD,GAAG,0BAA0B6L,YAAY,2BAC9C,kBAAC,GAAD,CAAoB7L,GAAG,0BAA0BwD,YAAY,MAAM4G,cAAc,4HAAwBnK,GAAIe,KAAKf,MAEnH,kBAAC,IAAD,CAAMD,GAAG,qBAAqB6L,YAAY,sBACzC,kBAAC,GAAD,CAAkB7L,GAAG,qBAAqBqD,KAAMrC,KAAKD,MAAMsC,KAAMnD,YAAac,KAAKD,MAAMb,YAAaD,GAAIe,KAAKf,MAEhH,kBAAC,IAAD,CAAMD,GAAG,mBAAmB6L,YAAY,oBACvC,kBAAC,GAAD,CAAiB7L,GAAG,mBAAmBqD,KAAMrC,KAAKD,MAAMsC,KAAMnD,YAAac,KAAKD,MAAMb,YAAcD,GAAIe,KAAKf,W,GA/JhGgC,IAAMC,WCzBxBuD,IAAOC,KAAK,gBAEZqH,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.3bda68f5.chunk.js","sourcesContent":["export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline'\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Где курьер?</PanelHeader>\n\t\t{/* {fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>} */}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Cell expandable before={<Icon28UserOutline/>} onClick={go} data-to=\"client\">\n\t\t\t\t\tЯ клиент\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28MarketOutline/>} onClick={go} data-to=\"courier\">\n\t\t\t\t\tЯ курьер\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"business\">\n\t\t\t\t\tЯ бизнес\n\t\t\t\t</Cell>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/24/settings';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport './Client.css';\n\nconst osName = platform();\n\nvar miniPanel;\nif (osName !== IOS || osName !== ANDROID) {\n\tminiPanel = <React.Fragment>\n\t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n\t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n\t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n\t</React.Fragment>\n}\n\nclass Client extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tgetClientOrders() {\n\t\tconst clientOrders = [\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\n\t\t\t\t\"date\": '06.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '5488779',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 123,\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\n\t\t\t\t\"date\": '08.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '34643-643',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 124,\n\t\t\t},\n\t\t]\n\t\treturn clientOrders\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t// right={miniPanel}\n\t\t\t\t>\n\t\t\t\t\tКлиент\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\n\t\t\t\t\t{this.getClientOrders().map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.shop}\n\t\t\t\t\t\t\tcaption={order.date}\n\t\t\t\t\t\t\tafter={order.state}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Client;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass Business extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tgetBusinessOrders() {\n\t\tconst businessOrders = [\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\n\t\t\t\t\"date\": '06.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '5488779',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 123,\n\t\t\t\t\"courier_name\": 'Иванов Виктор',\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\n\t\t\t\t\"date\": '08.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '34643-643',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 124,\n\t\t\t\t\"courier_name\": 'Равшан Ильюсович',\n\t\t\t},\n\t\t]\n\t\treturn businessOrders\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tБизнес\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>У курьера</Header>}>\n\t\t\t\t\t{this.getBusinessOrders().map((order) =>\n\t\t\t\t\t\t<RichCell key={order.number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Курьер \" + order.courier_name}\n\t\t\t\t\t\t\tcaption={order.date}\n\t\t\t\t\t\t\tafter={order.state}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier_for_business\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","import React from 'react';\nimport { FormLayout, FormStatus, Panel, PanelHeader, Input, Button, Group, Cell, List, Header } from '@vkontakte/vkui';\n\nclass BusinessOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            validatePhone: true,\n            user: props.user,\n            phone: '',\n            couriers: null,\n        };\n    }\n\n    async getMyCuriers() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/curiers/'\n        let response = await fetch(url + props.user.business_id);\n        let json = await response.json();\n        this.setState({ couriers: json.result })\n    }\n\n    async componentDidMount() {\n        this.getMyCuriers()\n    }\n\n    isValidPhone(p) {\n        var phoneRe = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n        var digits = p.replace(/\\D/g, \"\");\n        return phoneRe.test(digits);\n    }\n\n    async createBinding() {\n        const props = this.props;\n\n        let bindCurier = {\n            business_id: props.user.business_id,\n            phone: this.state.phone\n        };\n\n        console.log(bindCurier)\n\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/bind_curier'\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(bindCurier)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n    }\n\n    async unbind(curier_id) {\n        const props = this.props;\n\n        let unbindCurier = {\n            business_id: props.user.business_id,\n            curier_id: curier_id\n        };\n\n        console.log(unbindCurier)\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/unbind_curier'\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(unbindCurier)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n    }\n\n    addCourier = () => {\n        this.setState({ validatePhone: this.isValidPhone(this.state.phone) })\n        if (this.state.validatePhone) {\n            this.createBinding()\n        }\n        this.getMyCuriers()\n    }\n\n    updatePhoneValue = (e) => {\n        this.setState({\n            phone: e.target.value,\n        });\n\n        console.log(this.state.phone)\n    }\n\n    resetPhoneValue = (e) => {\n        e.target.value = ''\n    }\n\n    render() {\n        const props = this.props;\n\n        let errPhone\n        if (!this.state.validatePhone) {\n            errPhone = <FormStatus header=\"Некорректный мобильный номер\" mode=\"error\">\n                Необходимо корректно ввести номер в международном формате\n                    </FormStatus>\n        }\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                // left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                //     {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                // </PanelHeaderButton>}\n                >\n                    Настройки\n\t\t\t\t</PanelHeader>\n                {this.state.couriers &&\n                    <Group header={<Header mode=\"secondary\">Мои курьеры</Header>}>\n                        <List>\n                            {this.state.couriers.map((courier, index) => (\n                                <Cell key={courier.curier_id} removable onRemove={() => {\n                                    this.setState({\n                                        couriers: [...this.state.couriers.slice(0, index), ...this.state.couriers.slice(index + 1)]\n                                    })\n                                    this.unbind(courier.curier_id)\n                                }}>{courier.first_name} {courier.last_name}</Cell>\n                            ))}\n                        </List>\n                    </Group>\n                }\n                <FormLayout>\n                    {errPhone}\n                    <Input id='telephone' top=\"Добавить курьера по номеру телефона\" onFocus={this.resetPhoneValue} value=\"+7123456789\" onChange={this.updatePhoneValue} />\n                    <Button size=\"xl\" onClick={this.addCourier}>Добавить</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nexport default BusinessOptions;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport PropTypes from 'prop-types';\nimport { PopoutWrapper, Button, Alert } from '@vkontakte/vkui';\n\nclass WelcomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n\n        };\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n\t\t\tcase 'client':\n\t\t\t\turl = url+'clients'\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\turl = url+'curiers'\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\turl = url+'business'\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout();\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n        }\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Я согласен',\n                    autoclose: true,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: true,\n                    mode: 'cancel'\n                }]}\n                onClose={props.closePopout}\n            >\n                <h1>Здравствуйте!</h1>\n                Вы новый <b>{userType}</b> нашего приложения!\n                <div><br />\n                Подтвердите, что даёте согласие, на доступ приложения к информации о вашей учётной записи в социальной сети ВК. <br />Данная информация не будет передаваться третьим лицам.\nМы храним только ID в социальной сети и мы не храним Ваш email и мобильный номер.\n                </div>\n            </Alert>\n        )\n    }\n}\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nclass Сourier extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: null,\n\t\t};\n\n\t}\n\n\tgetCourierOrders() {\n\t\tconst clientOrders = [\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\n\t\t\t\t\"date\": '06.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '5488779',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 123,\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\n\t\t\t\t\"date\": '08.06.2020',\n\t\t\t\t\"state\": 'Везут',\n\t\t\t\t\"number\": '34643-643',\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t\t\t\t\"courier_id\": 124,\n\t\t\t},\n\t\t]\n\t\treturn clientOrders\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tnoShadow left={\n\t\t\t\t\t\t<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t\t</PanelHeaderButton>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tКурьер\n      \t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\n\t\t\t\t\t{this.getCourierOrders().map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.shop}\n\t\t\t\t\t\t\tcaption={order.date}\n\t\t\t\t\t\t\tafter={order.state}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_client\">Адрес на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с клиентом</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\n\nСourier.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id})\n\n        // возвращаем с бека координаты курьера\n        // пока заглушка\n        this.setState({ courier_geodata: { lat: 55.659200, long: 37.753314 } })\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            // возвращаем с бека координаты курьера\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataClient;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id })\n\n        // получаем координаты курьера\n        // const geodata = await bridge.send('VKWebAppGetGeodata');\n        // this.setState({ courier_geodata: geodata });\n\n        // пока заглушка\n        this.setState({\n            courier_geodata: {\n                lat: 55.659200,\n                long: 37.753314\n            }\n        })\n\n        // отправляем координаты курьера на бек\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            // получаем координаты курьера\n            // const geodata = await bridge.send('VKWebAppGetGeodata');\n            // this.setState({ courier_geodata: geodata });\n\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n\n            // отправляем координаты курьера на бек\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"courier\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с клиентом</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataCourier;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataBusiness extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id })\n\n        // возвращаем с бека координаты курьера\n        // пока заглушка\n        this.setState({ courier_geodata: { lat: 55.659200, long: 37.753314 } })\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            // возвращаем с бека координаты курьера\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text={props.order.courier_name}\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataBusiness.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataBusiness;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(ordes) {\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n            <Placemark geometry={[55.684758, 37.738521]} />\n            <Placemark geometry={[55.684858, 37.738921]} />\n        </Map>\n    </YMaps>\n}\n\nclass BusinessAllCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var orders = this.fetchOrdersWithGeo(props.business_id)\n\n        this.state = {\n            business_id: props.business_id,\n            orders: orders,\n            ymaps: null,\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.setState({orders: this.fetchOrdersWithGeo(props.business_id)})\n        }, 5000);\n    }\n\n    setYmaps = ymaps => {\n        this.setState({ ymaps });\n    };\n\n    setCenter = ref => {\n        const { ymaps } = this.state;\n\n        if (ymaps) {\n            const map = ref.getMap();\n            const result = ymaps.util.bounds.getCenterAndZoom(\n                map.geoObjects.getBounds(),\n                map.container.getSize()\n            );\n\n            // Setting the optimal center and zoom level of the map.\n            var zoom = result.zoom\n            if (result.zoom > 19) {\n                zoom = 19\n            }\n            map.setCenter(result.center, zoom);\n        }\n    };\n\n    // async componentDidMount() {\n    //     const props = this.props;\n    //     this.setState({ business_id: props.business_id })\n    //     console.log(\"mount\")\n    // }\n\n    fetchOrdersWithGeo(id) {\n        if (this.state && this.state.orders) {\n            this.state.orders[0].geodata.lat = this.state.orders[0].geodata.lat + 0.0001\n            this.state.orders[0].geodata.long = this.state.orders[0].geodata.long + 0.0001\n            return this.state.orders\n        } else {\n            return [\n                {\n                    \"shop\": 'Магазин \"Развивающие игрушки\"',\n                    \"date\": '06.06.2020',\n                    \"state\": 'Везут',\n                    \"number\": '5488779',\n                    \"target\": 'Москва, ул. Братиславская, д. 31к1',\n                    \"courier_id\": 123,\n                    \"courier_name\": 'Иванов Виктор',\n                    \"geodata\": { lat: 55.659200, long: 37.753314 }\n                },\n                {\n                    \"shop\": 'Магазин \"Развивающие игрушки\"',\n                    \"date\": '08.06.2020',\n                    \"state\": 'Везут',\n                    \"number\": '34643-643',\n                    \"target\": 'Москва, ул. Братиславская, д. 31к1',\n                    \"courier_id\": 124,\n                    \"courier_name\": 'Равшан Ильюсович',\n                    \"geodata\": { lat: 55.659209, long: 37.753434 }\n                },\n            ]\n        }\n    }\n\n    detailClick() {\n        alert(\"test\")\n        console.log(\"test\")\n    }\n\n    render() {\n        console.log(\"render\")\n\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Курьеры {props.business_name}\n                </PanelHeader>\n                <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: ['util.bounds', 'control.ZoomControl'] }} >\n                    <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n                        {this.state.orders && this.state.orders.map((order) =>\n                            <Placemark key={order.number} properties={{\n                                hintContent: order.courier_name,\n                                properties: { name: \"test\" },\n                                balloonContent: '<div style=\"margin: 10px;\">' +\n                                    '<b>' + order.courier_name + '</b><br /> Заказ: ' + order.number + '<br />' +\n                                    '<i id=\"count\"></i> ' +\n                                    // '<input type=\"button\" onclick=\"this.detailClick()\" value=\"Считать кроликов!\"/>' +\n                                    '</div>',\n                            }} modules={['geoObject.addon.balloon', 'geoObject.addon.hint']} geometry={[order.geodata.lat, order.geodata.long]} instanceRef={ref => ref && this.setCenter(ref)} />\n                        )}\n                    </Map>\n                </YMaps>\n            </Panel>\n        )\n    }\n}\n\nBusinessAllCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default BusinessAllCourier;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar, FormLayout, Input, Textarea, Select } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass BusinessNewOrder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            email: '',\n            purpose: ''\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n    buttonHandler() {\n        alert(\"test!\")\n    }\n\n    render() {\n        const props = this.props;\n        const { email, purpose } = this.state;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    {[props.business_name]}\n                </PanelHeader>\n                <FormLayout>\n                    <Input\n                        type=\"email\"\n                        top=\"E-mail\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                        status={email ? 'valid' : 'error'}\n                        bottom={email ? 'Электронная почта введена верно!' : 'Пожалуйста, введите электронную почту'}\n                    />\n\n                    <Input top=\"Мобильный телефон\" keyboardType={'phone-pad'} defaultValue=\"+7 12 344 15 48\" />\n                    <Input top=\"Адрес доставки\" />\n\n                    <Textarea top=\"Описание заказа\" />\n                    <Select top=\"Выбрать курьера\">\n                        <option value=\"m\">Иван</option>\n                        <option value=\"f\">Василий</option>\n                    </Select>\n                    <Button size=\"xl\" onClick={this.buttonHandler}>Создать заказ</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nBusinessNewOrder.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default BusinessNewOrder;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Epic, Tabbar, TabbarItem, Panel, PanelHeader } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport Icon28CompassOutline from '@vkontakte/icons/dist/28/compass_outline';\nimport Icon28MarketAddBadgeOutline from '@vkontakte/icons/dist/28/market_add_badge_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\n\nimport { ROUTES } from './Routes';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\n\nimport Home from './panels/Home';\nimport Client from './panels/Client/Client';\nimport Business from './panels/Business/Business';\nimport BusinessOptions from './panels/Business/BusinessOptions';\nimport WelcomeScreen from './panels/PopUpWindows/WelcomeScreen';\n\n\nimport Сourier from './panels/Сourier';\nimport GeodataClient from './panels/Geodata';\nimport GeodataCourier from './panels/CourierGeodata';\nimport GeodataBusiness from './panels/BusinessGeodata';\nimport BusinessAllCourier from './panels/BusinessAllCourier';\nimport BusinessNewOrder from './panels/BusinessNewOrder';\n\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: ~ROUTES.indexOf(location) ? location : 'home',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner size='large' />,\n\t\t\tactiveStory: 'main',\n\t\t\tclient_order: null,\n\t\t\tcourier_order: null,\n\t\t\tclient_order_for_business: null,\n\t\t\tuser: null,\n\t\t};\n\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\tthis.setState({ fetchedUser: user, popout: null });\n\t}\n\n\tonStoryChange(e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\n\tsetLocation = (route) => {\n\t\tif (route !== 'home') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\t// Проверяем, есть ли такой пользователь у нас на бэке\n\tasync fetchUser(userType) {\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\t\tswitch (userType) {\n\t\t\tcase 'client':\n\t\t\t\turl = url + 'clients/'\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\turl = url + 'curiers/'\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\turl = url + 'business/'\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n\t\tlet response = await fetch(url + this.state.fetchedUser.id);\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\tlet json = await response.json();\n\t\t\tthis.setState({user: json.result})\n\t\t\t\n\t\t\treturn true;\n\t\t}\n\t\tthis.setState({ popout: <WelcomeScreen userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\treturn false;\n\t}\n\n\tclosePopout = () => {\n\t\tthis.setState({ popout: null, activePanel: 'home' });\n\t}\n\n\tgo = (e, object) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(route)\n\n\t\tif (route === 'view_where_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t}\n\t\tif (route === 'view_where_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'view_where_courier_for_business') {\n\t\t\tthis.setState({ client_order_for_business: object })\n\t\t}\n\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\ttabbarByUserType(userType) {\n\t\tvar tabbarApp = null\n\t\tswitch (this.state.activePanel) {\n\t\t\tcase 'client':\n\t\t\t\ttabbarApp = <Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery'}\n\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\ttext=\"Мне везут\"\n\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t</Tabbar >\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\ttabbarApp = <Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'main'}\n\t\t\t\t\t\tdata-story=\"main\"\n\t\t\t\t\t\ttext=\"Заказы в работе\"\n\t\t\t\t\t><Icon28ListOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_couriers_onmap'}\n\t\t\t\t\t\tdata-story=\"business_couriers_onmap\"\n\t\t\t\t\t\ttext=\"Курьеры на карте\"\n\t\t\t\t\t><Icon28CompassOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_add_order'}\n\t\t\t\t\t\tdata-story=\"business_add_order\"\n\t\t\t\t\t\ttext=\"Новый заказ\"\n\t\t\t\t\t><Icon28MarketAddBadgeOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_options'}\n\t\t\t\t\t\tdata-story=\"business_options\"\n\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t</Tabbar>\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tabbarApp\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={this.tabbarByUserType(this.state.activePanel)}\n\t\t\t>\n\t\t\t\t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Client id='client' data={this.state.data} go={this.go} />\n\t\t\t\t\t<Сourier id='courier' go={this.go} />\n\t\t\t\t\t<Business id='business' go={this.go} />\n\t\t\t\t\t<GeodataClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t<GeodataCourier id='view_where_client' order={this.state.courier_order} go={this.go} />\n\t\t\t\t\t<GeodataBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t\t\t<BusinessAllCourier id=\"business_couriers_onmap\" business_id='123' business_name='Магазин Автозапчастей' go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t\t\t<BusinessNewOrder id=\"business_add_order\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t\t\t<BusinessOptions id=\"business_options\" user={this.state.user} fetchedUser={this.state.fetchedUser}  go={this.go} />\n\t\t\t\t</View>\n\n\t\t\t</Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}