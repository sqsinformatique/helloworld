{"version":3,"sources":["modules/backRequests.js","Routes.js","panels/Home.js","panels/PopUpWindows/WelcomeScreen.js","panels/PopUpWindows/SetBusinessGroup.js","modules/parseTypes.js","panels/Client/Client.js","modules/map.js","panels/Client/CourierGeodataForClient.js","panels/Courier/Сourier.js","panels/Courier/ClientGeodataForCourier.js","panels/Business/Business.js","modules/utils.js","panels/Business/BusinessOptions.js","panels/Business/BusinessNewOrder.js","panels/Business/CourierGeodataForBusiness.js","panels/Business/BusinessAllCourier.js","App.js","index.js"],"names":["back_url","postCourierGeodata","courier_id","geodata","a","courierGeodata","curier_id","lat","long","console","log","fetch","method","headers","body","JSON","stringify","response","ok","json","getCourierBySocialID","social_id","result","getCourierGeodataByCourierID","postSearchOrdersByClientHashPhone","hash_phone","requestOrder","hash_telephone","postSearchOrdersByBusinessID","business_id","postSearchOrdersByCourierID","order","createOrderRequest","Number","email","telephone","phone","order_number","order_address","address","order_description","description","order_date","Date","parse","toJSON","order_time_begin","order_time_end","order_state","getClientBySocialID","getBusinessBySocialID","getCuriersByBusinessID","postCreateBindingBusinessCourier","courier_phone","bindCurier","postDeleteBindingBusinessCourier","unbindCurier","ROUTES","Home","id","go","fetchedUser","title","expandable","before","onClick","data-to","WelcomeScreen","props","closePopout","state","this","url","userType","bridge","send","userPhone","userEmail","user","toString","phone_number","actions","autoclose","action","createUser","mode","React","Component","SetBusinessGroup","groups","group_id","token","access_token","groupsData","setState","items","loadGroups","e","currentTarget","name","value","onChange","map","group","index","key","orderStateToString","fullOrderDate","osName","platform","Client","orders","getClient","getClientOrders","left","IOS","header","disabled","multiline","size","src","photo_100","text","business_name","caption","after","Fragment","mapState","center","zoom","controls","geoMap","clientGeodata","client","courier","query","apikey","load","width","height","defaultState","className","instanceRef","ref","routePanel","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","CourierGeodataForClient","courier_geodata","geoUpdateInterval","setInterval","fetchCourierGeo","clearInterval","curier_photo_100","Сourier","getCourier","getCourierOrders","ClientGeodataForCourier","shop","Business","getBusiness","getBusinessOrders","curier_name","isValidPhone","p","digits","replace","test","BusinessOptions","addCourier","validatePhone","createBinding","updatePhoneValue","target","resetPhoneValue","couriers","errPhone","removable","onRemove","slice","unbind","first_name","last_name","top","BusinessNewOrder","createOrderHandler","postCreateOrder","bind","length","step","CourierGeodataForBusiness","number","BusinessAllCourier","setYmaps","ymaps","setCenter","getMap","util","bounds","getCenterAndZoom","geoObjects","getBounds","container","getSize","alert","onLoad","properties","hintContent","balloonContent","modules","geometry","location","window","hash","substr","App","setLocation","route","popout","activePanel","object","dataset","fetchUser","client_order","courier_order","client_order_for_business","indexOf","activeStory","onStoryChange","story","tabbarApp","selected","data-story","tabbar","tabbarByUserType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8278d28.chunk.js","sourcesContent":["const back_url = 'https://sqsinformatique-vk-back.ngrok.io'\n\n// Курьеры\nexport async function postCourierGeodata(courier_id, geodata) {\n\tlet courierGeodata = {\n\t\tcurier_id: courier_id,\n\t\tlat: geodata.lat,\n\t\tlong: geodata.long,\n\t};\n\tconsole.log(\"courierGeodata\", courierGeodata)\n\n\tlet url = back_url + '/api/v1/curiers/geo'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(courierGeodata)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCourierGeodata\", json)\n\t\treturn json\n\t}\n}\n\nexport async function getCourierBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/curiers/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCourierGeodataByCourierID (courier_id) {\n\tlet url = back_url + '/api/v1/curiers/geo/'\n\tlet response = await fetch(url + courier_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n\n}\n\n// Заказы\nexport async function postSearchOrdersByClientHashPhone(hash_phone) {\n\tlet requestOrder = [\n\t\t{\n\t\t\thash_telephone: hash_phone,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByClientHashPhone\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByBusinessID(business_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tbusiness_id: business_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByCourierID(courier_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tcurier_id: courier_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByCourierID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateOrder(business_id, order) {\n\tlet createOrderRequest = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: Number(order.curier_id),\n\t\temail: order.email,\n\t\ttelephone: order.phone,\n\t\torder_number: order.order_number,\n\t\torder_address: order.address,\n\t\torder_description: order.description,\n\t\torder_date: new Date(Date.parse(order.order_date)).toJSON(),\n\t\torder_time_begin: order.order_time_begin,\n\t\torder_time_end: order.order_time_end,\n\t\torder_state: 'to_delivery',\n\t}\n\tconsole.log(createOrderRequest)\n\n\tlet url = back_url + '/api/v1/orders'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(createOrderRequest)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateOrder\", json)\n\t\treturn json.result\n\t}\n}\n\n// Клиенты\nexport async function getClientBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/clients/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getClientBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\n// Бизнес\nexport async function getBusinessBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/business/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getBusinessBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCuriersByBusinessID(business_id) {\n\tlet url = back_url + '/api/v1/business/curiers/'\n\n\tlet response = await fetch(url + business_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCuriersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateBindingBusinessCourier(business_id, courier_phone) {\n\tlet bindCurier = {\n\t\tbusiness_id: business_id,\n\t\tphone: courier_phone\n\t};\n\n\tconsole.log(bindCurier)\n\n\tlet url = back_url + '/api/v1/business/bind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(bindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postDeleteBindingBusinessCourier(business_id, curier_id) {\n\tlet unbindCurier = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: curier_id\n\t};\n\n\tconsole.log(unbindCurier)\n\n\tlet url = back_url + '/api/v1/business/unbind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(unbindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postDeleteBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\n\n\n","export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline'\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Где курьер?</PanelHeader>\n\t\t{/* {fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>} */}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Cell expandable before={<Icon28UserOutline/>} onClick={go} data-to=\"client\">\n\t\t\t\t\tЯ клиент\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28MarketOutline/>} onClick={go} data-to=\"courier\">\n\t\t\t\t\tЯ курьер\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"business\">\n\t\t\t\t\tЯ бизнес\n\t\t\t\t</Cell>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert } from '@vkontakte/vkui';\n\nclass WelcomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n        };\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                // url = url + 'business'\n                console.log(\"1111\")\n                props.closePopout(true, props.userType)\n                return true\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false,)\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Я согласен',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Здравствуйте!</h1>\n                Вы новый <b>{userType}</b> нашего приложения!\n                <div><br />\n                Подтвердите, что даёте согласие, на доступ приложения к информации о вашей учётной записи в социальной сети ВК. <br />Данная информация не будет передаваться третьим лицам.\nМы храним только ID в социальной сети и мы не храним Ваш email и мобильный номер.\n                </div>\n            </Alert>\n        )\n    }\n}\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert, Select } from '@vkontakte/vkui';\n\nclass SetBusinessGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n            groups: null,\n            group_id: 0,\n        };\n    }\n\n    async loadGroups() {\n        const props = this.props\n        const token = await bridge.send(\"VKWebAppGetAuthToken\", { \"app_id\": 7500440, \"scope\": \"groups\" });\n        console.log(token)\n        const groupsData = await bridge.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"groups.get\",\n            \"request_id\": \"sqsrequest\",\n            \"params\": {\n                \"user_id\": props.fetchedUser.id,\n                \"v\": \"5.110\",\n                \"access_token\": token.access_token,\n                \"extended\": true,\n                \"fields\": \"contacts\",\n            }\n        });\n        console.log(groupsData.response)\n        this.setState({ groups: groupsData.response.items, group_id: groupsData.response.items[0].id })\n        console.log(this.state.groups)\n    }\n\n    async componentDidMount() {\n        await this.loadGroups()\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                url = url + 'business'\n                break;\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n        console.log(\"this.state.group_id\", this.state.group_id)\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            group_id: this.state.group_id.toString(),\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false)\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        const { group_id } = this.state;\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Сохранить',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Выбор сообщества!</h1>\n                <div><br />\n                Пожалуйста, выберить сообщество связанное с учётной записью, которое представляет Ваш бизнес.\n                <br />\n                &nbsp;\n                </div>\n                <Select\n                    name=\"group_id\"\n                    value={group_id}\n                    onChange={this.onChange}\n                >\n                    {this.state.groups && this.state.groups.map((group, index) => (\n                        <option key={group.id} value={group.id}>{group.name}</option>\n                    ))}\n                </Select>\n            </Alert>\n        )\n    }\n}\n\nexport default SetBusinessGroup;\n","export function orderStateToString(state) {\n    switch (state) {\n        case 'to_delivery':\n            return 'В доставке'\n        default:\n            return 'Не известное состояние'\n    }\n}\n\nexport function fullOrderDate(order) {\n    return order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByClientHashPhone, getClientBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Client.css';\n\nconst osName = platform();\n// var miniPanel;\n// if (osName !== IOS || osName !== ANDROID) {\n// \tminiPanel = <React.Fragment>\n// \t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n// \t</React.Fragment>\n// }\n\nclass Client extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\torders: null,\n\t\t\tuser: props.user,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getClient()\n\t\tawait this.getClientOrders()\n\t}\n\n\tasync getClient() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getClientBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getClientOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByClientHashPhone(user.hash_telephone)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t// right={miniPanel}\n\t\t\t\t>\n\t\t\t\t\tКлиент\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Отправитель: \" + order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Client;\n","import React from 'react';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\n\nconst apiKey = '482da132-c4be-476f-95ef-79ba61d579a4'\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nexport function geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: apiKey, load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Курьер на карте\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.business_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForClient;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\n\nimport { postSearchOrdersByCourierID, getCourierBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nclass Сourier extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getCourier()\n\t\tawait this.getCourierOrders()\n\t}\n\n\tasync getCourier() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getCourierBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getCourierOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByCourierID(user.curier_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={\n\t\t\t\t\t\t<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t\t</PanelHeaderButton>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tКурьер\n      \t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Я везу</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_client\">Адрес на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с клиентом</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\n\nСourier.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass ClientGeodataForCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: props.order.courier_id,\n            courier_geodata: props.courier_geodata,\n        };\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id, courier_geodata: props.courier_geodata })\n\n        console.log(\"courier_geodata\", props.courier_geodata)\n    }\n\n    render() {\n        const { id, order, courier_geodata } = this.props;\n\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"courier\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {order.shop}\n                </PanelHeader>\n                <RichCell\n                    key={order.order_number}\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с клиентом</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nClientGeodataForCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default ClientGeodataForCourier;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass Business extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser:  props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\t\n\tasync componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n\t}\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tБизнес\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>У курьера</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell key={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.curier_photo_100}/>} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Курьер \" + order.curier_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier_for_business\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","export function isValidPhone(p) {\n    var phoneRe = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    var digits = p.replace(/\\D/g, \"\");\n    return phoneRe.test(digits);\n}\n","import React from 'react';\nimport { FormLayout, FormStatus, Panel, PanelHeader, Input, Button, Group, Cell, List, Header } from '@vkontakte/vkui';\nimport { isValidPhone } from '../../modules/utils'\n\nimport { getCuriersByBusinessID, postCreateBindingBusinessCourier, postDeleteBindingBusinessCourier } from '../../modules/backRequests'\n\nclass BusinessOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            validatePhone: true,\n            user: props.user,\n            phone: '',\n            couriers: null,\n        };\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async createBinding() {\n        const { user } = this.props;\n        const { phone } = this.state;\n\n        await postCreateBindingBusinessCourier(user.business_id, phone)\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async unbind(curier_id) {\n        const { user } = this.props;\n\n        await postDeleteBindingBusinessCourier(user.business_id, curier_id)\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    addCourier = () => {\n        this.setState({ validatePhone: isValidPhone(this.state.phone) })\n        if (this.state.validatePhone) {\n            this.createBinding()\n        }\n    }\n\n    updatePhoneValue = (e) => {\n        this.setState({\n            phone: e.target.value,\n        });\n\n        console.log(this.state.phone)\n    }\n\n    resetPhoneValue = (e) => {\n        e.target.value = ''\n    }\n\n    render() {\n        const props = this.props;\n\n        let errPhone\n        if (!this.state.validatePhone) {\n            errPhone = <FormStatus header=\"Некорректный мобильный номер\" mode=\"error\">\n                Необходимо корректно ввести номер в международном формате\n                    </FormStatus>\n        }\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                // left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                //     {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                // </PanelHeaderButton>}\n                >\n                    Настройки\n\t\t\t\t</PanelHeader>\n                {this.state.couriers &&\n                    <Group header={<Header mode=\"secondary\">Мои курьеры</Header>}>\n                        <List>\n                            {this.state.couriers.map((courier, index) => (\n                                <Cell key={courier.curier_id} removable onRemove={() => {\n                                    this.setState({\n                                        couriers: [...this.state.couriers.slice(0, index), ...this.state.couriers.slice(index + 1)]\n                                    })\n                                    this.unbind(courier.curier_id)\n                                }}>{courier.first_name} {courier.last_name}</Cell>\n                            ))}\n                        </List>\n                    </Group>\n                }\n                <FormLayout>\n                    {errPhone}\n                    <Input id='telephone' top=\"Добавить курьера по номеру телефона\"\n                        // onFocus={this.resetPhoneValue} value=\"+7123456789\"\n                        value={this.state.phone}\n                        type=\"tel\"\n                        onChange={this.updatePhoneValue}\n                    />\n                    <Button size=\"xl\" onClick={this.addCourier}>Добавить</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nexport default BusinessOptions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { Button, FormLayout, Input, Textarea, Select, FormLayoutGroup } from '@vkontakte/vkui';\nimport { isValidPhone } from '../../modules/utils'\n\nimport { postCreateOrder, getCuriersByBusinessID } from '../../modules/backRequests'\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass BusinessNewOrder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            order: {\n                description: '',\n                email: '',\n                phone: '',\n                order_number: '',\n                address: '',\n                order_date: '',\n                order_time_begin: '',\n                order_time_end: '',\n                curier_id: 0,\n            },\n            user: props.user,\n            couriers: null,\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n            if (response.length > 0) {\n                this.setState({ curier_id: response[0].curier_id })\n            }\n        }\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        const order = { ...this.state.order, ...{ [name]: value } }\n        this.setState({ order: order });\n        console.log(this.state.order)\n    }\n\n    createOrderHandler = () => {\n        const { user } = this.props\n        const { order } = this.state\n        postCreateOrder(user.business_id, order)\n    }\n\n    render() {\n        const props = this.props;\n        const { email, phone, address, order_number, description, curier_id, order_date, order_time_begin, order_time_end } = this.state.order;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    {[props.business_name]}\n                </PanelHeader>\n                <FormLayout>\n                    <Input\n                        top=\"Номер заказа\"\n                        name=\"order_number\"\n                        value={order_number}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Мобильный телефон\"\n                        type=\"tel\"\n                        name=\"phone\"\n                        value={phone}\n                        onChange={this.onChange}\n                    // keyboardType={'phone-pad'}\n                    />\n                    <Input\n                        type=\"email\"\n                        top=\"E-mail\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Адрес доставки\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this.onChange}\n                    />\n                    <Textarea\n                        top=\"Описание заказа\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        type=\"date\"\n                        top=\"Дата доставки\"\n                        name=\"order_date\"\n                        value={order_date}\n                        onChange={this.onChange}\n                    />\n                    <FormLayoutGroup top=\"Время доставки\">\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"Время от\"\n                            name=\"order_time_begin\"\n                            value={order_time_begin}\n                            onChange={this.onChange}\n                        />\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"до\"\n                            name=\"order_time_end\"\n                            value={order_time_end}\n                            onChange={this.onChange}\n                        />\n                    </FormLayoutGroup>\n                    <Select\n                        top=\"Выбрать курьера\"\n                        name=\"curier_id\"\n                        value={curier_id}\n                        onChange={this.onChange}\n                    >\n                        {this.state.couriers && this.state.couriers.map((courier, index) => (\n                            <option key={courier.curier_id} value={courier.curier_id}>{courier.first_name} {courier.last_name}</option>\n                        ))}\n                    </Select>\n                    <Button size=\"xl\" onClick={this.createOrderHandler}>Создать заказ</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nBusinessNewOrder.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default BusinessNewOrder;\n","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForBusiness extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.curier_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForBusiness.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForBusiness;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport { PanelHeader  } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nclass BusinessAllCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser:  props.fetchedUser,\n            orders: null,\n            ymaps: null,\n            user: props.user,\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.getBusinessOrders()\n        }, 5000);\n    }\n\n    setYmaps = ymaps => {\n        this.setState({ ymaps });\n    };\n\n    setCenter = ref => {\n        const { ymaps } = this.state;\n\n        if (ymaps) {\n            const map = ref.getMap();\n            const result = ymaps.util.bounds.getCenterAndZoom(\n                map.geoObjects.getBounds(),\n                map.container.getSize()\n            );\n\n            // Setting the optimal center and zoom level of the map.\n            var zoom = result.zoom\n            if (result.zoom > 19) {\n                zoom = 19\n            }\n            map.setCenter(result.center, zoom);\n        }\n    };\n\n    async componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n    }\n    \n    detailClick() {\n        alert(\"test\")\n        console.log(\"test\")\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Курьеры {props.business_name}\n                </PanelHeader>\n                <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: ['util.bounds', 'control.ZoomControl'] }} >\n                    <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n                        {this.state.orders && this.state.orders.map((order) =>\n                            <Placemark key={order.order_number} properties={{\n                                hintContent: order.curier_name,\n                                properties: { name: \"test\" },\n                                balloonContent: '<div style=\"margin: 10px;\">' +\n                                    '<b>' + order.curier_name + '</b><br /> Заказ: ' + order.order_number + '<br />' +\n                                    '<i id=\"count\"></i> ' +\n                                    // '<input type=\"button\" onclick=\"this.detailClick()\" value=\"Считать кроликов!\"/>' +\n                                    '</div>',\n                            }} modules={['geoObject.addon.balloon', 'geoObject.addon.hint']} geometry={[order.geodata.lat, order.geodata.long]} instanceRef={ref => ref && this.setCenter(ref)} />\n                        )}\n                    </Map>\n                </YMaps>\n            </Panel>\n        )\n    }\n}\n\nBusinessAllCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default BusinessAllCourier;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Epic, Tabbar, TabbarItem } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport Icon28CompassOutline from '@vkontakte/icons/dist/28/compass_outline';\nimport Icon28MarketAddBadgeOutline from '@vkontakte/icons/dist/28/market_add_badge_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\n\nimport { postCourierGeodata, getClientBySocialID, getCourierBySocialID, getBusinessBySocialID } from './modules/backRequests'\n\nimport { ROUTES } from './Routes';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\n// Главная страница\nimport Home from './panels/Home';\n\n// Регистрация новых пользователей\nimport WelcomeScreen from './panels/PopUpWindows/WelcomeScreen';\nimport SetBusinessGroup from './panels/PopUpWindows/SetBusinessGroup'\n\n// Клиент\nimport Client from './panels/Client/Client';\nimport CourierGeodataForClient from './panels/Client/CourierGeodataForClient';\n\n// Курьер\nimport Сourier from './panels/Courier/Сourier';\nimport ClientGeodataForCourier from './panels/Courier/ClientGeodataForCourier';\n\n// Бизнес\nimport Business from './panels/Business/Business';\nimport BusinessOptions from './panels/Business/BusinessOptions';\nimport BusinessNewOrder from './panels/Business/BusinessNewOrder';\nimport CourierGeodataForBusiness from './panels/Business/CourierGeodataForBusiness';\nimport BusinessAllCourier from './panels/Business/BusinessAllCourier';\n\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: ~ROUTES.indexOf(location) ? location : 'home',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner size='large' />,\n\t\t\tactiveStory: 'main',\n\t\t\tclient_order: null,\n\t\t\tcourier_order: null,\n\t\t\tclient_order_for_business: null,\n\t\t\tuser: null,\n\t\t\tcourier_geodata: { lat: 55.659200, long: 37.753314 },\n\t\t};\n\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\n\t\tthis.state.geoUpdateInterval = setInterval(() => {\n\t\t\tthis.fetchCourierGeo()\n\t\t}, 5000);\n\t}\n\n\tasync fetchCourierGeo() {\n\t\tswitch (this.state.activePanel) {\n\t\t\tcase 'courier':\n\t\t\tcase 'view_where_client':\n\t\t\t\t// Запрашиваем координаты курьера, если находимся на панелях courier или view_where_client\n\t\t\t\t// Надо также дополнить всеми остальными панелями курьера, чтобы координаты передавались всё\n\t\t\t\t// время, пока мы в режиме Курьера\n\t\t\t\tconst geodata = await bridge.send('VKWebAppGetGeodata');\n\t\t\t\tthis.setState({ courier_geodata: geodata });\n\n\t\t\t\tif (!this.state.user) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tawait postCourierGeodata(this.state.user.curier_id, { lat: geodata.lat, long: geodata.long })\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\tthis.setState({ fetchedUser: user, popout: null });\n\t}\n\n\tonStoryChange(e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\n\tsetLocation = (route) => {\n\t\tconsole.log(\"route\", route)\n\t\tif (route !== 'home') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\t// Проверяем, есть ли такой пользователь у нас на бэке\n\tasync fetchUser(userType) {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response\n\t\tswitch (userType) {\n\t\t\tcase 'client':\n\t\t\t\tresponse = await getClientBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\tresponse = await getCourierBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\tresponse = await getBusinessBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.setState({ popout: <WelcomeScreen userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\treturn false;\n\t}\n\n\tclosePopout = (result, userType) => {\n\t\tconsole.log(result)\n\t\tif (!result) {\n\t\t\tthis.setState({ popout: null, activePanel: 'home' });\n\t\t} else {\n\t\t\tif (userType === 'business') {\n\t\t\t\tthis.setState({ popout: <SetBusinessGroup userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\t\t} else {\n\t\t\t\tthis.setState({ popout: null });\n\t\t\t}\n\t\t}\n\t}\n\n\tgo = (e, object) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(route)\n\n\t\tif (route === 'view_where_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t\tthis.fetchCourierGeo()\n\t\t}\n\t\tif (route === 'view_where_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'view_where_courier_for_business') {\n\t\t\tthis.setState({ client_order_for_business: object })\n\t\t}\n\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\ttabbarByUserType(userType) {\n\t\tvar tabbarApp = null\n\t\tswitch (this.state.activePanel) {\n\t\t\tcase 'client':\n\t\t\t\ttabbarApp = <Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery'}\n\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\ttext=\"Мне везут\"\n\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_add_order'}\n\t\t\t\t\t\tdata-story=\"cient_add_order\"\n\t\t\t\t\t\ttext=\"Новый заказ\"\n\t\t\t\t\t><Icon28MarketAddBadgeOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t</Tabbar >\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\ttabbarApp = <Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'main'}\n\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\ttext=\"Я везу\"\n\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t</Tabbar >\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\ttabbarApp = <Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'main'}\n\t\t\t\t\t\tdata-story=\"main\"\n\t\t\t\t\t\ttext=\"Заказы в работе\"\n\t\t\t\t\t><Icon28ListOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_couriers_onmap'}\n\t\t\t\t\t\tdata-story=\"business_couriers_onmap\"\n\t\t\t\t\t\ttext=\"Курьеры на карте\"\n\t\t\t\t\t><Icon28CompassOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_add_order'}\n\t\t\t\t\t\tdata-story=\"business_add_order\"\n\t\t\t\t\t\ttext=\"Новый заказ\"\n\t\t\t\t\t><Icon28MarketAddBadgeOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_options'}\n\t\t\t\t\t\tdata-story=\"business_options\"\n\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t</Tabbar>\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn tabbarApp\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={this.tabbarByUserType(this.state.activePanel)}\n\t\t\t>\n\t\t\t\t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Client id='client' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Сourier id='courier' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Business id='business' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<CourierGeodataForClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t\t\t<CourierGeodataForBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t\t\t<BusinessAllCourier id=\"business_couriers_onmap\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t\t\t<BusinessNewOrder id=\"business_add_order\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t\t\t<BusinessOptions id=\"business_options\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t</View>\n\n\t\t\t</Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}