{"version":3,"sources":["Routes.js","panels/Home.js","panels/Client/Client.js","panels/Business/Business.js","modules/utils.js","panels/Business/BusinessOptions.js","panels/PopUpWindows/WelcomeScreen.js","panels/Business/BusinessNewOrder.js","panels/Courier/Сourier.js","panels/Geodata.js","panels/CourierGeodata.js","panels/BusinessGeodata.js","panels/BusinessAllCourier.js","App.js","index.js"],"names":["ROUTES","Home","id","go","fetchedUser","title","expandable","before","onClick","data-to","osName","platform","IOS","ANDROID","Fragment","Client","props","state","orders","user","console","log","this","fetchUser","getClientOrders","fetch","response","ok","json","setState","result","requestOrder","hash_telephone","method","headers","body","JSON","stringify","order","order_date","order_time_begin","order_time_end","left","header","map","key","order_number","disabled","multiline","size","text","business_name","caption","fullOrderDate","after","orderStateToString","order_state","actions","e","React","Component","Business","getBusinessOrders","business_id","number","curier_name","isValidPhone","p","digits","replace","test","BusinessOptions","addCourier","validatePhone","phone","createBinding","updatePhoneValue","target","value","resetPhoneValue","couriers","getMyCuriers","bindCurier","curier_id","unbindCurier","errPhone","mode","courier","index","removable","onRemove","slice","unbind","first_name","last_name","top","type","onChange","WelcomeScreen","url","userType","bridge","send","userPhone","userEmail","social_id","toString","email","telephone","phone_number","closePopout","autoclose","action","createUser","onClose","BusinessNewOrder","createOrderHandler","createOrder","address","description","bind","currentTarget","name","order_address","order_description","Date","parse","toJSON","step","Сourier","getCourierOrders","mapState","center","zoom","controls","GeodataClient","courier_id","courier_geodata","lat","long","geoUpdateInterval","setInterval","fetchCourierGeo","clientGeodata","courierGeodata","client","query","apikey","load","width","height","defaultState","className","instanceRef","ref","routePanel","set","fromEnabled","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","geoMap","GeodataCourier","shop","date","GeodataBusiness","courier_name","BusinessAllCourier","setYmaps","ymaps","setCenter","getMap","util","bounds","getCenterAndZoom","geoObjects","getBounds","container","getSize","fetchOrdersWithGeo","geodata","alert","onLoad","properties","hintContent","balloonContent","modules","geometry","location","window","hash","substr","App","setLocation","route","popout","activePanel","object","dataset","client_order","courier_order","client_order_for_business","indexOf","activeStory","onStoryChange","curiergeo","story","tabbarApp","selected","data-story","tabbar","tabbarByUserType","Geodata","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9ee5ced.chunk.js","sourcesContent":["export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline'\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Где курьер?</PanelHeader>\n\t\t{/* {fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>} */}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Cell expandable before={<Icon28UserOutline/>} onClick={go} data-to=\"client\">\n\t\t\t\t\tЯ клиент\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28MarketOutline/>} onClick={go} data-to=\"courier\">\n\t\t\t\t\tЯ курьер\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"business\">\n\t\t\t\t\tЯ бизнес\n\t\t\t\t</Cell>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/24/settings';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\nimport bridge from '@vkontakte/vk-bridge';\n\nimport './Client.css';\n\nconst osName = platform();\n\nvar miniPanel;\nif (osName !== IOS || osName !== ANDROID) {\n\tminiPanel = <React.Fragment>\n\t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n\t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n\t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n\t</React.Fragment>\n}\n\nclass Client extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\torders: null,\n\t\t\tuser: props.user,\n\t\t};\n\n\t\tconsole.log(\"user client\", this.state.fetchedUser)\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.fetchUser()\n\t\tthis.getClientOrders()\n\t}\n\n\tasync fetchUser() {\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/clients/'\n\n\t\tlet response = await fetch(url + this.state.fetchedUser.id);\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\tlet json = await response.json();\n\t\t\tthis.setState({ user: json.result })\n\t\t\tconsole.log(this.state.user)\n\t\t}\n\t}\n\n\tasync getClientOrders() {\n\t\tconst props = this.props;\n\n\t\t// const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n\t\t// console.log(userPhone)\n\n\t\tlet requestOrder = [\n\t\t\t{\n\t\t\t\thash_telephone: this.state.user.hash_telephone,\n\t\t\t}\n\t\t]\n\t\tconsole.log(requestOrder)\n\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/orders/search'\n\t\tlet response = await fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t\t},\n\t\t\tbody: JSON.stringify(requestOrder)\n\t\t});\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\t// получаем тело ответа\n\t\t\tlet json = await response.json();\n\t\t\tconsole.log(json)\n\t\t\tthis.setState({ orders: json.result })\n\t\t}\n\t}\n\n\torderStateToString(state) {\n\t\tswitch (state) {\n\t\t\tcase 'to_delivery':\n\t\t\t\treturn 'В доставке'\n\t\t\tdefault:\n\t\t\t\treturn 'Не известное состояние'\n\t\t}\n\t}\n\n\tfullOrderDate(order) {\n\t\treturn order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t// right={miniPanel}\n\t\t\t\t>\n\t\t\t\t\tКлиент\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Отправитель: \"+order.business_name}\n\t\t\t\t\t\t\tcaption={this.fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={this.orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tuser: PropTypes.object.isRequired,\n};\n\nexport default Client;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass Business extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser:  props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\t\n\tasync componentDidMount() {\n\t\tawait this.fetchUser()\n\t\tthis.getBusinessOrders()\n\t}\n\n\tasync fetchUser() {\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/'\n\n\t\tlet response = await fetch(url + this.state.fetchedUser.id);\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\tlet json = await response.json();\n\t\t\tthis.setState({ user: json.result })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst props = this.props;\n\n\t\tconsole.log(props.user)\n\n\t\tlet requestOrder = [\n\t\t\t{\n\t\t\t\tbusiness_id: \"+\" + props.user.business_id,\n\t\t\t}\n\t\t]\n\t\tconsole.log(requestOrder)\n\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/orders/search'\n\t\tlet response = await fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t\t},\n\t\t\tbody: JSON.stringify(requestOrder)\n\t\t});\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\t// получаем тело ответа\n\t\t\tlet json = await response.json();\n\t\t\tconsole.log(json)\n\t\t\tthis.setState({ orders: json.result })\n\t\t}\n\t}\n\n\tfullOrderDate(order) {\n\t\treturn order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n\t}\n\n\torderStateToString(state) {\n\t\tswitch (state) {\n\t\t\tcase 'to_delivery':\n\t\t\t\treturn 'В доставке'\n\t\t\tdefault:\n\t\t\t\treturn 'Не известное состояние'\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tБизнес\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>У курьера</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell key={order.number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Курьер \" + order.curier_name}\n\t\t\t\t\t\t\tcaption={this.fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={this.orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier_for_business\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","export function isValidPhone(p) {\n    var phoneRe = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    var digits = p.replace(/\\D/g, \"\");\n    return phoneRe.test(digits);\n}","import React from 'react';\nimport { FormLayout, FormStatus, Panel, PanelHeader, Input, Button, Group, Cell, List, Header } from '@vkontakte/vkui';\nimport { isValidPhone } from '../../modules/utils'\n\nclass BusinessOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            validatePhone: true,\n            user: props.user,\n            phone: '',\n            couriers: null,\n        };\n    }\n\n    async getMyCuriers() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/curiers/'\n        let response = await fetch(url + props.user.business_id);\n        let json = await response.json();\n        this.setState({ couriers: json.result })\n    }\n\n    async componentDidMount() {\n        this.getMyCuriers()\n    }\n\n    async createBinding() {\n        const props = this.props;\n\n        let bindCurier = {\n            business_id: props.user.business_id,\n            phone: this.state.phone\n        };\n\n        console.log(bindCurier)\n\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/bind_curier'\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(bindCurier)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        await this.getMyCuriers()\n    }\n\n    async unbind(curier_id) {\n        const props = this.props;\n\n        let unbindCurier = {\n            business_id: props.user.business_id,\n            curier_id: curier_id\n        };\n\n        console.log(unbindCurier)\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/unbind_curier'\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(unbindCurier)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n    }\n\n    addCourier = () => {\n        this.setState({ validatePhone: isValidPhone(this.state.phone) })\n        if (this.state.validatePhone) {\n            this.createBinding()\n        }\n    }\n\n    updatePhoneValue = (e) => {\n        this.setState({\n            phone: e.target.value,\n        });\n\n        console.log(this.state.phone)\n    }\n\n    resetPhoneValue = (e) => {\n        e.target.value = ''\n    }\n\n    render() {\n        const props = this.props;\n\n        let errPhone\n        if (!this.state.validatePhone) {\n            errPhone = <FormStatus header=\"Некорректный мобильный номер\" mode=\"error\">\n                Необходимо корректно ввести номер в международном формате\n                    </FormStatus>\n        }\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                // left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                //     {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                // </PanelHeaderButton>}\n                >\n                    Настройки\n\t\t\t\t</PanelHeader>\n                {this.state.couriers &&\n                    <Group header={<Header mode=\"secondary\">Мои курьеры</Header>}>\n                        <List>\n                            {this.state.couriers.map((courier, index) => (\n                                <Cell key={courier.curier_id} removable onRemove={() => {\n                                    this.setState({\n                                        couriers: [...this.state.couriers.slice(0, index), ...this.state.couriers.slice(index + 1)]\n                                    })\n                                    this.unbind(courier.curier_id)\n                                }}>{courier.first_name} {courier.last_name}</Cell>\n                            ))}\n                        </List>\n                    </Group>\n                }\n                <FormLayout>\n                    {errPhone}\n                    <Input id='telephone' top=\"Добавить курьера по номеру телефона\"\n                        // onFocus={this.resetPhoneValue} value=\"+7123456789\"\n                        value={this.state.phone}\n                        type=\"tel\"\n                        onChange={this.updatePhoneValue}\n                    />\n                    <Button size=\"xl\" onClick={this.addCourier}>Добавить</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nexport default BusinessOptions;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport PropTypes from 'prop-types';\nimport { PopoutWrapper, Button, Alert } from '@vkontakte/vkui';\n\nclass WelcomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n\n        };\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n\t\t\tcase 'client':\n\t\t\t\turl = url+'clients'\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\turl = url+'curiers'\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\turl = url+'business'\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout();\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n        }\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Я согласен',\n                    autoclose: true,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: true,\n                    mode: 'cancel'\n                }]}\n                onClose={props.closePopout}\n            >\n                <h1>Здравствуйте!</h1>\n                Вы новый <b>{userType}</b> нашего приложения!\n                <div><br />\n                Подтвердите, что даёте согласие, на доступ приложения к информации о вашей учётной записи в социальной сети ВК. <br />Данная информация не будет передаваться третьим лицам.\nМы храним только ID в социальной сети и мы не храним Ваш email и мобильный номер.\n                </div>\n            </Alert>\n        )\n    }\n}\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { Button, FormLayout, Input, Textarea, Select, FormLayoutGroup } from '@vkontakte/vkui';\nimport { isValidPhone } from '../../modules/utils'\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass BusinessNewOrder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            user: props.user,\n            couriers: null,\n            email: '',\n            phone: '',\n            order_number: '',\n            address: '',\n            description: '',\n            order_date: '',\n            order_time_begin: '',\n            order_time_end: '',\n            curier_id: 0,\n        };\n\n        console.log(\"user courier\", props.user)\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    async getMyCuriers() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/business/curiers/'\n        let response = await fetch(url + props.user.business_id);\n        let json = await response.json();\n        this.setState({ couriers: json.result })\n        if (this.state.couriers) {\n            this.setState({ curier_id: this.state.couriers[0].curier_id })\n        }\n    }\n\n    async componentDidMount() {\n        this.getMyCuriers()\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n    async createOrder() {\n        const props = this.props;\n\n        let order = {\n            business_id: props.user.business_id,\n            curier_id: this.state.curier_id,\n            email: this.state.email,\n            telephone: this.state.phone,\n            order_number: this.state.order_number,\n            order_address: this.state.address,\n            order_description: this.state.description,\n            order_date: new Date(Date.parse(this.state.order_date)).toJSON(),\n            order_time_begin: this.state.order_time_begin,\n            order_time_end: this.state.order_time_end,\n            order_state: 'to_delivery',\n        }\n        console.log(order)\n\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/orders'\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(order)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n    }\n\n    createOrderHandler = () => {\n        this.createOrder()\n    }\n\n    render() {\n        const props = this.props;\n        const { email, phone, address, order_number, description, curier_id, order_date, order_time_begin, order_time_end } = this.state;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    {[props.business_name]}\n                </PanelHeader>\n                <FormLayout>\n                    <Input\n                        top=\"Номер заказа\"\n                        name=\"order_number\"\n                        value={order_number}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Мобильный телефон\"\n                        type=\"tel\"\n                        name=\"phone\"\n                        value={phone}\n                        onChange={this.onChange}\n                        // keyboardType={'phone-pad'}\n                    />\n                    <Input\n                        type=\"email\"\n                        top=\"E-mail\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Адрес доставки\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this.onChange}\n                    />\n                    <Textarea\n                        top=\"Описание заказа\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        type=\"date\"\n                        top=\"Дата доставки\"\n                        name=\"order_date\"\n                        value={order_date}\n                        onChange={this.onChange}\n                    />\n                    <FormLayoutGroup top=\"Время доставки\">\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"Время от\"\n                            name=\"order_time_begin\"\n                            value={order_time_begin}\n                            onChange={this.onChange}\n                        />\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"до\"\n                            name=\"order_time_end\"\n                            value={order_time_end}\n                            onChange={this.onChange}\n                        />\n                    </FormLayoutGroup>\n                    <Select\n                        top=\"Выбрать курьера\"\n                        name=\"curier_id\"\n                        value={curier_id}\n                        onChange={this.onChange}\n                    >\n                        {this.state.couriers && this.state.couriers.map((courier, index) => (\n                            <option key={courier.curier_id} value={courier.curier_id}>{courier.first_name} {courier.last_name}</option>\n                        ))}\n                    </Select>\n                    <Button size=\"xl\" onClick={this.createOrderHandler}>Создать заказ</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nBusinessNewOrder.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default BusinessNewOrder;\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nclass Сourier extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser:  props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.fetchUser()\n\t\tthis.getCourierOrders()\n\t}\n\t// getCourierOrders() {\n\t// \tconst clientOrders = [\n\t// \t\t{\n\t// \t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\n\t// \t\t\t\"date\": '06.06.2020',\n\t// \t\t\t\"state\": 'Везут',\n\t// \t\t\t\"number\": '5488779',\n\t// \t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t// \t\t\t\"courier_id\": 123,\n\t// \t\t},\n\t// \t\t{\n\t// \t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\n\t// \t\t\t\"date\": '08.06.2020',\n\t// \t\t\t\"state\": 'Везут',\n\t// \t\t\t\"number\": '34643-643',\n\t// \t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1',\n\t// \t\t\t\"courier_id\": 124,\n\t// \t\t},\n\t// \t]\n\t// \treturn clientOrders\n\t// }\n\n\t// Проверяем, есть ли такой пользователь у нас на бэке\n\tasync fetchUser() {\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/curiers/'\n\n\t\tlet response = await fetch(url + this.state.fetchedUser.id);\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\tlet json = await response.json();\n\t\t\tthis.setState({ user: json.result })\n\t\t}\n\t}\n\n\tasync getCourierOrders() {\n\t\tconst props = this.props;\n\n\t\tconsole.log(props.user)\n\n\t\tlet requestOrder = [\n\t\t\t{\n\t\t\t\tcurier_id: \"+\" + props.user.curier_id,\n\t\t\t}\n\t\t]\n\t\tconsole.log(requestOrder)\n\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/orders/search'\n\t\tlet response = await fetch(url, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t\t},\n\t\t\tbody: JSON.stringify(requestOrder)\n\t\t});\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\t// получаем тело ответа\n\t\t\tlet json = await response.json();\n\t\t\tconsole.log(json)\n\t\t\tthis.setState({ orders: json.result })\n\t\t}\n\t}\n\n\torderStateToString(state) {\n\t\tswitch (state) {\n\t\t\tcase 'to_delivery':\n\t\t\t\treturn 'В доставке'\n\t\t\tdefault:\n\t\t\t\treturn 'Не известное состояние'\n\t\t}\n\t}\n\n\tfullOrderDate(order) {\n\t\treturn order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={\n\t\t\t\t\t\t<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t\t</PanelHeaderButton>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tКурьер\n      \t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Я везу</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.business_name}\n\t\t\t\t\t\t\tcaption={this.fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={this.orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_client\">Адрес на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с клиентом</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\n\nСourier.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.curier_id })\n\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/curiers/geo/'\n        let response = await fetch(url + props.order.curier_id);\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            let json = await response.json();\n            this.setState({ courier_geodata: { lat: json.result.lat, long: json.result.long } })\n        }\n\n        // возвращаем с бека координаты курьера\n        // пока заглушка\n        // this.setState({ courier_geodata: { lat: 55.659200, long: 37.753314 } })\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n\n            let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/curiers/geo/'\n            let response = await fetch(url + this.state.courier_id);\n            if (response.ok) { // если HTTP-статус в диапазоне 200-299\n                let json = await response.json();\n                this.setState({ courier_geodata: {lat: json.result.lat, long: json.result.long} })\n            }\n            //     // возвращаем с бека координаты курьера\n            //     // пока заглушка\n            //     this.setState({\n            //         courier_geodata: {\n            //             lat: this.state.courier_geodata.lat + 0.00001,\n            //             long: this.state.courier_geodata.long + 0.00001\n            //         }\n            //     })\n        }\n    }\n\n    fullOrderDate(order) {\n        return order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n    }\n\n    orderStateToString(state) {\n        switch (state) {\n            case 'to_delivery':\n                return 'В доставке'\n            default:\n                return 'Не известное состояние'\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Курьер на карте\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text={props.order.business_name}\n                    caption={this.fullOrderDate(props.order)}\n                    after={this.orderStateToString(props.order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.order_number}\n                </RichCell>\n                {geoMap(props.order.order_address, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataClient;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: props.courier_geodata,\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id })\n\n        // получаем координаты курьера\n        // const geodata = await bridge.send('VKWebAppGetGeodata');\n        // this.setState({ courier_geodata: geodata });\n\n        this.setState({\n            courier_geodata: props.courier_geodata\n        })\n\n        // отправляем координаты курьера на бек\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            console.log(\"testttttt\", this.state.courier_geodata)\n            // получаем координаты курьера\n            // const geodata = await bridge.send('VKWebAppGetGeodata');\n            // this.setState({ courier_geodata: geodata });\n\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n\n            // отправляем координаты курьера на бек\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"courier\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с клиентом</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataCourier;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}\n\nclass GeodataBusiness extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: -1,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id })\n\n        // возвращаем с бека координаты курьера\n        // пока заглушка\n        this.setState({ courier_geodata: { lat: 55.659200, long: 37.753314 } })\n    }\n\n    async fetchCourierGeo() {\n        if (this.state.courier_id > 0) {\n            // возвращаем с бека координаты курьера\n            // пока заглушка\n            this.setState({\n                courier_geodata: {\n                    lat: this.state.courier_geodata.lat + 0.00001,\n                    long: this.state.courier_geodata.long + 0.00001\n                }\n            })\n        }\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {props.order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\n                    text={props.order.courier_name}\n                    caption={props.order.date}\n                    after={props.order.state}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {props.order.number}\n                </RichCell>\n                {geoMap(props.order.target, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nGeodataBusiness.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default GeodataBusiness;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nfunction geoMap(ordes) {\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n            <Placemark geometry={[55.684758, 37.738521]} />\n            <Placemark geometry={[55.684858, 37.738921]} />\n        </Map>\n    </YMaps>\n}\n\nclass BusinessAllCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        var orders = this.fetchOrdersWithGeo(props.business_id)\n\n        this.state = {\n            business_id: props.business_id,\n            orders: orders,\n            ymaps: null,\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.setState({orders: this.fetchOrdersWithGeo(props.business_id)})\n        }, 5000);\n    }\n\n    setYmaps = ymaps => {\n        this.setState({ ymaps });\n    };\n\n    setCenter = ref => {\n        const { ymaps } = this.state;\n\n        if (ymaps) {\n            const map = ref.getMap();\n            const result = ymaps.util.bounds.getCenterAndZoom(\n                map.geoObjects.getBounds(),\n                map.container.getSize()\n            );\n\n            // Setting the optimal center and zoom level of the map.\n            var zoom = result.zoom\n            if (result.zoom > 19) {\n                zoom = 19\n            }\n            map.setCenter(result.center, zoom);\n        }\n    };\n\n    // async componentDidMount() {\n    //     const props = this.props;\n    //     this.setState({ business_id: props.business_id })\n    //     console.log(\"mount\")\n    // }\n\n    fetchOrdersWithGeo(id) {\n        if (this.state && this.state.orders) {\n            this.state.orders[0].geodata.lat = this.state.orders[0].geodata.lat + 0.0001\n            this.state.orders[0].geodata.long = this.state.orders[0].geodata.long + 0.0001\n            return this.state.orders\n        } else {\n            return [\n                {\n                    \"shop\": 'Магазин \"Развивающие игрушки\"',\n                    \"date\": '06.06.2020',\n                    \"state\": 'Везут',\n                    \"number\": '5488779',\n                    \"target\": 'Москва, ул. Братиславская, д. 31к1',\n                    \"courier_id\": 123,\n                    \"courier_name\": 'Иванов Виктор',\n                    \"geodata\": { lat: 55.659200, long: 37.753314 }\n                },\n                {\n                    \"shop\": 'Магазин \"Развивающие игрушки\"',\n                    \"date\": '08.06.2020',\n                    \"state\": 'Везут',\n                    \"number\": '34643-643',\n                    \"target\": 'Москва, ул. Братиславская, д. 31к1',\n                    \"courier_id\": 124,\n                    \"courier_name\": 'Равшан Ильюсович',\n                    \"geodata\": { lat: 55.659209, long: 37.753434 }\n                },\n            ]\n        }\n    }\n\n    detailClick() {\n        alert(\"test\")\n        console.log(\"test\")\n    }\n\n    render() {\n        console.log(\"render\")\n\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"business\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Курьеры {props.business_name}\n                </PanelHeader>\n                <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: ['util.bounds', 'control.ZoomControl'] }} >\n                    <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n                        {this.state.orders && this.state.orders.map((order) =>\n                            <Placemark key={order.number} properties={{\n                                hintContent: order.courier_name,\n                                properties: { name: \"test\" },\n                                balloonContent: '<div style=\"margin: 10px;\">' +\n                                    '<b>' + order.courier_name + '</b><br /> Заказ: ' + order.number + '<br />' +\n                                    '<i id=\"count\"></i> ' +\n                                    // '<input type=\"button\" onclick=\"this.detailClick()\" value=\"Считать кроликов!\"/>' +\n                                    '</div>',\n                            }} modules={['geoObject.addon.balloon', 'geoObject.addon.hint']} geometry={[order.geodata.lat, order.geodata.long]} instanceRef={ref => ref && this.setCenter(ref)} />\n                        )}\n                    </Map>\n                </YMaps>\n            </Panel>\n        )\n    }\n}\n\nBusinessAllCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default BusinessAllCourier;","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Epic, Tabbar, TabbarItem, Panel, PanelHeader } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport Icon28CompassOutline from '@vkontakte/icons/dist/28/compass_outline';\nimport Icon28MarketAddBadgeOutline from '@vkontakte/icons/dist/28/market_add_badge_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\n\nimport { ROUTES } from './Routes';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\n\nimport Home from './panels/Home';\nimport Client from './panels/Client/Client';\nimport Business from './panels/Business/Business';\nimport BusinessOptions from './panels/Business/BusinessOptions';\nimport WelcomeScreen from './panels/PopUpWindows/WelcomeScreen';\nimport BusinessNewOrder from './panels/Business/BusinessNewOrder';\nimport Сourier from './panels/Courier/Сourier';\n\n\nimport GeodataClient from './panels/Geodata';\nimport GeodataCourier from './panels/CourierGeodata';\nimport GeodataBusiness from './panels/BusinessGeodata';\nimport BusinessAllCourier from './panels/BusinessAllCourier';\n\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: ~ROUTES.indexOf(location) ? location : 'home',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner size='large' />,\n\t\t\tactiveStory: 'main',\n\t\t\tclient_order: null,\n\t\t\tcourier_order: null,\n\t\t\tclient_order_for_business: null,\n\t\t\tuser: null,\n\t\t\tcourier_geodata: null,\n\t\t};\n\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\n\t\tthis.state.geoUpdateInterval = setInterval(() => {\n\t\t\tthis.fetchCourierGeo()\n\t\t\tconsole.log(\"tick\")\n\t\t}, 5000);\n\n\t\t// получаем координаты курьера\n\t\t// const geodata = await bridge.send('VKWebAppGetGeodata');\n\t\t// this.setState({ courier_geodata: geodata });\n\n\t}\n\n\tasync fetchCourierGeo() {\n\t\tconsole.log(this.state.activePanel)\n\t\tif (this.state.activePanel === 'courier' || this.state.activePanel === 'view_where_client') {\n\t\t\t// получаем координаты курьера\n\t\t\tconst geodata = await bridge.send('VKWebAppGetGeodata');\n\t\t\tthis.setState({ courier_geodata: geodata });\n\t\t\tconsole.log(\"geodata\", geodata)\n\t\t\t// /curiers/geo\n\n\t\t\tlet curiergeo = {\n\t\t\t\tcurier_id: this.state.user.curier_id,\n\t\t\t\tlat: geodata.lat,\n\t\t\t\tlong: geodata.long,\n\t\t\t};\n\n\t\t\tconsole.log(curiergeo)\n\n\t\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/curiers/geo'\n\t\t\tlet response = await fetch(url, {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(curiergeo)\n\t\t\t});\n\t\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\t\t// получаем тело ответа\n\t\t\t\tlet json = response.json();\n\t\t\t\tconsole.log(json)\n\t\t\t}\n\n\n\t\t\t// // пока заглушка\n\t\t\t// this.setState({\n\t\t\t// \tcourier_geodata: {\n\t\t\t// \t\tlat: this.state.courier_geodata.lat + 0.00001,\n\t\t\t// \t\tlong: this.state.courier_geodata.long + 0.00001\n\t\t\t// \t}\n\t\t\t// })\n\n\t\t\t// отправляем координаты курьера на бек\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\tthis.setState({ fetchedUser: user, popout: null });\n\t}\n\n\tonStoryChange(e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t}\n\n\tsetLocation = (route) => {\n\t\tif (route !== 'home') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\t// Проверяем, есть ли такой пользователь у нас на бэке\n\tasync fetchUser(userType) {\n\t\tlet url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\t\tswitch (userType) {\n\t\t\tcase 'client':\n\t\t\t\turl = url + 'clients/'\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\turl = url + 'curiers/'\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\turl = url + 'business/'\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n\t\tlet response = await fetch(url + this.state.fetchedUser.id);\n\t\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t\tlet json = await response.json();\n\t\t\tthis.setState({ user: json.result })\n\n\t\t\treturn true;\n\t\t}\n\t\tthis.setState({ popout: <WelcomeScreen userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\treturn false;\n\t}\n\n\tclosePopout = () => {\n\t\tthis.setState({ popout: null, activePanel: 'home' });\n\t}\n\n\tgo = (e, object) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(route)\n\n\t\tif (route === 'view_where_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t\tthis.fetchCourierGeo()\n\t\t}\n\t\tif (route === 'view_where_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'view_where_courier_for_business') {\n\t\t\tthis.setState({ client_order_for_business: object })\n\t\t}\n\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\ttabbarByUserType(userType) {\n\t\tvar tabbarApp = null\n\t\tswitch (this.state.activePanel) {\n\t\t\tcase 'client':\n\t\t\t\ttabbarApp = <Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_orders_ondelivery'}\n\t\t\t\t\t\tdata-story=\"client_orders_ondelivery\"\n\t\t\t\t\t\ttext=\"Мне везут\"\n\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t</Tabbar >\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\ttabbarApp = <Tabbar>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'main'}\n\t\t\t\t\t\tdata-story=\"main\"\n\t\t\t\t\t\ttext=\"Заказы в работе\"\n\t\t\t\t\t><Icon28ListOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_couriers_onmap'}\n\t\t\t\t\t\tdata-story=\"business_couriers_onmap\"\n\t\t\t\t\t\ttext=\"Курьеры на карте\"\n\t\t\t\t\t><Icon28CompassOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_add_order'}\n\t\t\t\t\t\tdata-story=\"business_add_order\"\n\t\t\t\t\t\ttext=\"Новый заказ\"\n\t\t\t\t\t><Icon28MarketAddBadgeOutline /></TabbarItem>\n\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\tselected={this.state.activeStory === 'business_options'}\n\t\t\t\t\t\tdata-story=\"business_options\"\n\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t</Tabbar>\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn tabbarApp\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={this.tabbarByUserType(this.state.activePanel)}\n\t\t\t>\n\t\t\t\t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Client id='client' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Сourier id='courier' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<Business id='business' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t<GeodataClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t<GeodataCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t\t\t<GeodataBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t\t\t<BusinessAllCourier id=\"business_couriers_onmap\" business_id='123' business_name='Магазин Автозапчастей' go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t\t\t<BusinessNewOrder id=\"business_add_order\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t</View>\n\t\t\t\t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t\t\t<BusinessOptions id=\"business_options\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t</View>\n\n\t\t\t</Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}