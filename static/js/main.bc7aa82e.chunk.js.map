{"version":3,"sources":["img/logo.svg","logo/IconLogo.js","modules/backRequests.js","Routes.js","panels/PopUpWindows/WelcomeScreen.js","panels/PopUpWindows/SetBusinessGroup.js","modules/parseTypes.js","panels/Client/Client.js","panels/Client/ClientOptions.js","modules/map.js","panels/Client/CourierGeodataForClient.js","panels/Courier/Сourier.js","panels/Courier/ClientGeodataForCourier.js","panels/Business/Business.js","modules/utils.js","panels/Business/BusinessOptions.js","panels/Business/BusinessNewOrder.js","panels/Business/CourierGeodataForBusiness.js","panels/Business/BusinessAllCourier.js","App.js","index.js"],"names":["module","exports","IconLogo","height","this","props","className","src","logo","alt","Component","back_url","postCourierGeodata","courier_id","geodata","a","courierGeodata","curier_id","lat","long","console","log","fetch","method","headers","body","JSON","stringify","response","ok","json","getCourierBySocialID","social_id","result","getCourierGeodataByCourierID","postSearchOrdersByClientHashPhone","hash_phone","requestOrder","hash_telephone","postSearchOrdersByBusinessID","business_id","postSearchOrdersByCourierID","order","createOrderRequest","Number","email","telephone","phone","order_number","order_address","address","order_description","description","order_date","Date","parse","toJSON","order_time_begin","order_time_end","order_state","getClientBySocialID","getBusinessBySocialID","getCuriersByBusinessID","postCreateBindingBusinessCourier","courier_phone","bindCurier","postDeleteBindingBusinessCourier","unbindCurier","WelcomeScreen","closePopout","state","fetchedUser","url","userType","bridge","send","userPhone","userEmail","user","id","toString","phone_number","actions","title","autoclose","action","createUser","mode","React","SetBusinessGroup","groups","group_id","token","access_token","groupsData","setState","items","loadGroups","e","currentTarget","name","value","onChange","map","group","index","key","orderStateToString","fullOrderDate","osName","platform","Client","orders","getClient","getClientOrders","left","onClick","go","data-to","IOS","header","disabled","multiline","before","size","photo_100","text","business_name","caption","after","Fragment","ClientOptions","mapState","center","zoom","controls","geoMap","clientGeodata","client","courier","query","apikey","load","width","defaultState","instanceRef","ref","routePanel","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","CourierGeodataForClient","courier_geodata","geoUpdateInterval","setInterval","fetchCourierGeo","clearInterval","curier_photo_100","Сourier","getCourier","getCourierOrders","ClientGeodataForCourier","shop","Business","getBusiness","getBusinessOrders","curier_name","isValidPhone","p","digits","replace","test","BusinessOptions","addCourier","validatePhone","createBinding","updatePhoneValue","target","resetPhoneValue","couriers","c","RegExp","errPhone","removable","onRemove","slice","unbind","first_name","last_name","top","BusinessNewOrder","createOrderHandler","postCreateOrder","selected_curier","bind","length","step","CourierGeodataForBusiness","number","BusinessAllCourier","setYmaps","ymaps","setCenter","getMap","util","bounds","getCenterAndZoom","geoObjects","getBounds","container","getSize","alert","onLoad","properties","hintContent","balloonContent","modules","geometry","App","window","location","hash","substr","setLocation","route","popout","activePanel","object","dataset","fetchUser","client_order","courier_order","client_order_for_business","show_user_menu","user_menu","activeStory","onStoryChange","story","display","tabbar","selected","data-story","buildDisplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc7aa82e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9a4bc312.svg\";","import React, {Component} from 'react';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport logo from '../img/logo.svg';\n\nexport class IconLogo extends Component {\n\n    render() {\n        return (\n            <img height={this.props.height} className={this.props.className} src={logo} alt=\"logo\"/>);\n    }\n}","const back_url = 'https://sqsinformatique-vk-back.ngrok.io'\n\n// Курьеры\nexport async function postCourierGeodata(courier_id, geodata) {\n\tlet courierGeodata = {\n\t\tcurier_id: courier_id,\n\t\tlat: geodata.lat,\n\t\tlong: geodata.long,\n\t};\n\tconsole.log(\"courierGeodata\", courierGeodata)\n\n\tlet url = back_url + '/api/v1/curiers/geo'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(courierGeodata)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCourierGeodata\", json)\n\t\treturn json\n\t}\n}\n\nexport async function getCourierBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/curiers/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCourierGeodataByCourierID (courier_id) {\n\tlet url = back_url + '/api/v1/curiers/geo/'\n\tlet response = await fetch(url + courier_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCourierBySocialID\", json)\n\t\treturn json.result\n\t}\n\n}\n\n// Заказы\nexport async function postSearchOrdersByClientHashPhone(hash_phone) {\n\tlet requestOrder = [\n\t\t{\n\t\t\thash_telephone: hash_phone,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByClientHashPhone\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByBusinessID(business_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tbusiness_id: business_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postSearchOrdersByCourierID(courier_id) {\n\tlet requestOrder = [\n\t\t{\n\t\t\tcurier_id: courier_id,\n\t\t}\n\t]\n\tconsole.log(\"requestOrder\", requestOrder)\n\n\tlet url = back_url + '/api/v1/orders/search'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(requestOrder)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = await response.json();\n\t\tconsole.log(\"postSearchOrdersByCourierID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateOrder(business_id, order) {\n\tlet createOrderRequest = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: Number(order.curier_id),\n\t\temail: order.email,\n\t\ttelephone: order.phone,\n\t\torder_number: order.order_number,\n\t\torder_address: order.address,\n\t\torder_description: order.description,\n\t\torder_date: new Date(Date.parse(order.order_date)).toJSON(),\n\t\torder_time_begin: order.order_time_begin,\n\t\torder_time_end: order.order_time_end,\n\t\torder_state: 'to_delivery',\n\t}\n\tconsole.log(createOrderRequest)\n\n\tlet url = back_url + '/api/v1/orders'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(createOrderRequest)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\t// получаем тело ответа\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateOrder\", json)\n\t\treturn json.result\n\t}\n}\n\n// Клиенты\nexport async function getClientBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/clients/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getClientBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\n// Бизнес\nexport async function getBusinessBySocialID(social_id) {\n\tlet url = back_url + '/api/v1/business/'\n\n\tlet response = await fetch(url + social_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getBusinessBySocialID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function getCuriersByBusinessID(business_id) {\n\tlet url = back_url + '/api/v1/business/curiers/'\n\n\tlet response = await fetch(url + business_id);\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = await response.json();\n\t\tconsole.log(\"getCuriersByBusinessID\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postCreateBindingBusinessCourier(business_id, courier_phone) {\n\tlet bindCurier = {\n\t\tbusiness_id: business_id,\n\t\tphone: courier_phone\n\t};\n\n\tconsole.log(bindCurier)\n\n\tlet url = back_url + '/api/v1/business/bind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(bindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postCreateBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\nexport async function postDeleteBindingBusinessCourier(business_id, curier_id) {\n\tlet unbindCurier = {\n\t\tbusiness_id: business_id,\n\t\tcurier_id: curier_id\n\t};\n\n\tconsole.log(unbindCurier)\n\n\tlet url = back_url + '/api/v1/business/unbind_curier'\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json;charset=utf-8'\n\t\t},\n\t\tbody: JSON.stringify(unbindCurier)\n\t});\n\tif (response.ok) { // если HTTP-статус в диапазоне 200-299\n\t\tlet json = response.json();\n\t\tconsole.log(\"postDeleteBindingBusinessCourier\", json)\n\t\treturn json.result\n\t}\n}\n\n\n\n","export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert } from '@vkontakte/vkui';\n\nclass WelcomeScreen extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n        };\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                // url = url + 'business'\n                console.log(\"1111\")\n                props.closePopout(true, props.userType)\n                return true\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false,)\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Я согласен',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Здравствуйте!</h1>\n                Вы новый <b>{userType}</b> нашего приложения!\n                <div><br />\n                Подтвердите, что даёте согласие, на доступ приложения к информации о вашей учётной записи в социальной сети ВК. <br />Данная информация не будет передаваться третьим лицам.\nМы храним только ID в социальной сети и мы не храним Ваш email и мобильный номер.\n                </div>\n            </Alert>\n        )\n    }\n}\n\nexport default WelcomeScreen;\n","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { Alert, Select } from '@vkontakte/vkui';\n\nclass SetBusinessGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: props.fetchedUser,\n            groups: null,\n            group_id: 0,\n        };\n    }\n\n    async loadGroups() {\n        const props = this.props\n        const token = await bridge.send(\"VKWebAppGetAuthToken\", { \"app_id\": 7500440, \"scope\": \"groups\" });\n        console.log(token)\n        const groupsData = await bridge.send(\"VKWebAppCallAPIMethod\", {\n            \"method\": \"groups.get\",\n            \"request_id\": \"sqsrequest\",\n            \"params\": {\n                \"user_id\": props.fetchedUser.id,\n                \"v\": \"5.110\",\n                \"access_token\": token.access_token,\n                \"extended\": true,\n                \"fields\": \"contacts\",\n            }\n        });\n        console.log(groupsData.response)\n        this.setState({ groups: groupsData.response.items, group_id: groupsData.response.items[0].id })\n        console.log(this.state.groups)\n    }\n\n    async componentDidMount() {\n        await this.loadGroups()\n    }\n\n    async createUser() {\n        const props = this.props;\n        let url = 'https://sqsinformatique-vk-back.ngrok.io/api/v1/'\n\n        switch (props.userType) {\n            case 'client':\n                url = url + 'clients'\n                break;\n            case 'courier':\n                url = url + 'curiers'\n                break;\n            case 'business':\n                url = url + 'business'\n                break;\n            default:\n                return true;\n        }\n\n        const userPhone = await bridge.send(\"VKWebAppGetPhoneNumber\", {});\n        console.log(userPhone)\n\n        const userEmail = await bridge.send(\"VKWebAppGetEmail\", {});\n        console.log(userEmail)\n        console.log(\"this.state.group_id\", this.state.group_id)\n        let user = {\n            social_id: this.state.fetchedUser.id.toString(),\n            email: userEmail.email,\n            group_id: this.state.group_id.toString(),\n            telephone: userPhone.phone_number\n        };\n\n        let response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        if (response.ok) { // если HTTP-статус в диапазоне 200-299\n            // получаем тело ответа\n            let json = response.json();\n            console.log(json)\n        }\n\n        props.closePopout(true)\n    }\n\n    closePopout = () => {\n        const props = this.props;\n        props.closePopout(false)\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    }\n\n    render() {\n        const props = this.props;\n\n        var userType\n        switch (props.userType) {\n            case 'client':\n                userType = 'клиент'\n                break;\n            case 'courier':\n                userType = 'курьер'\n                break;\n            case 'business':\n                userType = 'бизнес-партнёр'\n                break;\n            default:\n        }\n\n        const { group_id } = this.state;\n\n        return (\n            <Alert\n                actions={[{\n                    title: 'Сохранить',\n                    autoclose: false,\n                    action: () => this.createUser(),\n                }, {\n                    title: 'Отмена',\n                    autoclose: false,\n                    mode: 'cancel',\n                    action: () => this.closePopout(),\n                }]}\n            >\n                <h1>Выбор сообщества!</h1>\n                <div><br />\n                Пожалуйста, выберить сообщество связанное с учётной записью, которое представляет Ваш бизнес.\n                <br />\n                &nbsp;\n                </div>\n                <Select\n                    name=\"group_id\"\n                    value={group_id}\n                    onChange={this.onChange}\n                >\n                    {this.state.groups && this.state.groups.map((group, index) => (\n                        <option key={group.id} value={group.id}>{group.name}</option>\n                    ))}\n                </Select>\n            </Alert>\n        )\n    }\n}\n\nexport default SetBusinessGroup;\n","export function orderStateToString(state) {\n    switch (state) {\n        case 'to_delivery':\n            return 'В доставке'\n        default:\n            return 'Не известное состояние'\n    }\n}\n\nexport function fullOrderDate(order) {\n    return order.order_date + \" с \" + order.order_time_begin + \" до \" + order.order_time_end\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByClientHashPhone, getClientBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Client.css';\n\nconst osName = platform();\n// var miniPanel;\n// if (osName !== IOS || osName !== ANDROID) {\n// \tminiPanel = <React.Fragment>\n// \t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n// \t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n// \t</React.Fragment>\n// }\n\nclass Client extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\torders: null,\n\t\t\tuser: props.user,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getClient()\n\t\tawait this.getClientOrders()\n\t}\n\n\tasync getClient() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getClientBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getClientOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByClientHashPhone(user.hash_telephone)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t// right={miniPanel}\n\t\t\t\t>\n\t\t\t\t\tКлиент\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Отправитель: \" + order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Client;\n","import React from 'react';\nimport { Panel, PanelHeader} from '@vkontakte/vkui';\n\nclass ClientOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            user: props.user,\n        };\n    }\n\n    render() {\n        const props = this.props;\n\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                // left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                //     {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                // </PanelHeaderButton>}\n                >\n                    Настройки\n\t\t\t\t</PanelHeader>\n             </Panel>\n        );\n    }\n}\n\nexport default ClientOptions;","import React from 'react';\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\n\nconst apiKey = '482da132-c4be-476f-95ef-79ba61d579a4'\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nexport function geoMap(clientGeodata, courierGeodata) {\n    var client\n    var courier\n    if (typeof clientGeodata === 'object') {\n        client = clientGeodata.lat + \",\" + clientGeodata.long\n    } else {\n        client = clientGeodata\n    }\n\n    if (typeof courierGeodata === 'object') {\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\n    } else {\n        courier = courierGeodata\n    }\n\n    console.log(courierGeodata)\n\n    return <YMaps query={{ apikey: apiKey, load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n            <RoutePanel\n                instanceRef={ref => {\n                    if (ref) {\n                        ref.routePanel.state.set({\n                            fromEnabled: false,\n                            type: 'masstransit',\n                            from: courier,\n                            to: client,\n                            toEnabled: false,\n                        });\n                        ref.routePanel.options.set({\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                            allowSwitch: false,\n                            // Включим определение адреса по координатам клика.\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                            reverseGeocoding: true,\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                            types: { masstransit: false, pedestrian: false, taxi: false }\n                        })\n                    }\n                }}\n                options={{\n                    float: 'right',\n                }}\n            />\n        </Map>\n    </YMaps>\n}","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForClient extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Курьер на карте\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.business_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForClient.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForClient;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\n\nimport { postSearchOrdersByCourierID, getCourierBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nclass Сourier extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser: props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tawait this.getCourier()\n\t\tawait this.getCourierOrders()\n\t}\n\n\tasync getCourier() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getCourierBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getCourierOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByCourierID(user.curier_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={\n\t\t\t\t\t\t<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t\t</PanelHeaderButton>\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\tКурьер\n      \t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>Я везу</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell\n\t\t\t\t\t\t\tkey={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={order.business_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_client\">Адрес на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с клиентом</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\n\nСourier.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass ClientGeodataForCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: props.order.courier_id,\n            courier_geodata: props.courier_geodata,\n        };\n    }\n\n    async componentDidMount() {\n        const props = this.props;\n        this.setState({ courier_id: props.order.courier_id, courier_geodata: props.courier_geodata })\n\n        console.log(\"courier_geodata\", props.courier_geodata)\n    }\n\n    render() {\n        const { id, order, courier_geodata } = this.props;\n\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {order.shop}\n                </PanelHeader>\n                <RichCell\n                    key={order.order_number}\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text=''\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с клиентом</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.order_number}\n                </RichCell>\n                {geoMap(order.order_address, courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nClientGeodataForCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default ClientGeodataForCourier;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass Business extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tfetchedUser:  props.fetchedUser,\n\t\t\tuser: props.user,\n\t\t\torders: null,\n\t\t};\n\t}\n\t\n\tasync componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n\t}\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n\t}\n\n\trender() {\n\t\tconst props = this.props;\n\t\treturn (\n\t\t\t<Panel id={props.id}>\n\t\t\t\t<PanelHeader\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n\t\t\t\t\t</PanelHeaderButton>}\n\t\t\t\t>\n\t\t\t\t\tБизнес\n\t\t\t\t</PanelHeader>\n\t\t\t\t<Group header={<Header>У курьера</Header>}>\n\t\t\t\t\t{this.state.orders && this.state.orders.map((order) =>\n\t\t\t\t\t\t<RichCell key={order.order_number}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\tbefore={<Avatar size={72} src={order.curier_photo_100}/>} // src={getAvatarUrl('user_ti')}\n\t\t\t\t\t\t\ttext={\"Курьер \" + order.curier_name}\n\t\t\t\t\t\t\tcaption={fullOrderDate(order)}\n\t\t\t\t\t\t\tafter={orderStateToString(order.order_state)}\n\t\t\t\t\t\t\tactions={\n\t\t\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier_for_business\">Курьер на карте</Button>\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\n\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{order.order_number}\n\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</Group>\n\t\t\t</Panel>\n\t\t);\n\t}\n}\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","export function isValidPhone(p) {\n    var phoneRe = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    var digits = p.replace(/\\D/g, \"\");\n    return phoneRe.test(digits);\n}\n\nexport function trim (s, c) {\n    if (c === \"]\") c = \"\\\\]\";\n    if (c === \"\\\\\") c = \"\\\\\\\\\";\n    return s.replace(new RegExp(\n      \"^[\" + c + \"]+|[\" + c + \"]+$\", \"g\"\n    ), \"\");\n  }","import React from 'react';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { FormLayout, FormStatus, Panel, PanelHeader, Input, Button, Group, Cell, List, Header, PanelHeaderButton } from '@vkontakte/vkui';\nimport { isValidPhone, trim } from '../../modules/utils'\n\nimport { getCuriersByBusinessID, postCreateBindingBusinessCourier, postDeleteBindingBusinessCourier } from '../../modules/backRequests'\n\nconst osName = platform();\n\nclass BusinessOptions extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            validatePhone: true,\n            user: props.user,\n            phone: '',\n            couriers: null,\n        };\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async createBinding() {\n        const { user } = this.props;\n        const { phone } = this.state;\n\n        await postCreateBindingBusinessCourier(user.business_id, trim(phone, '+'))\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    async unbind(curier_id) {\n        const { user } = this.props;\n\n        await postDeleteBindingBusinessCourier(user.business_id, curier_id)\n\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n        }\n    }\n\n    addCourier = () => {\n        this.setState({ validatePhone: isValidPhone(this.state.phone) })\n        if (this.state.validatePhone) {\n            this.createBinding()\n        }\n    }\n\n    updatePhoneValue = (e) => {\n        this.setState({\n            phone: e.target.value,\n        });\n\n        console.log(this.state.phone)\n    }\n\n    resetPhoneValue = (e) => {\n        e.target.value = ''\n    }\n\n    render() {\n        const props = this.props;\n\n        let errPhone\n        if (!this.state.validatePhone) {\n            errPhone = <FormStatus header=\"Некорректный мобильный номер\" mode=\"error\">\n                Необходимо корректно ввести номер в международном формате\n                    </FormStatus>\n        }\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    Настройки\n\t\t\t\t</PanelHeader>\n                {this.state.couriers &&\n                    <Group header={<Header mode=\"secondary\">Мои курьеры</Header>}>\n                        <List>\n                            {this.state.couriers.map((courier, index) => (\n                                <Cell key={courier.curier_id} removable onRemove={() => {\n                                    this.setState({\n                                        couriers: [...this.state.couriers.slice(0, index), ...this.state.couriers.slice(index + 1)]\n                                    })\n                                    this.unbind(courier.curier_id)\n                                }}>{courier.first_name} {courier.last_name}</Cell>\n                            ))}\n                        </List>\n                    </Group>\n                }\n                <FormLayout>\n                    {errPhone}\n                    <Input id='telephone' top=\"Добавить курьера по номеру телефона\"\n                        // onFocus={this.resetPhoneValue} value=\"+7123456789\"\n                        value={this.state.phone}\n                        type=\"tel\"\n                        onChange={this.updatePhoneValue}\n                    />\n                    <Button size=\"xl\" onClick={this.addCourier}>Добавить</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nexport default BusinessOptions;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport { Button, FormLayout, Input, Textarea, Select, FormLayoutGroup } from '@vkontakte/vkui';\nimport { isValidPhone } from '../../modules/utils'\n\nimport { postCreateOrder, getCuriersByBusinessID } from '../../modules/backRequests'\n\nimport './Business.css';\n\nconst osName = platform();\n\nclass BusinessNewOrder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser: null,\n            order: {\n                description: '',\n                email: '',\n                phone: '',\n                order_number: '',\n                address: '',\n                order_date: '',\n                order_time_begin: '',\n                order_time_end: '',\n                curier_id: 0,\n            },\n            selected_curier: 0,\n            user: props.user,\n            couriers: null,\n        };\n\n        this.onChange = this.onChange.bind(this);\n    }\n\n    async componentDidMount() {\n        const { user } = this.props;\n        const response = await getCuriersByBusinessID(user.business_id)\n        if (response) {\n            this.setState({ couriers: response })\n            if (response.length > 0) {\n                const order = { curier_id: response[0].curier_id }\n                this.setState({ order: order })\n                console.log()\n            }\n        }\n    }\n\n    onChange(e) {\n        const { name, value } = e.currentTarget;\n        let order\n        if (name === 'curier_id') {\n            const courier = this.state.couriers[value]\n            this.state.order.curier_id = courier.curier_id\n            this.setState({ selected_curier: value })\n        } else {\n            order = { ...this.state.order, ...{ [name]: value } }\n            this.setState({ order: order });\n        }\n        console.log(this.state.order)\n    }\n\n    createOrderHandler = () => {\n        const { user } = this.props\n        const { order } = this.state\n        postCreateOrder(user.business_id, order)\n    }\n\n    render() {\n        const props = this.props;\n        const { email, phone, address, order_number, description, curier_id, order_date, order_time_begin, order_time_end } = this.state.order;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                >\n                    {[props.business_name]}\n                </PanelHeader>\n                <FormLayout>\n                    <Input\n                        top=\"Номер заказа\"\n                        name=\"order_number\"\n                        value={order_number}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Мобильный телефон\"\n                        type=\"tel\"\n                        name=\"phone\"\n                        value={phone}\n                        onChange={this.onChange}\n                    // keyboardType={'phone-pad'}\n                    />\n                    <Input\n                        type=\"email\"\n                        top=\"E-mail\"\n                        name=\"email\"\n                        value={email}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        top=\"Адрес доставки\"\n                        name=\"address\"\n                        value={address}\n                        onChange={this.onChange}\n                    />\n                    <Textarea\n                        top=\"Описание заказа\"\n                        name=\"description\"\n                        value={description}\n                        onChange={this.onChange}\n                    />\n                    <Input\n                        type=\"date\"\n                        top=\"Дата доставки\"\n                        name=\"order_date\"\n                        value={order_date}\n                        onChange={this.onChange}\n                    />\n                    <FormLayoutGroup top=\"Время доставки\">\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"Время от\"\n                            name=\"order_time_begin\"\n                            value={order_time_begin}\n                            onChange={this.onChange}\n                        />\n                        <Input\n                            type=\"time\" step=\"3600000\"\n                            top=\"до\"\n                            name=\"order_time_end\"\n                            value={order_time_end}\n                            onChange={this.onChange}\n                        />\n                    </FormLayoutGroup>\n                    <Select\n                        top=\"Выбрать курьера\"\n                        name=\"curier_id\"\n                        value={this.state.selected_curier}\n                        onChange={this.onChange}\n                    >\n                        {this.state.couriers && this.state.couriers.map((courier, index) => (\n                            <option key={index} value={index}>{courier.first_name} {courier.last_name}</option>\n                        ))}\n                    </Select>\n                    <Button size=\"xl\" onClick={this.createOrderHandler}>Создать заказ</Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nBusinessNewOrder.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\nexport default BusinessNewOrder;\n","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { PanelHeader, RichCell, Button, Avatar } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { orderStateToString, fullOrderDate } from '../../modules/parseTypes'\nimport { getCourierGeodataByCourierID } from '../../modules/backRequests'\nimport { geoMap } from '../../modules/map'\n\nconst osName = platform();\n\nclass CourierGeodataForBusiness extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            courier_id: this.props.order.curier_id,\n            courier_geodata: { lat: 55.659200, long: 37.753314 },\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.fetchCourierGeo()\n        }, 5000);\n    }\n\n    async componentDidMount() {\n        await this.fetchCourierGeo()\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n    async fetchCourierGeo() {\n        const { courier_id } = this.state;\n        const response = await getCourierGeodataByCourierID(courier_id)\n        if (response) {\n            this.setState({ courier_geodata: { lat: response.lat, long: response.long } })\n        }\n    }\n\n    render() {\n        const { id, order } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client_orders_ondelivery\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    {order.shop}\n                </PanelHeader>\n                <RichCell\n                    disabled\n                    multiline\n                    before={<Avatar size={72} src={order.curier_photo_100} />} // src={getAvatarUrl('user_ti')}\n                    text={order.curier_name}\n                    caption={fullOrderDate(order)}\n                    after={orderStateToString(order.order_state)}\n                    actions={\n                        <React.Fragment>\n                            <Button>Чат с курьером</Button>\n                        </React.Fragment>\n                    }\n                >\n                    {order.number}\n                </RichCell>\n                {geoMap(order.order_address, this.state.courier_geodata)}\n            </Panel>\n        )\n    }\n}\n\nCourierGeodataForBusiness.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default CourierGeodataForBusiness;","import React from 'react';\nimport { Panel } from '@vkontakte/vkui';\nimport { YMaps, Map, Placemark } from 'react-yandex-maps';\nimport { PanelHeader  } from '@vkontakte/vkui';\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\nimport PropTypes from 'prop-types';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport { postSearchOrdersByBusinessID, getBusinessBySocialID } from '../../modules/backRequests'\n\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\n\nconst osName = platform();\n\nclass BusinessAllCourier extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fetchedUser:  props.fetchedUser,\n            orders: null,\n            ymaps: null,\n            user: props.user,\n        };\n\n        this.state.geoUpdateInterval = setInterval(() => {\n            this.getBusinessOrders()\n        }, 5000);\n    }\n\n    setYmaps = ymaps => {\n        this.setState({ ymaps });\n    };\n\n    setCenter = ref => {\n        const { ymaps } = this.state;\n\n        if (ymaps) {\n            const map = ref.getMap();\n            const result = ymaps.util.bounds.getCenterAndZoom(\n                map.geoObjects.getBounds(),\n                map.container.getSize()\n            );\n\n            // Setting the optimal center and zoom level of the map.\n            var zoom = result.zoom\n            if (result.zoom > 19) {\n                zoom = 19\n            }\n            map.setCenter(result.center, zoom);\n        }\n    };\n\n    async componentDidMount() {\n\t\tawait this.getBusiness()\n\t\tawait this.getBusinessOrders()\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.state.geoUpdateInterval)\n    }\n\n\tasync getBusiness() {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response = await getBusinessBySocialID(fetchedUser.id)\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t}\n\t}\n\n\tasync getBusinessOrders() {\n\t\tconst { user } = this.state\n\t\tif (!user) {\n\t\t\treturn\n\t\t}\n\n\t\tlet response = await postSearchOrdersByBusinessID(user.business_id)\n\t\tif (response) {\n\t\t\tthis.setState({ orders: response })\n\t\t}\n    }\n    \n    detailClick() {\n        alert(\"test\")\n        console.log(\"test\")\n    }\n\n    render() {\n        const props = this.props;\n        return (\n            <Panel id={props.id}>\n                <PanelHeader\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"home\">\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </PanelHeaderButton>}\n                // right={miniPanel}\n                >\n                    Курьеры {props.business_name}\n                </PanelHeader>\n                <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: ['util.bounds', 'control.ZoomControl'] }} >\n                    <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' onLoad={ymaps => this.setYmaps(ymaps)}>\n                        {this.state.orders && this.state.orders.map((order) =>\n                            <Placemark key={order.order_number} properties={{\n                                hintContent: order.curier_name,\n                                properties: { name: \"test\" },\n                                balloonContent: '<div style=\"margin: 10px;\">' +\n                                    '<b>' + order.curier_name + '</b><br /> Заказ: ' + order.order_number + '<br />' +\n                                    '<i id=\"count\"></i> ' +\n                                    // '<input type=\"button\" onclick=\"this.detailClick()\" value=\"Считать кроликов!\"/>' +\n                                    '</div>',\n                            }} modules={['geoObject.addon.balloon', 'geoObject.addon.hint']} geometry={[order.geodata.lat, order.geodata.long]} instanceRef={ref => ref && this.setCenter(ref)} />\n                        )}\n                    </Map>\n                </YMaps>\n            </Panel>\n        )\n    }\n}\n\nBusinessAllCourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired\n};\n\n\nexport default BusinessAllCourier;","import React from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, Epic, Tabbar, TabbarItem, Panel, Div, Button, Group, PanelHeader } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport Icon28ListOutline from '@vkontakte/icons/dist/28/list_outline';\nimport Icon28CompassOutline from '@vkontakte/icons/dist/28/compass_outline';\nimport Icon28MarketAddBadgeOutline from '@vkontakte/icons/dist/28/market_add_badge_outline';\nimport Icon28SettingsOutline from '@vkontakte/icons/dist/28/settings_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\n\nimport { IconLogo } from './logo/IconLogo';\nimport './App.css';\n\nimport { postCourierGeodata, getClientBySocialID, getCourierBySocialID, getBusinessBySocialID } from './modules/backRequests'\n\nimport { ROUTES } from './Routes';\n\nimport '@vkontakte/vkui/dist/vkui.css';\n\n// Главная страница\nimport Home from './panels/Home';\n\n// Регистрация новых пользователей\nimport WelcomeScreen from './panels/PopUpWindows/WelcomeScreen';\nimport SetBusinessGroup from './panels/PopUpWindows/SetBusinessGroup'\n\n// Клиент\nimport Client from './panels/Client/Client';\nimport ClientOptions from './panels/Client/ClientOptions';\nimport CourierGeodataForClient from './panels/Client/CourierGeodataForClient';\n\n// Курьер\nimport Сourier from './panels/Courier/Сourier';\nimport ClientGeodataForCourier from './panels/Courier/ClientGeodataForCourier';\n\n// Бизнес\nimport Business from './panels/Business/Business';\nimport BusinessOptions from './panels/Business/BusinessOptions';\nimport BusinessNewOrder from './panels/Business/BusinessNewOrder';\nimport CourierGeodataForBusiness from './panels/Business/CourierGeodataForBusiness';\nimport BusinessAllCourier from './panels/Business/BusinessAllCourier';\n\n\nconst location = window.location.hash.substr(1);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t\tpopout: <ScreenSpinner size='large' />,\n\t\t\tactiveStory: 'more',\n\t\t\tclient_order: null,\n\t\t\tcourier_order: null,\n\t\t\tclient_order_for_business: null,\n\t\t\tuser: null,\n\t\t\tcourier_geodata: { lat: 55.659200, long: 37.753314 },\n\t\t\tshow_user_menu: 'none',\n\t\t};\n\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\n\t\tthis.state.geoUpdateInterval = setInterval(() => {\n\t\t\tthis.fetchCourierGeo()\n\t\t}, 5000);\n\t}\n\n\tasync fetchCourierGeo() {\n\t\tswitch (this.state.activePanel) {\n\t\t\tcase 'courier':\n\t\t\tcase 'view_where_client':\n\t\t\t\t// Запрашиваем координаты курьера, если находимся на панелях courier или view_where_client\n\t\t\t\t// Надо также дополнить всеми остальными панелями курьера, чтобы координаты передавались всё\n\t\t\t\t// время, пока мы в режиме Курьера\n\t\t\t\tconst geodata = await bridge.send('VKWebAppGetGeodata');\n\t\t\t\tthis.setState({ courier_geodata: geodata });\n\n\t\t\t\tif (!this.state.user) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tawait postCourierGeodata(this.state.user.curier_id, { lat: geodata.lat, long: geodata.long })\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t}\n\n\tasync componentDidMount() {\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\tthis.setState({ fetchedUser: user, popout: null });\n\t}\n\n\tonStoryChange(e) {\n\t\tconsole.log(\"e.currentTarget.dataset.story\", e.currentTarget.dataset.story)\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story, activePanel: e.currentTarget.dataset.story })\n\t}\n\n\tsetLocation = (route) => {\n\t\tconsole.log(\"route\", route)\n\t\tif (route !== 'home') {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\n\t\t} else {\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\n\t\t}\n\t}\n\n\t// Проверяем, есть ли такой пользователь у нас на бэке\n\tasync fetchUser(userType) {\n\t\tconst { fetchedUser } = this.state\n\t\tlet response\n\t\tswitch (userType) {\n\t\t\tcase 'client':\n\t\t\t\tresponse = await getClientBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\tresponse = await getCourierBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\tresponse = await getBusinessBySocialID(fetchedUser.id)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\n\t\tif (response) {\n\t\t\tthis.setState({ user: response })\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.setState({ popout: <WelcomeScreen userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\treturn false;\n\t}\n\n\tclosePopout = (result, userType) => {\n\t\tconsole.log(result)\n\t\tif (!result) {\n\t\t\tthis.setState({ popout: null, activePanel: 'home' });\n\t\t} else {\n\t\t\tif (userType === 'business') {\n\t\t\t\tthis.setState({ popout: <SetBusinessGroup userType={userType} fetchedUser={this.state.fetchedUser} closePopout={this.closePopout} /> })\n\t\t\t} else {\n\t\t\t\tthis.setState({ popout: null });\n\t\t\t}\n\t\t}\n\t}\n\n\tgo = (e, object) => {\n\t\tconst route = e.currentTarget.dataset.to;\n\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(route)\n\n\t\tif (route === 'view_where_courier') {\n\t\t\tthis.setState({ client_order: object })\n\t\t\tthis.fetchCourierGeo()\n\t\t}\n\t\tif (route === 'view_where_client') {\n\t\t\tthis.setState({ courier_order: object })\n\t\t}\n\t\tif (route === 'view_where_courier_for_business') {\n\t\t\tthis.setState({ client_order_for_business: object })\n\t\t}\n\n\t\tif (route === 'home'){\n\t\t\tthis.setState({show_user_menu: 'none'})\n\t\t}\n\n\t\tthis.setState({ activePanel: route })\n\t\tthis.setLocation(route)\n\t};\n\n\tonClick = (e, user_menu) => {\n\t\t// Вывод предупреждения для нового пользователя\n\t\tthis.fetchUser(user_menu)\n\n\t\tthis.setState({ activeStory: user_menu, activePanel: 'client_orders_ondelivery', show_user_menu: user_menu })\n\t\tconsole.log(this.state)\n\t}\n\n\tbuildDisplay(user_menu, user) {\n\t\tlet display = null\n\t\tswitch (user_menu) {\n\t\t\tcase 'client':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client'}\n\t\t\t\t\t\t\tdata-story=\"client\"\n\t\t\t\t\t\t\ttext=\"Мне везут\"\n\t\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar >}>\n\t\t\t\t\t< View id='client' activePanel={this.state.activePanel} >\n\t\t\t\t\t\t<Client id='client_orders_ondelivery' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<CourierGeodataForClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t\t< View id='client_options' activePanel='client_options' >\n\t\t\t\t\t\t<ClientOptions id='client_options' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t</Epic>\n\t\t\t\tbreak;\n\t\t\tcase 'courier':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'courier'}\n\t\t\t\t\t\t\tdata-story=\"courier\"\n\t\t\t\t\t\t\ttext=\"Я везу\"\n\t\t\t\t\t\t><Icon28CubeBoxOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'client_options'}\n\t\t\t\t\t\t\tdata-story=\"client_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar >}>\n\t\t\t\t\t<View id='courier' activePanel={this.state.activePanel}>\n\t\t\t\t\t\t<Сourier id='client_orders_ondelivery' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View id='view_where_client' activePanel='view_where_client'>\n\t\t\t\t\t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t</Epic >\n\t\t\t\tbreak;\n\t\t\tcase 'business':\n\t\t\t\tdisplay = <Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t\t<Tabbar>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business'}\n\t\t\t\t\t\t\tdata-story=\"business\"\n\t\t\t\t\t\t\ttext=\"Заказы в работе\"\n\t\t\t\t\t\t><Icon28ListOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_couriers_onmap'}\n\t\t\t\t\t\t\tdata-story=\"business_couriers_onmap\"\n\t\t\t\t\t\t\ttext=\"Курьеры на карте\"\n\t\t\t\t\t\t><Icon28CompassOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_add_order'}\n\t\t\t\t\t\t\tdata-story=\"business_add_order\"\n\t\t\t\t\t\t\ttext=\"Новый заказ\"\n\t\t\t\t\t\t><Icon28MarketAddBadgeOutline /></TabbarItem>\n\t\t\t\t\t\t<TabbarItem\n\t\t\t\t\t\t\tonClick={this.onStoryChange}\n\t\t\t\t\t\t\tselected={this.state.activeStory === 'business_options'}\n\t\t\t\t\t\t\tdata-story=\"business_options\"\n\t\t\t\t\t\t\ttext=\"Настройки\"\n\t\t\t\t\t\t><Icon28SettingsOutline /></TabbarItem>\n\t\t\t\t\t</Tabbar>}>\n\t\t\t\t\t< View id='business' activePanel={this.state.activePanel} >\n\t\t\t\t\t\t<Business id='client_orders_ondelivery' user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t\t<CourierGeodataForBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t\t\t</View >\n\t\t\t\t\t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t\t\t\t<BusinessAllCourier id=\"business_couriers_onmap\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t\t\t\t<BusinessNewOrder id=\"business_add_order\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t\t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t\t\t\t<BusinessOptions id=\"business_options\" user={user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t\t</View>\n\t\t\t\t</Epic >\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tdisplay = <View id='main' activePanel={this.state.activePanel}>\n\t\t\t\t\t<Panel id='home'>\n\t\t\t\t\t\t<PanelHeader>\n\t\t\t\t\t\t\tГде курьер?\n\t\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t<Div className=\"header\">\n\t\t\t\t\t\t\t\t<IconLogo height={150} className=\"header__logo\" />\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t<Group title=\"Выбор кабинета пользователя\">\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28UserOutline/>} size=\"xl\" onClick={(e) => this.onClick(e, 'client')}>Я клиент</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28MarketOutline/>} size=\"xl\" onClick={(e) => this.onClick(e, 'courier')} >Я курьер</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button before={<Icon28CubeBoxOutline/>} size=\"xl\" onClick={(e) => this.onClick(e, 'business')} >Я бизнес</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t}\n\n\t\treturn display\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Div>\n\t\t\t\t{this.buildDisplay(this.state.show_user_menu, this.state.user)}\n\t\t\t</Div>\n\t\t\t// <Epic activeStory={this.state.activeStory} tabbar={this.tabbarByUserType(this.state.activePanel)}\n\t\t\t// >\n\t\t\t// \t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\n\t\t\t// \t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Client id='client' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Сourier id='courier' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<Business id='business' user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t\t<CourierGeodataForClient id='view_where_courier' order={this.state.client_order} go={this.go} />\n\t\t\t// \t\t<ClientGeodataForCourier id='view_where_client' order={this.state.courier_order} courier_geodata={this.state.courier_geodata} go={this.go} />\n\t\t\t// \t\t<CourierGeodataForBusiness id='view_where_courier_for_business' order={this.state.client_order_for_business} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_couriers_onmap\" activePanel=\"business_couriers_onmap\">\n\t\t\t// \t\t<BusinessAllCourier id=\"business_couriers_onmap\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_add_order\" activePanel=\"business_add_order\">\n\t\t\t// \t\t<BusinessNewOrder id=\"business_add_order\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\t\t\t// \t<View id=\"business_options\" activePanel=\"business_options\">\n\t\t\t// \t\t<BusinessOptions id=\"business_options\" user={this.state.user} fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t// \t</View>\n\n\t\t\t// </Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}