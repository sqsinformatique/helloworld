{"version":3,"sources":["img/persik.png","Routes.js","panels/Home.js","panels/Client.js","panels/Geodata.js","panels/Сourier.js","panels/Business.js","App.js","index.js"],"names":["module","exports","ROUTES","Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","expandable","onClick","data-to","osName","platform","IOS","ANDROID","Fragment","Client","props","state","this","left","header","getClientOrders","map","order","disabled","multiline","size","text","shop","caption","date","after","actions","e","number","React","Component","mapState","center","zoom","controls","GeodataClient","target","geodata","lat","long","geoUpdateInterval","setInterval","console","log","setState","bridge","send","clientGeodata","courierGeodata","client","courier","query","apikey","load","width","height","defaultState","className","instanceRef","ref","routePanel","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","geoMap","Сourier","noShadow","Business","location","window","hash","substr","App","setLocation","route","object","currentTarget","dataset","activePanel","indexOf","popout","activeStory","onStoryChange","bind","user","story","tabbar","selected","data-story","data","Geodata","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59d5c410.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","export const ROUTES = ['friends', 'client', 'courier'];","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline'\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Где курьер?</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<Group title=\"Navigation Example\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Cell expandable before={<Icon28UserOutline/>} onClick={go} data-to=\"client\">\r\n\t\t\t\t\tЯ клиент\r\n\t\t\t\t</Cell>\r\n\t\t\t\t<Cell expandable before={<Icon28MarketOutline/>} onClick={go} data-to=\"courier\">\r\n\t\t\t\t\tЯ курьер\r\n\t\t\t\t</Cell>\r\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"business\">\r\n\t\t\t\t\tЯ бизнес\r\n\t\t\t\t</Cell>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Client.css';\r\n\r\nconst osName = platform();\r\n\r\nvar miniPanel;\r\nif (osName !== IOS || osName !== ANDROID) {\r\n\tminiPanel = <React.Fragment>\r\n\t\t<PanelHeaderButton><Icon24Search /></PanelHeaderButton>\r\n\t\t<PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\r\n\t\t<PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\r\n\t</React.Fragment>\r\n}\r\n\r\nclass Client extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tfetchedUser: null,\r\n\t\t};\r\n\t}\r\n\r\n\tgetClientOrders() {\r\n\t\tconst clientOrders = [\r\n\t\t\t{\r\n\t\t\t\t\"shop\": 'Магазин \"Развивающие игрушки\"',\r\n\t\t\t\t\"date\": '06.06.2020',\r\n\t\t\t\t\"state\": 'Везут',\r\n\t\t\t\t\"number\": '5488779',\r\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1'\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"shop\": 'Магазин \"Автозапчасти\"',\r\n\t\t\t\t\"date\": '08.06.2020',\r\n\t\t\t\t\"state\": 'Везут',\r\n\t\t\t\t\"number\": '34643-643',\r\n\t\t\t\t\"target\": 'Москва, ул. Братиславская, д. 31к1'\r\n\t\t\t},\r\n\t\t]\r\n\t\treturn clientOrders\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst props = this.props;\r\n\t\treturn (\r\n\t\t\t<Panel id={props.id}>\r\n\t\t\t\t<PanelHeader\r\n\t\t\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t\t\t{osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\r\n\t\t\t\t\t</PanelHeaderButton>}\r\n\t\t\t\t// right={miniPanel}\r\n\t\t\t\t>\r\n\t\t\t\t\tКлиент\r\n\t\t\t\t</PanelHeader>\r\n\t\t\t\t<Group header={<Header>Мне везут</Header>}>\r\n\t\t\t\t\t{this.getClientOrders().map((order) =>\r\n\t\t\t\t\t\t<RichCell\r\n\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\tmultiline\r\n\t\t\t\t\t\t\tbefore={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\r\n\t\t\t\t\t\t\ttext={order.shop}\r\n\t\t\t\t\t\t\tcaption={order.date}\r\n\t\t\t\t\t\t\tafter={order.state}\r\n\t\t\t\t\t\t\tactions={\r\n\t\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={(e) => props.go(e, order)} data-to=\"view_where_courier\">Курьер на карте</Button>\r\n\t\t\t\t\t\t\t\t\t<Button>Чат с курьером</Button>\r\n\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{order.number}\r\n\t\t\t\t\t\t</RichCell>\r\n\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Group>\r\n\t\t\t</Panel>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nClient.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\r\n};\r\n\r\nexport default Client;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Panel } from '@vkontakte/vkui';\r\nimport { YMaps, Map, RoutePanel } from 'react-yandex-maps';\r\nimport { PanelHeader, Header, RichCell, Button, Avatar } from '@vkontakte/vkui';\r\nimport { platform, IOS, ANDROID } from '@vkontakte/vkui';\r\nimport PropTypes from 'prop-types';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\n\r\nconst mapState = { center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };\r\n\r\nconst osName = platform();\r\n\r\nfunction geoMap(clientGeodata, courierGeodata) {\r\n    var client\r\n    var courier\r\n    if (typeof clientGeodata === 'object') {\r\n        client = clientGeodata.lat + \",\" + clientGeodata.long\r\n    } else {\r\n        client = clientGeodata\r\n    }\r\n\r\n    if (typeof courierGeodata === 'object') {\r\n        courier = courierGeodata.lat + \",\" + courierGeodata.long\r\n    } else {\r\n        courier = courierGeodata\r\n    }\r\n\r\n\r\n    return <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\r\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' >\r\n            {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\r\n            {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\r\n            <RoutePanel\r\n                instanceRef={ref => {\r\n                    if (ref) {\r\n                        ref.routePanel.state.set({\r\n                            fromEnabled: false,\r\n                            type: 'masstransit',\r\n                            from: courier,\r\n                            to: client,\r\n                            toEnabled: false,\r\n                        });\r\n                        ref.routePanel.options.set({\r\n                            // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\r\n                            allowSwitch: false,\r\n                            // Включим определение адреса по координатам клика.\r\n                            // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\r\n                            reverseGeocoding: true,\r\n                            // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\r\n                            types: { masstransit: false, pedestrian: false, taxi: false }\r\n                        })\r\n                    }\r\n                }}\r\n                options={{\r\n                    float: 'right',\r\n                }}\r\n            />\r\n        </Map>\r\n    </YMaps>\r\n}\r\n\r\nclass GeodataClient extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            shop: 'unknown shop',\r\n            date: '01.01.1970',\r\n            state: 'unknown',\r\n            number: '-1',\r\n            target: 'unknown',\r\n            geodata: { lat: 37.609218, long: 55.753559 }, // центр Москвы :)\r\n        };\r\n\r\n        this.state.geoUpdateInterval = setInterval(() => {\r\n            // const geodata = bridge.send('VKWebAppGetGeodata');\r\n            // this.setState({ geodata: geodata });\r\n            console.log(this.state.geodata)\r\n            this.setState({ geodata: { lat: this.state.geodata.lat + 0.00001, long: this.state.geodata.long + 0.00001 } })\r\n        }, 5000);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const geodata = await bridge.send('VKWebAppGetGeodata');\r\n        this.setState({ geodata: geodata });\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        return (\r\n            <Panel id={props.id}>\r\n                <PanelHeader\r\n                    left={<PanelHeaderButton onClick={this.props.go} data-to=\"client\">\r\n                        {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\r\n                    </PanelHeaderButton>}\r\n                // right={miniPanel}\r\n                >\r\n                    {props.order.shop}\r\n                </PanelHeader>\r\n                <RichCell\r\n                    disabled\r\n                    multiline\r\n                    before={<Avatar size={72} />} // src={getAvatarUrl('user_ti')}\r\n                    text=''\r\n                    caption={props.order.date}\r\n                    after={props.order.state}\r\n                    actions={\r\n                        <React.Fragment>\r\n                            <Button>Чат с курьером</Button>\r\n                        </React.Fragment>\r\n                    }\r\n                >\r\n                    {props.order.number}\r\n                </RichCell>\r\n                {geoMap(props.order.target, this.state.geodata)}\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nGeodataClient.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nexport default GeodataClient;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport GeodataClient from './Geodata'\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\r\n\r\nimport './Сourier.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Сourier = props => (\r\n    <Panel id={props.id}>\r\n      <PanelHeader\r\n        noShadow left={\r\n          <PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n          {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n          </PanelHeaderButton>\r\n        }\r\n      >\r\n        Курьер\r\n      </PanelHeader>\r\n      <Group header={<Header>Я доставляю</Header>}>\r\n\t\t\t<RichCell\r\n\t\t\t\tdisabled\r\n\t\t\t\tmultiline\r\n\t\t\t\tbefore={<Avatar size={72}  />} // src={getAvatarUrl('user_ti')}\r\n\t\t\t\ttext='Магазин \"Развивающие игрушки\"'\r\n\t\t\t\tcaption=\"03.06.2020\"\r\n\t\t\t\tactions={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Button>Адрес на карте</Button>\r\n\t\t\t\t\t<Button>Чат с клиентом</Button>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t№322356\r\n\t\t\t</RichCell>\r\n\t\t\t<RichCell\r\n\t\t\t\tdisabled\r\n\t\t\t\tmultiline\r\n\t\t\t\tbefore={<Avatar size={72}  />} // src={getAvatarUrl('user_ti')}\r\n\t\t\t\ttext='Магазин \"Автозапчасти\"'\r\n\t\t\t\tcaption=\"05.06.2020\"\r\n\t\t\t\tactions={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Button>Адрес на карте</Button>\r\n\t\t\t\t\t<Button>Чат с клиентом</Button>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t№789-7890      \t\r\n\t\t\t</RichCell>\r\n\t\t</Group>\t\r\n      {/* <Geodata/>  */}\r\n    </Panel>\r\n  );\r\n  \r\n  Сourier.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Сourier;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\n\r\nimport './Business.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Business = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</PanelHeaderButton>}\r\n\t\t>\r\n\t\t\tБизнес\r\n\t\t</PanelHeader>\r\n\t\t<Group header={<Header>У курьера</Header>}>\r\n\t\t\t<RichCell\r\n\t\t\t\tdisabled\r\n\t\t\t\tmultiline\r\n\t\t\t\tbefore={<Avatar size={72}  />} // src={getAvatarUrl('user_ti')}\r\n\t\t\t\ttext='Курьер Иванов Виктор'\r\n\t\t\t\tcaption=\"03.06.2020\"\r\n\t\t\t\tafter=\"Отправлен\"\r\n\t\t\t\tactions={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Button>Курьер на карте</Button>\r\n\t\t\t\t\t<Button>Чат с курьером</Button>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t№322356\r\n\t\t\t</RichCell>\r\n\t\t\t<RichCell\r\n\t\t\t\tdisabled\r\n\t\t\t\tmultiline\r\n\t\t\t\tbefore={<Avatar size={72}  />} // src={getAvatarUrl('user_ti')}\r\n\t\t\t\ttext='Курьер Равшан Ильюсович'\r\n\t\t\t\tcaption=\"05.06.2020\"\r\n\t\t\t\tafter=\"Отправлен\"\r\n\t\t\t\tactions={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Button>Курьер на карте</Button>\r\n\t\t\t\t\t<Button>Чат с курьером</Button>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t№789-7890      \t\r\n\t\t\t</RichCell>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nBusiness.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Business;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { View, Epic, Tabbar, TabbarItem } from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon28NewsfeedOutline from '@vkontakte/icons/dist/28/newsfeed_outline'\r\nimport Icon28SearchOutline from '@vkontakte/icons/dist/28/search_outline';\r\nimport Icon28ReportOutline from '@vkontakte/icons/dist/28/report_outline';\r\nimport { ROUTES } from './Routes';\r\n\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n\r\nimport Home from './panels/Home';\r\nimport Client from './panels/Client';\r\nimport Сourier from './panels/Сourier';\r\nimport Business from './panels/Business';\r\nimport GeodataClient from './panels/Geodata';\r\n\r\nimport Main_page from './panels/about/Main_page';\r\n\r\nconst location = window.location.hash.substr(1);\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tactivePanel: ~ROUTES.indexOf(location) ? location : 'home',\r\n\t\t\tfetchedUser: null,\r\n\t\t\tpopout: <ScreenSpinner size='large' />,\r\n\t\t\tactiveStory: 'main',\r\n\t\t\torder: null,\r\n\t\t};\r\n\r\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\tthis.setState({ fetchedUser: user, popout: null });\r\n\t}\r\n\r\n\tonStoryChange(e) {\r\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\r\n\t}\r\n\r\n\tsetLocation = (route) => {\r\n\t\tif (route !== 'home') {\r\n\t\t\tbridge.send('VKWebAppSetLocation', { location: route });\r\n\t\t} else {\r\n\t\t\tbridge.send('VKWebAppSetLocation', { location: '' });\r\n\t\t}\r\n\t}\r\n\r\n\tgo = (e, object) => {\r\n\t\tconst route = e.currentTarget.dataset.to;\r\n\t\tif (route === 'view_where_courier') {\r\n\t\t\tthis.setState({ order: object })\r\n\t\t}\r\n\t\tthis.setState({ activePanel: route })\r\n\t\tthis.setLocation(route)\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\r\n\t\t\t\t<Tabbar>\r\n\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\tonClick={this.onStoryChange}\r\n\t\t\t\t\t\tselected={this.state.activeStory === 'main'}\r\n\t\t\t\t\t\tdata-story=\"main\"\r\n\t\t\t\t\t\ttext=\"Начало\"\r\n\t\t\t\t\t><Icon28NewsfeedOutline /></TabbarItem>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\tonClick={this.onStoryChange}\r\n\t\t\t\t\t\tselected={this.state.activeStory === 'discover'}\r\n\t\t\t\t\t\tdata-story=\"discover\"\r\n\t\t\t\t\t\ttext=\"Поиск\"\r\n\t\t\t\t\t><Icon28SearchOutline /></TabbarItem>\r\n\t\t\t\t\t<TabbarItem\r\n\t\t\t\t\t\tonClick={this.onStoryChange}\r\n\t\t\t\t\t\tselected={this.state.activeStory === 'about'}\r\n\t\t\t\t\t\tdata-story=\"about\"\r\n\t\t\t\t\t\ttext=\"о приложении\"\r\n\t\t\t\t\t><Icon28ReportOutline /></TabbarItem>\r\n\t\t\t\t</Tabbar>\r\n\t\t\t}>\r\n\t\t\t\t<View id='main' activePanel={this.state.activePanel} popout={this.state.popout}>\r\n\t\t\t\t\t<Home id='home' fetchedUser={this.state.fetchedUser} go={this.go} />\r\n\t\t\t\t\t<Client id='client' data={this.state.data} go={this.go} />\r\n\t\t\t\t\t<Сourier id='courier' go={this.go} />\r\n\t\t\t\t\t<Business id='business' go={this.go} />\r\n\t\t\t\t\t<GeodataClient id='view_where_courier' order={this.state.order} go={this.go} />\r\n\t\t\t\t</View>\r\n\r\n\t\t\t\t<View id='about' activePanel={this.state.activePanel} popout={this.state.popout}>\r\n\t\t\t\t\t<Home id='main_page' fetchedUser={this.state.fetchedUser} go={this.go} />\r\n\t\t\t\t</View>\r\n\t\t\t</Epic>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n"],"sourceRoot":""}