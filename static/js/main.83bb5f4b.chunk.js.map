{"version":3,"sources":["panels/Home.js","panels/Client.js","panels/Geodata.js","panels/Сourier.js","panels/Business.js","panels/Test.js","App.js","index.js","img/persik.png"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","expandable","onClick","data-to","osName","platform","Client","props","left","IOS","right","Fragment","header","mode","disabled","multiline","size","text","caption","after","actions","mapState","center","zoom","controls","Timer","useState","seconds","setSeconds","isActive","setIsActive","lat","long","userGeodata","setGeodata","fetchGeoData","a","bridge","send","geodata","useEffect","interval","setInterval","clearInterval","className","query","apikey","load","width","height","defaultState","instanceRef","ref","routePanel","state","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","Сourier","noShadow","Geodata","Business","persik","alt","Test","App","activePanel","setActivePanel","setUser","popout","setPopout","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.83bb5f4b.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline'\r\n\r\nconst Home = ({ id, go, fetchedUser }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>Где курьер?</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n\r\n\t\t<Group title=\"Navigation Example\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Cell expandable before={<Icon28UserOutline/>} onClick={go} data-to=\"client\">\r\n\t\t\t\t\tЯ клиент\r\n\t\t\t\t</Cell>\r\n\t\t\t\t<Cell expandable before={<Icon28MarketOutline/>} onClick={go} data-to=\"courier\">\r\n\t\t\t\t\tЯ курьер\r\n\t\t\t\t</Cell>\r\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"business\">\r\n\t\t\t\t\tЯ бизнес\r\n\t\t\t\t</Cell>\r\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"test\">\r\n\t\t\t\t\tТест\r\n\t\t\t\t</Cell>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nHome.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n\tfetchedUser: PropTypes.shape({\r\n\t\tphoto_200: PropTypes.string,\r\n\t\tfirst_name: PropTypes.string,\r\n\t\tlast_name: PropTypes.string,\r\n\t\tcity: PropTypes.shape({\r\n\t\t\ttitle: PropTypes.string,\r\n\t\t}),\r\n\t}),\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport Header from '@vkontakte/vkui/dist/components/Header/Header';\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport { RichCell, Button, Avatar } from '@vkontakte/vkui';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Client.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Client = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</PanelHeaderButton>}\r\n\t\t\tright={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t  <PanelHeaderButton><Icon24Search /></PanelHeaderButton>\r\n\t\t\t\t  <PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\r\n\t\t\t\t  <PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\tКлиент\r\n\t\t</PanelHeader>\r\n\t\t<Group header={<Header mode=\"secondary\">Мои заказы</Header>}>\r\n\t\t\t<RichCell\r\n\t\t\t\tdisabled\r\n\t\t\t\tmultiline\r\n\t\t\t\tbefore={<Avatar size={72}  />} // src={getAvatarUrl('user_ti')}\r\n\t\t\t\ttext='Магазин \"Развивающие игрушки\"'\r\n\t\t\t\tcaption=\"03.06.2020\"\r\n\t\t\t\tafter=\"Отправлен\"\r\n\t\t\t\tactions={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<Button>Курьер на карте</Button>\r\n\t\t\t\t\t<Button>Чат с курьером</Button>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t№322356      \t\r\n\t\t\t\t</RichCell>\r\n\t\t\t>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nClient.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Client;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { YMaps, Map, Placemark, RoutePanel } from 'react-yandex-maps';\r\n\r\nconst mapState = {center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };  \r\n\r\nconst Timer = () => {\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [userGeodata, setGeodata] = useState({lat: 0, long: 0});\r\n\r\n  function toggle() {\r\n    setIsActive(!isActive);\r\n  }\r\n\r\n  function reset() {\r\n    setSeconds(0);\r\n    setIsActive(false);\r\n  }\r\n\r\n  async function fetchGeoData() {\r\n    const geodata = await bridge.send('VKWebAppGetGeodata');\r\n    setGeodata(geodata);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchGeoData();  \r\n    let interval = null;\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        setSeconds(seconds => seconds + 5);\r\n        fetchGeoData();\r\n      }, 5000);\r\n    } else if (!isActive && seconds !== 0) {\r\n      clearInterval(interval);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [isActive, seconds]);\r\n\r\n  return (\r\n\r\n    <div className=\"app\">\r\n      <div className=\"time\">\r\n      {seconds}s geodata {userGeodata.lat}; {userGeodata.long}\r\n      <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\r\n          {isActive ? 'Pause' : 'Start'}\r\n        </button>\r\n        <button className=\"button\" onClick={reset}>\r\n          Reset\r\n        </button>\r\n\r\n      <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\r\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' > \r\n        {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\r\n        {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\r\n        <RoutePanel \r\n            instanceRef={ref => {\r\n                if (ref) {\r\n                  ref.routePanel.state.set({\r\n                    fromEnabled: false,\r\n                    type: 'masstransit',\r\n                    from: userGeodata.lat+\",\"+userGeodata.long,\r\n                    to: \"Москва, метро Братиславская\",\r\n                    toEnabled: false,\r\n                  });\r\n                  ref.routePanel.options.set({\r\n                    // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\r\n                    allowSwitch: false,\r\n                    // Включим определение адреса по координатам клика.\r\n                    // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\r\n                    reverseGeocoding: true,\r\n                    // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\r\n                    types: { masstransit: false, pedestrian: false, taxi: false }\r\n                  })\r\n                }\r\n            }}\r\n            options={{ \r\n                float: 'right',\r\n            }}\r\n         />\r\n        </Map>\r\n      </YMaps>\r\n\r\n      </div>\r\n      <div className=\"row\">\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Geodata from './Geodata'\r\n\r\nimport './Сourier.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Сourier = props => (\r\n    <Panel id={props.id}>\r\n      <PanelHeader\r\n        noShadow left={\r\n          <PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n          {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n          </PanelHeaderButton>\r\n        }\r\n      >\r\n        Карта\r\n      </PanelHeader>\t\r\n      <Geodata/> \r\n    </Panel>\r\n  );\r\n  \r\n  Сourier.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Сourier;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Business.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Business = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</PanelHeaderButton>}\r\n\t\t>\r\n\t\t\tPersik\r\n\t\t</PanelHeader>\r\n\t\t<img className=\"Business\" src={persik} alt=\"Persik The Cat\"/>\r\n\t</Panel>\r\n);\r\n\r\nBusiness.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\r\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/24/settings';\r\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\r\n\r\nimport persik from '../img/persik.png';\r\n\r\nconst osName = platform();\r\n\r\nconst Test = props => (\r\n\t<Panel id={props.id}>\r\n\t\t<PanelHeader\r\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</PanelHeaderButton>}\r\n\t\t\tright={\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t  <PanelHeaderButton><Icon24Search /></PanelHeaderButton>\r\n\t\t\t\t  <PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\r\n\t\t\t\t  <PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\tКлиент\r\n\t\t</PanelHeader>\r\n\t\t<div>\r\n            <h1>Test</h1>\r\n        </div>\r\n\t</Panel>\r\n);\r\n\r\nTest.propTypes = {\r\n\tid: PropTypes.string.isRequired,\r\n\tgo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Test;\r\n","import React, { useState, useEffect } from 'react';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {View } from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport Home from './panels/Home';\r\nimport Client from './panels/Client';\r\nimport Сourier from './panels/Сourier';\r\nimport Business from './panels/Business';\r\nimport Test from './panels/Test'\r\n\r\nconst App = () => {\r\n\tconst [activePanel, setActivePanel] = useState('home');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\tuseEffect(() => {\r\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\r\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t\t}\r\n\t\t});\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\tsetPopout(null);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\treturn (\r\n\t\t\t<View id='main' activePanel={activePanel} popout={popout}>\r\n\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\r\n\t\t\t\t<Client id='client' go={go} />\r\n\t\t\t\t<Сourier id='courier' go={go} />\r\n\t\t\t\t<Business id='business' go={go} />\r\n\t\t\t\t<Test id='test' go={go} />\r\n\t\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n\r\n","import \"core-js/features/map\";\r\nimport \"core-js/features/set\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport bridge from \"@vkontakte/vk-bridge\";\r\nimport App from \"./App\";\r\n\r\n// Init VK  Mini App\r\nbridge.send(\"VKWebAppInit\");\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nif (process.env.NODE_ENV === \"development\") {\r\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}