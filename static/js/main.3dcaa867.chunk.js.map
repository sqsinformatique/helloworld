{"version":3,"sources":["panels/Home.js","panels/Client.js","panels/Geodata.js","panels/Сourier.js","panels/Business.js","App.js","index.js","img/persik.png"],"names":["Home","id","go","fetchedUser","title","before","photo_200","src","description","city","first_name","last_name","expandable","onClick","data-to","osName","platform","Client","props","left","IOS","right","Fragment","className","persik","alt","mapState","center","zoom","controls","Timer","useState","seconds","setSeconds","isActive","setIsActive","lat","long","userGeodata","setGeodata","fetchGeoData","a","bridge","send","geodata","useEffect","interval","setInterval","clearInterval","query","apikey","load","width","height","defaultState","instanceRef","ref","routePanel","state","set","fromEnabled","type","from","to","toEnabled","options","allowSwitch","reverseGeocoding","types","masstransit","pedestrian","taxi","float","Сourier","noShadow","Business","App","activePanel","setActivePanel","setUser","size","popout","setPopout","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3dcaa867.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\nimport Icon28UserOutline from '@vkontakte/icons/dist/28/user_outline'\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\nimport Icon28CubeBoxOutline from '@vkontakte/icons/dist/28/cube_box_outline'\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Где курьер?</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Bridge\">\n\t\t\t<Cell\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</Cell>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Cell expandable before={<Icon28UserOutline/>} onClick={go} data-to=\"client\">\n\t\t\t\t\tЯ клиент\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28MarketOutline/>} onClick={go} data-to=\"courier\">\n\t\t\t\t\tЯ курьер\n\t\t\t\t</Cell>\n\t\t\t\t<Cell expandable before={<Icon28CubeBoxOutline/>} onClick={go} data-to=\"business\">\n\t\t\t\t\tЯ бизнес\n\t\t\t\t</Cell>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Icon24Search from '@vkontakte/icons/dist/24/search';\nimport Icon24SettingsOutline from '@vkontakte/icons/dist/24/settings';\nimport Icon24Notifications from '@vkontakte/icons/dist/24/notification';\n\nimport persik from '../img/persik.png';\nimport './Client.css';\n\nconst osName = platform();\n\nconst Client = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t\tright={\n\t\t\t\t<React.Fragment>\n\t\t\t\t  <PanelHeaderButton><Icon24Search /></PanelHeaderButton>\n\t\t\t\t  <PanelHeaderButton><Icon24SettingsOutline /></PanelHeaderButton>\n\t\t\t\t  <PanelHeaderButton><Icon24Notifications /></PanelHeaderButton>\n\t\t\t\t</React.Fragment>\n\t\t\t}\n\t\t>\n\t\t\tКлиент\n\t\t</PanelHeader>\n\t\t<img className=\"Client\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nClient.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Client;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { YMaps, Map, Placemark, RoutePanel } from 'react-yandex-maps';\n\nconst mapState = {center: [55.751574, 37.573856], zoom: 9, controls: ['zoomControl'] };  \n\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [userGeodata, setGeodata] = useState({lat: 0, long: 0});\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(0);\n    setIsActive(false);\n  }\n\n  async function fetchGeoData() {\n    const geodata = await bridge.send('VKWebAppGetGeodata');\n    setGeodata(geodata);\n  }\n\n  useEffect(() => {\n    fetchGeoData();  \n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 5);\n        fetchGeoData();\n      }, 5000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n\n    <div className=\"app\">\n      <div className=\"time\">\n      {seconds}s geodata {userGeodata.lat}; {userGeodata.long}\n      <button className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button className=\"button\" onClick={reset}>\n          Reset\n        </button>\n\n      <YMaps query={{ apikey: '482da132-c4be-476f-95ef-79ba61d579a4', load: 'control.ZoomControl' }} >\n        <Map width=\"100vw\" height=\"100vh\" defaultState={mapState} className='mapview' > \n        {/* <Placemark geometry={[55.684758, 37.738521]} /> */}\n        {/* `${userGeodata.lat} +','+ ${userGeodata.long} */}\n        <RoutePanel \n            instanceRef={ref => {\n                if (ref) {\n                  ref.routePanel.state.set({\n                    fromEnabled: false,\n                    type: 'masstransit',\n                    from: userGeodata.lat+\",\"+userGeodata.long,\n                    to: \"Москва, метро Братиславская\",\n                    toEnabled: false,\n                  });\n                  ref.routePanel.options.set({\n                    // Запрещаем показ кнопки, позволяющей менять местами начальную и конечную точки маршрута.\n                    allowSwitch: false,\n                    // Включим определение адреса по координатам клика.\n                    // Адрес будет автоматически подставляться в поле ввода на панели, а также в подпись метки маршрута.\n                    reverseGeocoding: true,\n                    // Зададим виды маршрутизации, которые будут доступны пользователям для выбора.\n                    types: { masstransit: false, pedestrian: false, taxi: false }\n                  })\n                }\n            }}\n            options={{ \n                float: 'right',\n            }}\n         />\n        </Map>\n      </YMaps>\n\n      </div>\n      <div className=\"row\">\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader, PanelHeaderButton, platform, IOS } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport Timer from './Geodata'\n\nimport './Сourier.css';\n\nconst osName = platform();\n\nconst Сourier = props => (\n    <Panel id={props.id}>\n      <PanelHeader\n        noShadow left={\n          <PanelHeaderButton onClick={props.go} data-to=\"home\">\n          {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n          </PanelHeaderButton>\n        }\n      >\n        Карта\n      </PanelHeader>\t\n      <Timer/> \n    </Panel>\n  );\n  \n  Сourier.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n};\n\n\nexport default Сourier;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Business.css';\n\nconst osName = platform();\n\nconst Business = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Business\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nBusiness.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Business;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport {View } from '@vkontakte/vkui';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Client from './panels/Client';\nimport Сourier from './panels/Сourier';\nimport Business from './panels/Business';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t\t<View id='main' activePanel={activePanel} popout={popout}>\n\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t<Client id='client' go={go} />\n\t\t\t\t<Сourier id='courier' go={go} />\n\t\t\t\t<Business id='business' go={go} />\n\t\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}